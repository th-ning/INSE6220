2023-04-23 21:16:58,285:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\seaborn\categorical.py:166: FutureWarning: Setting a gradient palette using color= is deprecated and will be removed in version 0.13. Set `palette='dark:.25'` for same effect.
  warnings.warn(msg, FutureWarning)

2023-04-23 21:16:58,396:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\matplotlib\collections.py:963: RuntimeWarning: invalid value encountered in sqrt
  scale = np.sqrt(self._sizes) * dpi / 72.0 * self._factor

2023-04-23 21:23:02,470:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\seaborn\categorical.py:166: FutureWarning: Setting a gradient palette using color= is deprecated and will be removed in version 0.13. Set `palette='dark:.25'` for same effect.
  warnings.warn(msg, FutureWarning)

2023-04-23 21:23:02,591:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\matplotlib\collections.py:963: RuntimeWarning: invalid value encountered in sqrt
  scale = np.sqrt(self._sizes) * dpi / 72.0 * self._factor

2023-04-23 21:23:02,973:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\matplotlib\collections.py:963: RuntimeWarning: invalid value encountered in sqrt
  scale = np.sqrt(self._sizes) * dpi / 72.0 * self._factor

2023-04-23 21:24:46,823:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\seaborn\categorical.py:166: FutureWarning: Setting a gradient palette using color= is deprecated and will be removed in version 0.13. Set `palette='dark:.25'` for same effect.
  warnings.warn(msg, FutureWarning)

2023-04-23 21:24:46,930:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\matplotlib\collections.py:963: RuntimeWarning: invalid value encountered in sqrt
  scale = np.sqrt(self._sizes) * dpi / 72.0 * self._factor

2023-04-23 21:24:47,285:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\matplotlib\collections.py:963: RuntimeWarning: invalid value encountered in sqrt
  scale = np.sqrt(self._sizes) * dpi / 72.0 * self._factor

2023-04-23 21:25:02,110:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\cupy\_environment.py:213: UserWarning: CUDA path could not be detected. Set CUDA_PATH environment variable if CuPy fails to load.
  warnings.warn(

2023-04-23 21:25:02,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-23 21:25:02,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-23 21:25:02,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-23 21:25:02,759:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-23 21:25:04,458:INFO:Soft dependency imported: prophet: 1.1.2
2023-04-23 21:25:04,729:INFO:PyCaret ClassificationExperiment
2023-04-23 21:25:04,729:INFO:Logging name: clf-default-name
2023-04-23 21:25:04,729:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-23 21:25:04,729:INFO:version 3.0.0
2023-04-23 21:25:04,729:INFO:Initializing setup()
2023-04-23 21:25:04,729:INFO:self.USI: 4cf1
2023-04-23 21:25:04,729:INFO:self._variable_keys: {'exp_id', 'X_train', 'target_param', 'seed', 'y', 'html_param', 'pipeline', 'fold_generator', 'gpu_param', 'USI', '_available_plots', 'data', 'logging_param', 'gpu_n_jobs_param', 'fold_shuffle_param', 'exp_name_log', 'y_train', 'fix_imbalance', 'log_plots_param', 'is_multiclass', '_ml_usecase', 'X_test', 'X', 'y_test', 'idx', 'fold_groups_param', 'n_jobs_param', 'memory'}
2023-04-23 21:25:04,729:INFO:Checking environment
2023-04-23 21:25:04,729:INFO:python_version: 3.10.0
2023-04-23 21:25:04,729:INFO:python_build: ('tags/v3.10.0:b494f59', 'Oct  4 2021 19:00:18')
2023-04-23 21:25:04,729:INFO:machine: AMD64
2023-04-23 21:25:04,743:INFO:platform: Windows-10-10.0.19044-SP0
2023-04-23 21:25:04,745:INFO:Memory: svmem(total=34070519808, available=18728366080, percent=45.0, used=15342153728, free=18728366080)
2023-04-23 21:25:04,745:INFO:Physical Core: 12
2023-04-23 21:25:04,745:INFO:Logical Core: 20
2023-04-23 21:25:04,745:INFO:Checking libraries
2023-04-23 21:25:04,745:INFO:System:
2023-04-23 21:25:04,745:INFO:    python: 3.10.0 (tags/v3.10.0:b494f59, Oct  4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]
2023-04-23 21:25:04,746:INFO:executable: C:\Users\123456\Documents\Github\INSE6210\venv\Scripts\python.exe
2023-04-23 21:25:04,746:INFO:   machine: Windows-10-10.0.19044-SP0
2023-04-23 21:25:04,746:INFO:PyCaret required dependencies:
2023-04-23 21:25:04,746:INFO:                 pip: 23.1.1
2023-04-23 21:25:04,746:INFO:          setuptools: 67.7.1
2023-04-23 21:25:04,746:INFO:             pycaret: 3.0.0
2023-04-23 21:25:04,746:INFO:             IPython: 7.34.0
2023-04-23 21:25:04,746:INFO:          ipywidgets: 7.7.1
2023-04-23 21:25:04,746:INFO:                tqdm: 4.65.0
2023-04-23 21:25:04,746:INFO:               numpy: 1.23.5
2023-04-23 21:25:04,746:INFO:              pandas: 1.5.3
2023-04-23 21:25:04,746:INFO:              jinja2: 3.1.2
2023-04-23 21:25:04,746:INFO:               scipy: 1.10.1
2023-04-23 21:25:04,746:INFO:              joblib: 1.2.0
2023-04-23 21:25:04,746:INFO:             sklearn: 1.2.2
2023-04-23 21:25:04,746:INFO:                pyod: 1.0.9
2023-04-23 21:25:04,746:INFO:            imblearn: 0.10.1
2023-04-23 21:25:04,746:INFO:   category_encoders: 2.6.0
2023-04-23 21:25:04,746:INFO:            lightgbm: 3.3.5
2023-04-23 21:25:04,746:INFO:               numba: 0.56.4
2023-04-23 21:25:04,746:INFO:            requests: 2.27.1
2023-04-23 21:25:04,746:INFO:          matplotlib: 3.7.1
2023-04-23 21:25:04,746:INFO:          scikitplot: 0.3.7
2023-04-23 21:25:04,746:INFO:         yellowbrick: 1.5
2023-04-23 21:25:04,746:INFO:              plotly: 5.13.1
2023-04-23 21:25:04,746:INFO:             kaleido: 0.2.1
2023-04-23 21:25:04,746:INFO:         statsmodels: 0.13.5
2023-04-23 21:25:04,746:INFO:              sktime: 0.17.1
2023-04-23 21:25:04,746:INFO:               tbats: 1.1.3
2023-04-23 21:25:04,746:INFO:            pmdarima: 2.0.3
2023-04-23 21:25:04,746:INFO:              psutil: 5.9.5
2023-04-23 21:25:04,746:INFO:PyCaret optional dependencies:
2023-04-23 21:25:04,754:INFO:                shap: 0.41.0
2023-04-23 21:25:04,754:INFO:           interpret: Not installed
2023-04-23 21:25:04,754:INFO:                umap: Not installed
2023-04-23 21:25:04,754:INFO:    pandas_profiling: Not installed
2023-04-23 21:25:04,754:INFO:  explainerdashboard: Not installed
2023-04-23 21:25:04,754:INFO:             autoviz: Not installed
2023-04-23 21:25:04,754:INFO:           fairlearn: Not installed
2023-04-23 21:25:04,754:INFO:             xgboost: 1.7.5
2023-04-23 21:25:04,754:INFO:            catboost: Not installed
2023-04-23 21:25:04,754:INFO:              kmodes: Not installed
2023-04-23 21:25:04,754:INFO:             mlxtend: 0.14.0
2023-04-23 21:25:04,754:INFO:       statsforecast: Not installed
2023-04-23 21:25:04,754:INFO:        tune_sklearn: Not installed
2023-04-23 21:25:04,754:INFO:                 ray: Not installed
2023-04-23 21:25:04,754:INFO:            hyperopt: 0.2.7
2023-04-23 21:25:04,754:INFO:              optuna: Not installed
2023-04-23 21:25:04,754:INFO:               skopt: Not installed
2023-04-23 21:25:04,754:INFO:              mlflow: Not installed
2023-04-23 21:25:04,754:INFO:              gradio: Not installed
2023-04-23 21:25:04,754:INFO:             fastapi: Not installed
2023-04-23 21:25:04,754:INFO:             uvicorn: Not installed
2023-04-23 21:25:04,754:INFO:              m2cgen: Not installed
2023-04-23 21:25:04,754:INFO:           evidently: Not installed
2023-04-23 21:25:04,754:INFO:               fugue: Not installed
2023-04-23 21:25:04,754:INFO:           streamlit: Not installed
2023-04-23 21:25:04,754:INFO:             prophet: 1.1.2
2023-04-23 21:25:04,754:INFO:None
2023-04-23 21:25:04,754:INFO:Set up data.
2023-04-23 21:25:04,757:INFO:Set up train/test split.
2023-04-23 21:25:04,759:INFO:Set up index.
2023-04-23 21:25:04,759:INFO:Set up folding strategy.
2023-04-23 21:25:04,759:INFO:Assigning column types.
2023-04-23 21:25:04,760:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-23 21:25:04,782:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-23 21:25:04,787:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-23 21:25:04,819:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-23 21:25:05,609:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-23 21:25:05,633:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-23 21:25:05,634:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-23 21:25:05,647:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-23 21:25:05,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-23 21:25:05,648:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-23 21:25:05,672:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-23 21:25:05,685:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-23 21:25:05,686:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-23 21:25:05,707:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-23 21:25:05,722:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-23 21:25:05,723:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-23 21:25:05,723:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-23 21:25:05,758:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-23 21:25:05,759:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-23 21:25:05,795:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-23 21:25:05,796:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-23 21:25:05,799:INFO:Preparing preprocessing pipeline...
2023-04-23 21:25:05,800:INFO:Set up label encoding.
2023-04-23 21:25:05,800:INFO:Set up simple imputation.
2023-04-23 21:25:05,813:INFO:Finished creating preprocessing pipeline.
2023-04-23 21:25:05,818:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\123456\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['AR', 'PR', 'CP', 'LK', 'WD', 'AS',
                                             'LG'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-04-23 21:25:05,818:INFO:Creating final display dataframe.
2023-04-23 21:25:05,849:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             class
2                   Target type        Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2
4           Original data shape          (189, 8)
5        Transformed data shape          (189, 8)
6   Transformed train set shape          (132, 8)
7    Transformed test set shape           (57, 8)
8              Numeric features                 7
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              4cf1
2023-04-23 21:25:05,887:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-23 21:25:05,888:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-23 21:25:05,924:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-23 21:25:05,925:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-23 21:25:05,926:INFO:setup() successfully completed in 1.2s...............
2023-04-23 21:25:05,926:INFO:Initializing compare_models()
2023-04-23 21:25:05,926:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-04-23 21:25:05,926:INFO:Checking exceptions
2023-04-23 21:25:05,927:INFO:Preparing display monitor
2023-04-23 21:25:05,929:INFO:Initializing Logistic Regression
2023-04-23 21:25:05,929:INFO:Total runtime is 0.0 minutes
2023-04-23 21:25:05,929:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:05,930:INFO:Initializing create_model()
2023-04-23 21:25:05,930:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365A5926B0>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:05,930:INFO:Checking exceptions
2023-04-23 21:25:05,930:INFO:Importing libraries
2023-04-23 21:25:05,930:INFO:Copying training dataset
2023-04-23 21:25:05,931:INFO:Defining folds
2023-04-23 21:25:05,931:INFO:Declaring metric variables
2023-04-23 21:25:05,931:INFO:Importing untrained model
2023-04-23 21:25:05,931:INFO:Logistic Regression Imported successfully
2023-04-23 21:25:05,931:INFO:Starting cross validation
2023-04-23 21:25:05,932:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:07,773:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,774:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,775:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,791:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,792:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,793:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,802:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,803:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,804:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,821:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,822:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,823:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,840:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,841:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,841:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,843:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,844:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,845:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,858:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,859:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,860:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,866:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,867:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,868:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,874:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,874:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,875:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,886:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,887:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,887:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:07,889:INFO:Calculating mean and std
2023-04-23 21:25:07,890:INFO:Creating metrics dataframe
2023-04-23 21:25:07,892:INFO:Uploading results into container
2023-04-23 21:25:07,893:INFO:Uploading model into container now
2023-04-23 21:25:07,893:INFO:_master_model_container: 1
2023-04-23 21:25:07,893:INFO:_display_container: 2
2023-04-23 21:25:07,893:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-23 21:25:07,893:INFO:create_model() successfully completed......................................
2023-04-23 21:25:07,959:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:07,959:INFO:Creating metrics dataframe
2023-04-23 21:25:07,962:INFO:Initializing K Neighbors Classifier
2023-04-23 21:25:07,962:INFO:Total runtime is 0.03387900193532308 minutes
2023-04-23 21:25:07,962:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:07,962:INFO:Initializing create_model()
2023-04-23 21:25:07,962:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365A5926B0>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:07,962:INFO:Checking exceptions
2023-04-23 21:25:07,962:INFO:Importing libraries
2023-04-23 21:25:07,962:INFO:Copying training dataset
2023-04-23 21:25:07,963:INFO:Defining folds
2023-04-23 21:25:07,963:INFO:Declaring metric variables
2023-04-23 21:25:07,963:INFO:Importing untrained model
2023-04-23 21:25:07,964:INFO:K Neighbors Classifier Imported successfully
2023-04-23 21:25:07,964:INFO:Starting cross validation
2023-04-23 21:25:07,964:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:09,264:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,264:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,265:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,265:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,266:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,267:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,270:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,272:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,273:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,292:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,294:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,295:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,296:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,296:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,297:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,297:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,298:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,299:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,308:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,308:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,309:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,309:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,309:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,311:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,315:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,316:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,317:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,322:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,323:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,324:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,326:INFO:Calculating mean and std
2023-04-23 21:25:09,327:INFO:Creating metrics dataframe
2023-04-23 21:25:09,332:INFO:Uploading results into container
2023-04-23 21:25:09,332:INFO:Uploading model into container now
2023-04-23 21:25:09,333:INFO:_master_model_container: 2
2023-04-23 21:25:09,333:INFO:_display_container: 2
2023-04-23 21:25:09,333:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-23 21:25:09,333:INFO:create_model() successfully completed......................................
2023-04-23 21:25:09,405:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:09,406:INFO:Creating metrics dataframe
2023-04-23 21:25:09,408:INFO:Initializing Naive Bayes
2023-04-23 21:25:09,408:INFO:Total runtime is 0.05799166361490886 minutes
2023-04-23 21:25:09,408:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:09,408:INFO:Initializing create_model()
2023-04-23 21:25:09,408:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365A5926B0>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:09,408:INFO:Checking exceptions
2023-04-23 21:25:09,408:INFO:Importing libraries
2023-04-23 21:25:09,408:INFO:Copying training dataset
2023-04-23 21:25:09,411:INFO:Defining folds
2023-04-23 21:25:09,411:INFO:Declaring metric variables
2023-04-23 21:25:09,411:INFO:Importing untrained model
2023-04-23 21:25:09,411:INFO:Naive Bayes Imported successfully
2023-04-23 21:25:09,411:INFO:Starting cross validation
2023-04-23 21:25:09,411:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:09,447:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,448:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,448:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,450:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,451:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,451:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,461:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,462:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,462:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,463:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,463:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,463:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,468:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,468:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,469:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,469:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,470:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,470:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,471:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,471:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,472:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,477:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,478:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,479:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,486:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,487:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,487:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,488:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,488:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,488:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,490:INFO:Calculating mean and std
2023-04-23 21:25:09,490:INFO:Creating metrics dataframe
2023-04-23 21:25:09,493:INFO:Uploading results into container
2023-04-23 21:25:09,493:INFO:Uploading model into container now
2023-04-23 21:25:09,493:INFO:_master_model_container: 3
2023-04-23 21:25:09,493:INFO:_display_container: 2
2023-04-23 21:25:09,493:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-23 21:25:09,493:INFO:create_model() successfully completed......................................
2023-04-23 21:25:09,558:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:09,559:INFO:Creating metrics dataframe
2023-04-23 21:25:09,561:INFO:Initializing Decision Tree Classifier
2023-04-23 21:25:09,561:INFO:Total runtime is 0.06053002278010051 minutes
2023-04-23 21:25:09,561:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:09,561:INFO:Initializing create_model()
2023-04-23 21:25:09,562:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365A5926B0>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:09,562:INFO:Checking exceptions
2023-04-23 21:25:09,562:INFO:Importing libraries
2023-04-23 21:25:09,562:INFO:Copying training dataset
2023-04-23 21:25:09,563:INFO:Defining folds
2023-04-23 21:25:09,563:INFO:Declaring metric variables
2023-04-23 21:25:09,563:INFO:Importing untrained model
2023-04-23 21:25:09,563:INFO:Decision Tree Classifier Imported successfully
2023-04-23 21:25:09,563:INFO:Starting cross validation
2023-04-23 21:25:09,564:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:09,602:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,603:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,604:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,604:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,604:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,605:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,610:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,610:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,611:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,616:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,617:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,618:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,618:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,618:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,619:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,625:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,625:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,626:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,633:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,633:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,634:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,634:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,635:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,636:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,639:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,639:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,640:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,641:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,641:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,642:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,644:INFO:Calculating mean and std
2023-04-23 21:25:09,644:INFO:Creating metrics dataframe
2023-04-23 21:25:09,646:INFO:Uploading results into container
2023-04-23 21:25:09,647:INFO:Uploading model into container now
2023-04-23 21:25:09,647:INFO:_master_model_container: 4
2023-04-23 21:25:09,647:INFO:_display_container: 2
2023-04-23 21:25:09,647:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-23 21:25:09,647:INFO:create_model() successfully completed......................................
2023-04-23 21:25:09,708:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:09,708:INFO:Creating metrics dataframe
2023-04-23 21:25:09,711:INFO:Initializing SVM - Linear Kernel
2023-04-23 21:25:09,711:INFO:Total runtime is 0.06303186416625976 minutes
2023-04-23 21:25:09,711:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:09,711:INFO:Initializing create_model()
2023-04-23 21:25:09,711:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365A5926B0>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:09,711:INFO:Checking exceptions
2023-04-23 21:25:09,711:INFO:Importing libraries
2023-04-23 21:25:09,711:INFO:Copying training dataset
2023-04-23 21:25:09,712:INFO:Defining folds
2023-04-23 21:25:09,712:INFO:Declaring metric variables
2023-04-23 21:25:09,712:INFO:Importing untrained model
2023-04-23 21:25:09,713:INFO:SVM - Linear Kernel Imported successfully
2023-04-23 21:25:09,713:INFO:Starting cross validation
2023-04-23 21:25:09,713:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:09,775:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-23 21:25:09,775:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-23 21:25:09,776:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,776:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,776:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,776:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,776:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,777:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,777:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,777:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,777:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,780:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-23 21:25:09,780:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-23 21:25:09,781:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,781:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-23 21:25:09,781:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,781:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,782:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-23 21:25:09,782:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,782:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,782:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,783:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,783:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,783:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,783:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,784:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,786:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,790:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-23 21:25:09,790:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,791:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-23 21:25:09,791:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,791:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,791:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,792:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,792:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-23 21:25:09,792:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-23 21:25:09,792:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,792:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,793:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,794:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,796:INFO:Calculating mean and std
2023-04-23 21:25:09,796:INFO:Creating metrics dataframe
2023-04-23 21:25:09,798:INFO:Uploading results into container
2023-04-23 21:25:09,799:INFO:Uploading model into container now
2023-04-23 21:25:09,799:INFO:_master_model_container: 5
2023-04-23 21:25:09,799:INFO:_display_container: 2
2023-04-23 21:25:09,799:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-04-23 21:25:09,799:INFO:create_model() successfully completed......................................
2023-04-23 21:25:09,866:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:09,866:INFO:Creating metrics dataframe
2023-04-23 21:25:09,868:INFO:Initializing Ridge Classifier
2023-04-23 21:25:09,868:INFO:Total runtime is 0.06564772526423136 minutes
2023-04-23 21:25:09,868:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:09,868:INFO:Initializing create_model()
2023-04-23 21:25:09,868:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365A5926B0>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:09,868:INFO:Checking exceptions
2023-04-23 21:25:09,868:INFO:Importing libraries
2023-04-23 21:25:09,868:INFO:Copying training dataset
2023-04-23 21:25:09,870:INFO:Defining folds
2023-04-23 21:25:09,870:INFO:Declaring metric variables
2023-04-23 21:25:09,870:INFO:Importing untrained model
2023-04-23 21:25:09,870:INFO:Ridge Classifier Imported successfully
2023-04-23 21:25:09,870:INFO:Starting cross validation
2023-04-23 21:25:09,871:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:09,909:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:09,909:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,910:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,911:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,914:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:09,914:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,915:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,915:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:09,915:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,915:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,916:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,917:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,917:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:09,918:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,918:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,919:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,919:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:09,920:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,921:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,921:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,925:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:09,925:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,926:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,926:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,928:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:09,929:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,929:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,930:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,935:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:09,936:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,936:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,937:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,941:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:09,941:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,942:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,942:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,944:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:09,944:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,945:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,945:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:09,947:INFO:Calculating mean and std
2023-04-23 21:25:09,947:INFO:Creating metrics dataframe
2023-04-23 21:25:09,950:INFO:Uploading results into container
2023-04-23 21:25:09,950:INFO:Uploading model into container now
2023-04-23 21:25:09,950:INFO:_master_model_container: 6
2023-04-23 21:25:09,950:INFO:_display_container: 2
2023-04-23 21:25:09,950:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-04-23 21:25:09,950:INFO:create_model() successfully completed......................................
2023-04-23 21:25:10,013:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:10,013:INFO:Creating metrics dataframe
2023-04-23 21:25:10,015:INFO:Initializing Random Forest Classifier
2023-04-23 21:25:10,015:INFO:Total runtime is 0.06809554894765218 minutes
2023-04-23 21:25:10,016:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:10,016:INFO:Initializing create_model()
2023-04-23 21:25:10,016:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365A5926B0>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:10,016:INFO:Checking exceptions
2023-04-23 21:25:10,016:INFO:Importing libraries
2023-04-23 21:25:10,016:INFO:Copying training dataset
2023-04-23 21:25:10,017:INFO:Defining folds
2023-04-23 21:25:10,017:INFO:Declaring metric variables
2023-04-23 21:25:10,017:INFO:Importing untrained model
2023-04-23 21:25:10,017:INFO:Random Forest Classifier Imported successfully
2023-04-23 21:25:10,018:INFO:Starting cross validation
2023-04-23 21:25:10,018:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:10,351:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,352:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,352:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,353:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,353:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,353:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,355:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,356:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,357:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,361:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,362:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,362:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,362:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,364:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,372:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,372:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,372:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,373:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,373:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,374:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,374:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,374:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,375:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,377:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,378:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,378:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,383:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,383:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,384:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,387:INFO:Calculating mean and std
2023-04-23 21:25:10,387:INFO:Creating metrics dataframe
2023-04-23 21:25:10,392:INFO:Uploading results into container
2023-04-23 21:25:10,393:INFO:Uploading model into container now
2023-04-23 21:25:10,393:INFO:_master_model_container: 7
2023-04-23 21:25:10,393:INFO:_display_container: 2
2023-04-23 21:25:10,393:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-23 21:25:10,393:INFO:create_model() successfully completed......................................
2023-04-23 21:25:10,459:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:10,459:INFO:Creating metrics dataframe
2023-04-23 21:25:10,462:INFO:Initializing Quadratic Discriminant Analysis
2023-04-23 21:25:10,462:INFO:Total runtime is 0.07554900646209717 minutes
2023-04-23 21:25:10,462:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:10,462:INFO:Initializing create_model()
2023-04-23 21:25:10,462:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365A5926B0>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:10,462:INFO:Checking exceptions
2023-04-23 21:25:10,462:INFO:Importing libraries
2023-04-23 21:25:10,462:INFO:Copying training dataset
2023-04-23 21:25:10,463:INFO:Defining folds
2023-04-23 21:25:10,463:INFO:Declaring metric variables
2023-04-23 21:25:10,464:INFO:Importing untrained model
2023-04-23 21:25:10,464:INFO:Quadratic Discriminant Analysis Imported successfully
2023-04-23 21:25:10,464:INFO:Starting cross validation
2023-04-23 21:25:10,464:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:10,515:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,515:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,516:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,524:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,525:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,525:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,530:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,530:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,531:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,531:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,532:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,532:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,535:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,536:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,538:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,539:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,539:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,540:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,540:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,541:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,541:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,541:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,542:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,542:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,545:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,545:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,547:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,551:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,552:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,552:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,556:INFO:Calculating mean and std
2023-04-23 21:25:10,556:INFO:Creating metrics dataframe
2023-04-23 21:25:10,562:INFO:Uploading results into container
2023-04-23 21:25:10,562:INFO:Uploading model into container now
2023-04-23 21:25:10,562:INFO:_master_model_container: 8
2023-04-23 21:25:10,562:INFO:_display_container: 2
2023-04-23 21:25:10,562:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-04-23 21:25:10,562:INFO:create_model() successfully completed......................................
2023-04-23 21:25:10,627:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:10,627:INFO:Creating metrics dataframe
2023-04-23 21:25:10,630:INFO:Initializing Ada Boost Classifier
2023-04-23 21:25:10,630:INFO:Total runtime is 0.07835447788238525 minutes
2023-04-23 21:25:10,630:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:10,630:INFO:Initializing create_model()
2023-04-23 21:25:10,630:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365A5926B0>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:10,630:INFO:Checking exceptions
2023-04-23 21:25:10,630:INFO:Importing libraries
2023-04-23 21:25:10,630:INFO:Copying training dataset
2023-04-23 21:25:10,632:INFO:Defining folds
2023-04-23 21:25:10,632:INFO:Declaring metric variables
2023-04-23 21:25:10,632:INFO:Importing untrained model
2023-04-23 21:25:10,632:INFO:Ada Boost Classifier Imported successfully
2023-04-23 21:25:10,632:INFO:Starting cross validation
2023-04-23 21:25:10,632:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:10,739:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,739:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,740:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,762:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,762:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,762:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,763:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,763:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,763:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,769:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,769:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,770:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,770:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,771:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,771:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,771:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,773:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,773:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,778:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,779:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,779:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,792:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,793:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,794:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,799:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,800:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,801:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,801:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,802:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,803:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:10,806:INFO:Calculating mean and std
2023-04-23 21:25:10,806:INFO:Creating metrics dataframe
2023-04-23 21:25:10,812:INFO:Uploading results into container
2023-04-23 21:25:10,812:INFO:Uploading model into container now
2023-04-23 21:25:10,812:INFO:_master_model_container: 9
2023-04-23 21:25:10,813:INFO:_display_container: 2
2023-04-23 21:25:10,813:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-04-23 21:25:10,813:INFO:create_model() successfully completed......................................
2023-04-23 21:25:10,880:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:10,880:INFO:Creating metrics dataframe
2023-04-23 21:25:10,882:INFO:Initializing Gradient Boosting Classifier
2023-04-23 21:25:10,882:INFO:Total runtime is 0.08254351615905761 minutes
2023-04-23 21:25:10,882:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:10,883:INFO:Initializing create_model()
2023-04-23 21:25:10,883:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365A5926B0>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:10,883:INFO:Checking exceptions
2023-04-23 21:25:10,883:INFO:Importing libraries
2023-04-23 21:25:10,883:INFO:Copying training dataset
2023-04-23 21:25:10,884:INFO:Defining folds
2023-04-23 21:25:10,884:INFO:Declaring metric variables
2023-04-23 21:25:10,884:INFO:Importing untrained model
2023-04-23 21:25:10,884:INFO:Gradient Boosting Classifier Imported successfully
2023-04-23 21:25:10,885:INFO:Starting cross validation
2023-04-23 21:25:10,885:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:11,466:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,467:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,468:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,483:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,485:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,486:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,490:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,491:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,491:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,510:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,511:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,513:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,515:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,516:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,516:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,516:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,516:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,517:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,517:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,518:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,519:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,527:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,528:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,529:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,536:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,537:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,537:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,550:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,551:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,551:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,553:INFO:Calculating mean and std
2023-04-23 21:25:11,553:INFO:Creating metrics dataframe
2023-04-23 21:25:11,561:INFO:Uploading results into container
2023-04-23 21:25:11,562:INFO:Uploading model into container now
2023-04-23 21:25:11,562:INFO:_master_model_container: 10
2023-04-23 21:25:11,562:INFO:_display_container: 2
2023-04-23 21:25:11,562:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-23 21:25:11,562:INFO:create_model() successfully completed......................................
2023-04-23 21:25:11,626:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:11,626:INFO:Creating metrics dataframe
2023-04-23 21:25:11,629:INFO:Initializing Linear Discriminant Analysis
2023-04-23 21:25:11,629:INFO:Total runtime is 0.09500768184661865 minutes
2023-04-23 21:25:11,629:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:11,629:INFO:Initializing create_model()
2023-04-23 21:25:11,630:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365A5926B0>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:11,630:INFO:Checking exceptions
2023-04-23 21:25:11,630:INFO:Importing libraries
2023-04-23 21:25:11,630:INFO:Copying training dataset
2023-04-23 21:25:11,631:INFO:Defining folds
2023-04-23 21:25:11,631:INFO:Declaring metric variables
2023-04-23 21:25:11,631:INFO:Importing untrained model
2023-04-23 21:25:11,631:INFO:Linear Discriminant Analysis Imported successfully
2023-04-23 21:25:11,631:INFO:Starting cross validation
2023-04-23 21:25:11,632:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:11,669:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,670:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,670:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,673:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,674:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,674:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,681:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,682:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,683:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,694:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,695:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,696:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,698:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,698:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,699:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,700:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,700:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,701:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,707:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,707:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,708:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,708:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,708:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,709:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,709:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,709:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,710:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,710:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,710:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,711:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:11,738:INFO:Calculating mean and std
2023-04-23 21:25:11,739:INFO:Creating metrics dataframe
2023-04-23 21:25:11,746:INFO:Uploading results into container
2023-04-23 21:25:11,747:INFO:Uploading model into container now
2023-04-23 21:25:11,747:INFO:_master_model_container: 11
2023-04-23 21:25:11,747:INFO:_display_container: 2
2023-04-23 21:25:11,747:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-04-23 21:25:11,747:INFO:create_model() successfully completed......................................
2023-04-23 21:25:11,813:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:11,813:INFO:Creating metrics dataframe
2023-04-23 21:25:11,816:INFO:Initializing Extra Trees Classifier
2023-04-23 21:25:11,816:INFO:Total runtime is 0.09811651309331258 minutes
2023-04-23 21:25:11,816:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:11,816:INFO:Initializing create_model()
2023-04-23 21:25:11,816:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365A5926B0>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:11,816:INFO:Checking exceptions
2023-04-23 21:25:11,816:INFO:Importing libraries
2023-04-23 21:25:11,816:INFO:Copying training dataset
2023-04-23 21:25:11,818:INFO:Defining folds
2023-04-23 21:25:11,818:INFO:Declaring metric variables
2023-04-23 21:25:11,818:INFO:Importing untrained model
2023-04-23 21:25:11,818:INFO:Extra Trees Classifier Imported successfully
2023-04-23 21:25:11,818:INFO:Starting cross validation
2023-04-23 21:25:11,819:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:12,065:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,066:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,067:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,073:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,074:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,075:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,080:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,080:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,081:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,081:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,082:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,082:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,082:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,082:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,083:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,117:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,118:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,118:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,119:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,120:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,120:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,127:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,128:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,129:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,136:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,136:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,137:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,151:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,152:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,153:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,154:INFO:Calculating mean and std
2023-04-23 21:25:12,155:INFO:Creating metrics dataframe
2023-04-23 21:25:12,164:INFO:Uploading results into container
2023-04-23 21:25:12,165:INFO:Uploading model into container now
2023-04-23 21:25:12,165:INFO:_master_model_container: 12
2023-04-23 21:25:12,165:INFO:_display_container: 2
2023-04-23 21:25:12,165:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-04-23 21:25:12,165:INFO:create_model() successfully completed......................................
2023-04-23 21:25:12,230:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:12,230:INFO:Creating metrics dataframe
2023-04-23 21:25:12,232:INFO:Initializing Extreme Gradient Boosting
2023-04-23 21:25:12,232:INFO:Total runtime is 0.10505692958831787 minutes
2023-04-23 21:25:12,232:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:12,233:INFO:Initializing create_model()
2023-04-23 21:25:12,233:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365A5926B0>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:12,233:INFO:Checking exceptions
2023-04-23 21:25:12,233:INFO:Importing libraries
2023-04-23 21:25:12,233:INFO:Copying training dataset
2023-04-23 21:25:12,234:INFO:Defining folds
2023-04-23 21:25:12,234:INFO:Declaring metric variables
2023-04-23 21:25:12,234:INFO:Importing untrained model
2023-04-23 21:25:12,234:INFO:Extreme Gradient Boosting Imported successfully
2023-04-23 21:25:12,235:INFO:Starting cross validation
2023-04-23 21:25:12,235:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:12,378:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,378:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,379:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,384:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,385:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,385:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,385:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,386:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,386:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,395:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,396:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,396:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,396:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,397:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,398:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,402:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,404:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,404:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,404:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,405:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,406:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,406:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,407:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,407:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,409:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,410:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,411:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,432:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,433:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,434:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:12,445:INFO:Calculating mean and std
2023-04-23 21:25:12,445:INFO:Creating metrics dataframe
2023-04-23 21:25:12,455:INFO:Uploading results into container
2023-04-23 21:25:12,455:INFO:Uploading model into container now
2023-04-23 21:25:12,455:INFO:_master_model_container: 13
2023-04-23 21:25:12,456:INFO:_display_container: 2
2023-04-23 21:25:12,456:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-04-23 21:25:12,456:INFO:create_model() successfully completed......................................
2023-04-23 21:25:12,521:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:12,521:INFO:Creating metrics dataframe
2023-04-23 21:25:12,523:INFO:Initializing Light Gradient Boosting Machine
2023-04-23 21:25:12,523:INFO:Total runtime is 0.10990782181421915 minutes
2023-04-23 21:25:12,523:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:12,524:INFO:Initializing create_model()
2023-04-23 21:25:12,524:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365A5926B0>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:12,524:INFO:Checking exceptions
2023-04-23 21:25:12,524:INFO:Importing libraries
2023-04-23 21:25:12,524:INFO:Copying training dataset
2023-04-23 21:25:12,525:INFO:Defining folds
2023-04-23 21:25:12,525:INFO:Declaring metric variables
2023-04-23 21:25:12,525:INFO:Importing untrained model
2023-04-23 21:25:12,525:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-23 21:25:12,526:INFO:Starting cross validation
2023-04-23 21:25:12,526:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:12,678:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\cupy\_environment.py:213: UserWarning: CUDA path could not be detected. Set CUDA_PATH environment variable if CuPy fails to load.
  warnings.warn(

2023-04-23 21:25:12,680:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\cupy\_environment.py:213: UserWarning: CUDA path could not be detected. Set CUDA_PATH environment variable if CuPy fails to load.
  warnings.warn(

2023-04-23 21:25:12,683:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\cupy\_environment.py:213: UserWarning: CUDA path could not be detected. Set CUDA_PATH environment variable if CuPy fails to load.
  warnings.warn(

2023-04-23 21:25:12,687:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\cupy\_environment.py:213: UserWarning: CUDA path could not be detected. Set CUDA_PATH environment variable if CuPy fails to load.
  warnings.warn(

2023-04-23 21:25:12,689:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\cupy\_environment.py:213: UserWarning: CUDA path could not be detected. Set CUDA_PATH environment variable if CuPy fails to load.
  warnings.warn(

2023-04-23 21:25:12,689:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\cupy\_environment.py:213: UserWarning: CUDA path could not be detected. Set CUDA_PATH environment variable if CuPy fails to load.
  warnings.warn(

2023-04-23 21:25:12,695:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\cupy\_environment.py:213: UserWarning: CUDA path could not be detected. Set CUDA_PATH environment variable if CuPy fails to load.
  warnings.warn(

2023-04-23 21:25:12,696:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\cupy\_environment.py:213: UserWarning: CUDA path could not be detected. Set CUDA_PATH environment variable if CuPy fails to load.
  warnings.warn(

2023-04-23 21:25:12,712:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\cupy\_environment.py:213: UserWarning: CUDA path could not be detected. Set CUDA_PATH environment variable if CuPy fails to load.
  warnings.warn(

2023-04-23 21:25:12,717:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\cupy\_environment.py:213: UserWarning: CUDA path could not be detected. Set CUDA_PATH environment variable if CuPy fails to load.
  warnings.warn(

2023-04-23 21:25:13,048:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,049:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,049:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,061:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,061:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,062:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,064:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,065:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,065:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,066:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,066:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,066:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,069:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,070:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,071:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,071:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,073:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,073:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,074:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,074:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,075:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,076:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,076:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,077:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,104:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,105:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,106:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,113:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,114:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,115:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,119:INFO:Calculating mean and std
2023-04-23 21:25:13,119:INFO:Creating metrics dataframe
2023-04-23 21:25:13,129:INFO:Uploading results into container
2023-04-23 21:25:13,129:INFO:Uploading model into container now
2023-04-23 21:25:13,129:INFO:_master_model_container: 14
2023-04-23 21:25:13,129:INFO:_display_container: 2
2023-04-23 21:25:13,130:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-23 21:25:13,130:INFO:create_model() successfully completed......................................
2023-04-23 21:25:13,194:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:13,194:INFO:Creating metrics dataframe
2023-04-23 21:25:13,196:INFO:Initializing Dummy Classifier
2023-04-23 21:25:13,196:INFO:Total runtime is 0.12112560272216796 minutes
2023-04-23 21:25:13,196:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:13,197:INFO:Initializing create_model()
2023-04-23 21:25:13,197:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365A5926B0>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:13,197:INFO:Checking exceptions
2023-04-23 21:25:13,197:INFO:Importing libraries
2023-04-23 21:25:13,197:INFO:Copying training dataset
2023-04-23 21:25:13,198:INFO:Defining folds
2023-04-23 21:25:13,198:INFO:Declaring metric variables
2023-04-23 21:25:13,198:INFO:Importing untrained model
2023-04-23 21:25:13,198:INFO:Dummy Classifier Imported successfully
2023-04-23 21:25:13,198:INFO:Starting cross validation
2023-04-23 21:25:13,199:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:13,235:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,236:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,236:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-23 21:25:13,236:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,238:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,239:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,239:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-23 21:25:13,240:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,255:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,256:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,257:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-23 21:25:13,257:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,261:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,263:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,263:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-23 21:25:13,263:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,263:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,265:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,265:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,266:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-23 21:25:13,266:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,266:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-23 21:25:13,266:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,267:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,270:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,270:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,271:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-23 21:25:13,271:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,276:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,277:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,277:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-23 21:25:13,277:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,286:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,286:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,287:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-23 21:25:13,287:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,291:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,292:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,292:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-23 21:25:13,293:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,315:INFO:Calculating mean and std
2023-04-23 21:25:13,316:INFO:Creating metrics dataframe
2023-04-23 21:25:13,326:INFO:Uploading results into container
2023-04-23 21:25:13,326:INFO:Uploading model into container now
2023-04-23 21:25:13,327:INFO:_master_model_container: 15
2023-04-23 21:25:13,327:INFO:_display_container: 2
2023-04-23 21:25:13,327:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-04-23 21:25:13,327:INFO:create_model() successfully completed......................................
2023-04-23 21:25:13,392:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:13,392:INFO:Creating metrics dataframe
2023-04-23 21:25:13,395:INFO:Initializing create_model()
2023-04-23 21:25:13,396:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:13,396:INFO:Checking exceptions
2023-04-23 21:25:13,396:INFO:Importing libraries
2023-04-23 21:25:13,396:INFO:Copying training dataset
2023-04-23 21:25:13,398:INFO:Defining folds
2023-04-23 21:25:13,398:INFO:Declaring metric variables
2023-04-23 21:25:13,398:INFO:Importing untrained model
2023-04-23 21:25:13,398:INFO:Declaring custom model
2023-04-23 21:25:13,398:INFO:Ridge Classifier Imported successfully
2023-04-23 21:25:13,398:INFO:Cross validation set to False
2023-04-23 21:25:13,398:INFO:Fitting Model
2023-04-23 21:25:13,415:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-04-23 21:25:13,415:INFO:create_model() successfully completed......................................
2023-04-23 21:25:13,490:INFO:_master_model_container: 15
2023-04-23 21:25:13,490:INFO:_display_container: 2
2023-04-23 21:25:13,490:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-04-23 21:25:13,490:INFO:compare_models() successfully completed......................................
2023-04-23 21:25:13,490:INFO:Initializing create_model()
2023-04-23 21:25:13,490:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:13,490:INFO:Checking exceptions
2023-04-23 21:25:13,491:INFO:Importing libraries
2023-04-23 21:25:13,491:INFO:Copying training dataset
2023-04-23 21:25:13,493:INFO:Defining folds
2023-04-23 21:25:13,493:INFO:Declaring metric variables
2023-04-23 21:25:13,493:INFO:Importing untrained model
2023-04-23 21:25:13,493:INFO:Decision Tree Classifier Imported successfully
2023-04-23 21:25:13,493:INFO:Starting cross validation
2023-04-23 21:25:13,493:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:13,532:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,532:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,533:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,533:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,534:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,534:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,552:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,553:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,553:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,556:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,557:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,558:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,563:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,564:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,564:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,567:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,568:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,568:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,568:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,569:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,570:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,571:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,572:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,572:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,573:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,573:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,574:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,575:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,576:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,577:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:13,606:INFO:Calculating mean and std
2023-04-23 21:25:13,606:INFO:Creating metrics dataframe
2023-04-23 21:25:13,607:INFO:Finalizing model
2023-04-23 21:25:13,627:INFO:Uploading results into container
2023-04-23 21:25:13,627:INFO:Uploading model into container now
2023-04-23 21:25:13,632:INFO:_master_model_container: 16
2023-04-23 21:25:13,632:INFO:_display_container: 3
2023-04-23 21:25:13,632:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-23 21:25:13,632:INFO:create_model() successfully completed......................................
2023-04-23 21:25:13,698:INFO:Initializing tune_model()
2023-04-23 21:25:13,698:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>)
2023-04-23 21:25:13,698:INFO:Checking exceptions
2023-04-23 21:25:13,699:INFO:Copying training dataset
2023-04-23 21:25:13,700:INFO:Checking base model
2023-04-23 21:25:13,700:INFO:Base model : Decision Tree Classifier
2023-04-23 21:25:13,701:INFO:Declaring metric variables
2023-04-23 21:25:13,701:INFO:Defining Hyperparameters
2023-04-23 21:25:13,767:INFO:Tuning with n_jobs=-1
2023-04-23 21:25:13,768:INFO:Initializing RandomizedSearchCV
2023-04-23 21:25:14,718:INFO:best_params: {'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.0001, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'gini'}
2023-04-23 21:25:14,718:INFO:Hyperparameter search completed
2023-04-23 21:25:14,718:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:14,718:INFO:Initializing create_model()
2023-04-23 21:25:14,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000136517EC400>, model_only=True, return_train_score=False, kwargs={'min_samples_split': 10, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.0001, 'max_features': 1.0, 'max_depth': 6, 'criterion': 'gini'})
2023-04-23 21:25:14,718:INFO:Checking exceptions
2023-04-23 21:25:14,718:INFO:Importing libraries
2023-04-23 21:25:14,718:INFO:Copying training dataset
2023-04-23 21:25:14,720:INFO:Defining folds
2023-04-23 21:25:14,720:INFO:Declaring metric variables
2023-04-23 21:25:14,720:INFO:Importing untrained model
2023-04-23 21:25:14,720:INFO:Declaring custom model
2023-04-23 21:25:14,720:INFO:Decision Tree Classifier Imported successfully
2023-04-23 21:25:14,720:INFO:Starting cross validation
2023-04-23 21:25:14,721:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:14,758:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,758:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,759:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,762:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,763:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,764:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,780:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,780:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,781:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,782:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,783:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,783:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,787:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,789:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,790:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,793:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,794:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,795:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,796:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,796:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,797:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,797:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,798:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,798:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,799:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,799:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,799:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,800:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,800:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,800:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,841:INFO:Calculating mean and std
2023-04-23 21:25:14,841:INFO:Creating metrics dataframe
2023-04-23 21:25:14,842:INFO:Finalizing model
2023-04-23 21:25:14,861:INFO:Uploading results into container
2023-04-23 21:25:14,862:INFO:Uploading model into container now
2023-04-23 21:25:14,862:INFO:_master_model_container: 17
2023-04-23 21:25:14,862:INFO:_display_container: 4
2023-04-23 21:25:14,862:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=6, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.0001, min_samples_leaf=4,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-23 21:25:14,862:INFO:create_model() successfully completed......................................
2023-04-23 21:25:14,925:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:14,925:INFO:choose_better activated
2023-04-23 21:25:14,925:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:14,925:INFO:Initializing create_model()
2023-04-23 21:25:14,925:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:14,925:INFO:Checking exceptions
2023-04-23 21:25:14,926:INFO:Importing libraries
2023-04-23 21:25:14,926:INFO:Copying training dataset
2023-04-23 21:25:14,927:INFO:Defining folds
2023-04-23 21:25:14,927:INFO:Declaring metric variables
2023-04-23 21:25:14,927:INFO:Importing untrained model
2023-04-23 21:25:14,927:INFO:Declaring custom model
2023-04-23 21:25:14,927:INFO:Decision Tree Classifier Imported successfully
2023-04-23 21:25:14,928:INFO:Starting cross validation
2023-04-23 21:25:14,928:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:14,966:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,967:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,968:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,976:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,978:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,979:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,984:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,984:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,986:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,988:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,989:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,990:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,998:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,999:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:14,999:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,000:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,000:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,001:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,004:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,005:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,007:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,008:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,008:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,009:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,014:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,014:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,015:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,016:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,017:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,018:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,046:INFO:Calculating mean and std
2023-04-23 21:25:15,046:INFO:Creating metrics dataframe
2023-04-23 21:25:15,048:INFO:Finalizing model
2023-04-23 21:25:15,066:INFO:Uploading results into container
2023-04-23 21:25:15,066:INFO:Uploading model into container now
2023-04-23 21:25:15,067:INFO:_master_model_container: 18
2023-04-23 21:25:15,067:INFO:_display_container: 5
2023-04-23 21:25:15,067:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-23 21:25:15,067:INFO:create_model() successfully completed......................................
2023-04-23 21:25:15,130:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:15,131:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best') result for Accuracy is 0.9159
2023-04-23 21:25:15,131:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=6, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.0001, min_samples_leaf=4,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best') result for Accuracy is 0.917
2023-04-23 21:25:15,131:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=6, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.0001, min_samples_leaf=4,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best') is best model
2023-04-23 21:25:15,131:INFO:choose_better completed
2023-04-23 21:25:15,136:INFO:_master_model_container: 18
2023-04-23 21:25:15,136:INFO:_display_container: 4
2023-04-23 21:25:15,136:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=6, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.0001, min_samples_leaf=4,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-23 21:25:15,136:INFO:tune_model() successfully completed......................................
2023-04-23 21:25:15,212:INFO:Initializing evaluate_model()
2023-04-23 21:25:15,212:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=6, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.0001, min_samples_leaf=4,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-04-23 21:25:15,230:INFO:Initializing create_model()
2023-04-23 21:25:15,230:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:15,230:INFO:Checking exceptions
2023-04-23 21:25:15,231:INFO:Importing libraries
2023-04-23 21:25:15,231:INFO:Copying training dataset
2023-04-23 21:25:15,232:INFO:Defining folds
2023-04-23 21:25:15,232:INFO:Declaring metric variables
2023-04-23 21:25:15,232:INFO:Importing untrained model
2023-04-23 21:25:15,232:INFO:K Neighbors Classifier Imported successfully
2023-04-23 21:25:15,233:INFO:Starting cross validation
2023-04-23 21:25:15,233:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:15,330:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,331:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,331:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,332:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,333:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,334:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,334:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,335:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,335:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,335:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,336:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,336:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,338:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,338:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,338:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,339:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,339:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,340:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,340:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,340:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,341:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,341:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,342:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,342:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,349:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,349:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,350:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,352:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,353:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,353:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:15,395:INFO:Calculating mean and std
2023-04-23 21:25:15,395:INFO:Creating metrics dataframe
2023-04-23 21:25:15,396:INFO:Finalizing model
2023-04-23 21:25:15,415:INFO:Uploading results into container
2023-04-23 21:25:15,415:INFO:Uploading model into container now
2023-04-23 21:25:15,419:INFO:_master_model_container: 19
2023-04-23 21:25:15,419:INFO:_display_container: 5
2023-04-23 21:25:15,419:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-23 21:25:15,419:INFO:create_model() successfully completed......................................
2023-04-23 21:25:15,485:INFO:Initializing tune_model()
2023-04-23 21:25:15,485:INFO:tune_model(estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, n_iter=10, custom_grid={'n_neighbors': array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49])}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>)
2023-04-23 21:25:15,485:INFO:Checking exceptions
2023-04-23 21:25:15,486:INFO:Copying training dataset
2023-04-23 21:25:15,487:INFO:Checking base model
2023-04-23 21:25:15,487:INFO:Base model : K Neighbors Classifier
2023-04-23 21:25:15,487:INFO:Declaring metric variables
2023-04-23 21:25:15,487:INFO:Defining Hyperparameters
2023-04-23 21:25:15,551:INFO:custom_grid: {'actual_estimator__n_neighbors': array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49])}
2023-04-23 21:25:15,551:INFO:Tuning with n_jobs=-1
2023-04-23 21:25:15,551:INFO:Initializing RandomizedSearchCV
2023-04-23 21:25:16,576:INFO:best_params: {'actual_estimator__n_neighbors': 17}
2023-04-23 21:25:16,576:INFO:Hyperparameter search completed
2023-04-23 21:25:16,576:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:16,576:INFO:Initializing create_model()
2023-04-23 21:25:16,576:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013657302920>, model_only=True, return_train_score=False, kwargs={'n_neighbors': 17})
2023-04-23 21:25:16,576:INFO:Checking exceptions
2023-04-23 21:25:16,576:INFO:Importing libraries
2023-04-23 21:25:16,576:INFO:Copying training dataset
2023-04-23 21:25:16,578:INFO:Defining folds
2023-04-23 21:25:16,578:INFO:Declaring metric variables
2023-04-23 21:25:16,578:INFO:Importing untrained model
2023-04-23 21:25:16,578:INFO:Declaring custom model
2023-04-23 21:25:16,578:INFO:K Neighbors Classifier Imported successfully
2023-04-23 21:25:16,578:INFO:Starting cross validation
2023-04-23 21:25:16,579:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:16,666:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,667:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,667:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,667:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,668:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,669:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,669:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,670:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,671:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,681:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,682:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,682:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,683:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,684:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,685:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,687:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,688:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,689:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,690:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,690:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,690:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,691:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,691:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,692:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,693:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,694:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,726:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,727:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,728:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,736:INFO:Calculating mean and std
2023-04-23 21:25:16,736:INFO:Creating metrics dataframe
2023-04-23 21:25:16,737:INFO:Finalizing model
2023-04-23 21:25:16,756:INFO:Uploading results into container
2023-04-23 21:25:16,756:INFO:Uploading model into container now
2023-04-23 21:25:16,756:INFO:_master_model_container: 20
2023-04-23 21:25:16,756:INFO:_display_container: 6
2023-04-23 21:25:16,756:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=17, p=2,
                     weights='uniform')
2023-04-23 21:25:16,756:INFO:create_model() successfully completed......................................
2023-04-23 21:25:16,820:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:16,820:INFO:choose_better activated
2023-04-23 21:25:16,821:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:16,821:INFO:Initializing create_model()
2023-04-23 21:25:16,821:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:16,821:INFO:Checking exceptions
2023-04-23 21:25:16,821:INFO:Importing libraries
2023-04-23 21:25:16,821:INFO:Copying training dataset
2023-04-23 21:25:16,823:INFO:Defining folds
2023-04-23 21:25:16,823:INFO:Declaring metric variables
2023-04-23 21:25:16,823:INFO:Importing untrained model
2023-04-23 21:25:16,823:INFO:Declaring custom model
2023-04-23 21:25:16,823:INFO:K Neighbors Classifier Imported successfully
2023-04-23 21:25:16,823:INFO:Starting cross validation
2023-04-23 21:25:16,824:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:16,904:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,906:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,907:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,907:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,908:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,910:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,912:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,912:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,913:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,913:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,913:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,915:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,915:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,915:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,916:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,916:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,917:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,918:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,919:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,919:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,920:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,920:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,921:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,921:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,924:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,925:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,925:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,933:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,934:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,934:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:16,971:INFO:Calculating mean and std
2023-04-23 21:25:16,971:INFO:Creating metrics dataframe
2023-04-23 21:25:16,973:INFO:Finalizing model
2023-04-23 21:25:16,991:INFO:Uploading results into container
2023-04-23 21:25:16,992:INFO:Uploading model into container now
2023-04-23 21:25:16,992:INFO:_master_model_container: 21
2023-04-23 21:25:16,992:INFO:_display_container: 7
2023-04-23 21:25:16,992:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-23 21:25:16,992:INFO:create_model() successfully completed......................................
2023-04-23 21:25:17,052:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:17,053:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') result for Accuracy is 0.9011
2023-04-23 21:25:17,053:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=17, p=2,
                     weights='uniform') result for Accuracy is 0.9082
2023-04-23 21:25:17,053:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=17, p=2,
                     weights='uniform') is best model
2023-04-23 21:25:17,053:INFO:choose_better completed
2023-04-23 21:25:17,057:INFO:_master_model_container: 21
2023-04-23 21:25:17,057:INFO:_display_container: 6
2023-04-23 21:25:17,057:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=17, p=2,
                     weights='uniform')
2023-04-23 21:25:17,057:INFO:tune_model() successfully completed......................................
2023-04-23 21:25:17,126:INFO:Initializing evaluate_model()
2023-04-23 21:25:17,126:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=17, p=2,
                     weights='uniform'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-04-23 21:25:17,128:INFO:Initializing create_model()
2023-04-23 21:25:17,128:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:17,128:INFO:Checking exceptions
2023-04-23 21:25:17,129:INFO:Importing libraries
2023-04-23 21:25:17,129:INFO:Copying training dataset
2023-04-23 21:25:17,130:INFO:Defining folds
2023-04-23 21:25:17,130:INFO:Declaring metric variables
2023-04-23 21:25:17,130:INFO:Importing untrained model
2023-04-23 21:25:17,130:INFO:Logistic Regression Imported successfully
2023-04-23 21:25:17,131:INFO:Starting cross validation
2023-04-23 21:25:17,131:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:17,184:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,184:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,184:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,185:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,185:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,185:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,209:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,210:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,210:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,216:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,216:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,217:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,220:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,220:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,221:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,222:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,223:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,224:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,228:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,229:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,229:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,231:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,231:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,231:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,231:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,232:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,232:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,240:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,241:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,242:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:17,261:INFO:Calculating mean and std
2023-04-23 21:25:17,262:INFO:Creating metrics dataframe
2023-04-23 21:25:17,263:INFO:Finalizing model
2023-04-23 21:25:17,305:INFO:Uploading results into container
2023-04-23 21:25:17,305:INFO:Uploading model into container now
2023-04-23 21:25:17,309:INFO:_master_model_container: 22
2023-04-23 21:25:17,309:INFO:_display_container: 7
2023-04-23 21:25:17,309:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-23 21:25:17,309:INFO:create_model() successfully completed......................................
2023-04-23 21:25:17,372:INFO:Initializing tune_model()
2023-04-23 21:25:17,373:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>)
2023-04-23 21:25:17,373:INFO:Checking exceptions
2023-04-23 21:25:17,374:INFO:Copying training dataset
2023-04-23 21:25:17,375:INFO:Checking base model
2023-04-23 21:25:17,375:INFO:Base model : Logistic Regression
2023-04-23 21:25:17,375:INFO:Declaring metric variables
2023-04-23 21:25:17,375:INFO:Defining Hyperparameters
2023-04-23 21:25:17,436:INFO:Tuning with n_jobs=-1
2023-04-23 21:25:17,436:INFO:Initializing RandomizedSearchCV
2023-04-23 21:25:18,510:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 9.984}
2023-04-23 21:25:18,510:INFO:Hyperparameter search completed
2023-04-23 21:25:18,510:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:18,510:INFO:Initializing create_model()
2023-04-23 21:25:18,510:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000136571A3A30>, model_only=True, return_train_score=False, kwargs={'class_weight': 'balanced', 'C': 9.984})
2023-04-23 21:25:18,510:INFO:Checking exceptions
2023-04-23 21:25:18,510:INFO:Importing libraries
2023-04-23 21:25:18,510:INFO:Copying training dataset
2023-04-23 21:25:18,512:INFO:Defining folds
2023-04-23 21:25:18,512:INFO:Declaring metric variables
2023-04-23 21:25:18,512:INFO:Importing untrained model
2023-04-23 21:25:18,512:INFO:Declaring custom model
2023-04-23 21:25:18,512:INFO:Logistic Regression Imported successfully
2023-04-23 21:25:18,513:INFO:Starting cross validation
2023-04-23 21:25:18,513:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:18,582:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,583:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,584:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,611:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,611:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,612:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,612:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,613:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,613:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,618:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,618:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,619:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,629:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,630:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,631:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,633:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,634:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,634:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,636:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,636:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,637:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,640:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,641:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,641:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,642:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,642:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,642:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,645:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,646:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,646:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,670:INFO:Calculating mean and std
2023-04-23 21:25:18,670:INFO:Creating metrics dataframe
2023-04-23 21:25:18,671:INFO:Finalizing model
2023-04-23 21:25:18,717:INFO:Uploading results into container
2023-04-23 21:25:18,718:INFO:Uploading model into container now
2023-04-23 21:25:18,718:INFO:_master_model_container: 23
2023-04-23 21:25:18,718:INFO:_display_container: 8
2023-04-23 21:25:18,718:INFO:LogisticRegression(C=9.984, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-23 21:25:18,718:INFO:create_model() successfully completed......................................
2023-04-23 21:25:18,781:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:18,781:INFO:choose_better activated
2023-04-23 21:25:18,782:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:18,782:INFO:Initializing create_model()
2023-04-23 21:25:18,782:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:18,782:INFO:Checking exceptions
2023-04-23 21:25:18,782:INFO:Importing libraries
2023-04-23 21:25:18,782:INFO:Copying training dataset
2023-04-23 21:25:18,784:INFO:Defining folds
2023-04-23 21:25:18,784:INFO:Declaring metric variables
2023-04-23 21:25:18,784:INFO:Importing untrained model
2023-04-23 21:25:18,784:INFO:Declaring custom model
2023-04-23 21:25:18,784:INFO:Logistic Regression Imported successfully
2023-04-23 21:25:18,784:INFO:Starting cross validation
2023-04-23 21:25:18,785:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:18,861:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,863:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,863:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,881:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,882:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,883:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,884:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,884:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,885:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,890:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,890:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,891:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,892:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,893:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,894:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,896:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,897:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,897:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,899:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,900:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,901:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,905:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,905:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,906:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,912:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,912:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,913:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,915:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,916:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,916:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:18,939:INFO:Calculating mean and std
2023-04-23 21:25:18,940:INFO:Creating metrics dataframe
2023-04-23 21:25:18,941:INFO:Finalizing model
2023-04-23 21:25:18,980:INFO:Uploading results into container
2023-04-23 21:25:18,980:INFO:Uploading model into container now
2023-04-23 21:25:18,980:INFO:_master_model_container: 24
2023-04-23 21:25:18,980:INFO:_display_container: 9
2023-04-23 21:25:18,980:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-23 21:25:18,980:INFO:create_model() successfully completed......................................
2023-04-23 21:25:19,042:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:19,042:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.9154
2023-04-23 21:25:19,042:INFO:LogisticRegression(C=9.984, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.9462
2023-04-23 21:25:19,043:INFO:LogisticRegression(C=9.984, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-04-23 21:25:19,043:INFO:choose_better completed
2023-04-23 21:25:19,047:INFO:_master_model_container: 24
2023-04-23 21:25:19,048:INFO:_display_container: 8
2023-04-23 21:25:19,048:INFO:LogisticRegression(C=9.984, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-23 21:25:19,048:INFO:tune_model() successfully completed......................................
2023-04-23 21:25:19,118:INFO:Initializing evaluate_model()
2023-04-23 21:25:19,118:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=LogisticRegression(C=9.984, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-04-23 21:25:19,120:INFO:Initializing create_model()
2023-04-23 21:25:19,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:19,120:INFO:Checking exceptions
2023-04-23 21:25:19,121:INFO:Importing libraries
2023-04-23 21:25:19,121:INFO:Copying training dataset
2023-04-23 21:25:19,122:INFO:Defining folds
2023-04-23 21:25:19,122:INFO:Declaring metric variables
2023-04-23 21:25:19,122:INFO:Importing untrained model
2023-04-23 21:25:19,123:INFO:Random Forest Classifier Imported successfully
2023-04-23 21:25:19,123:INFO:Starting cross validation
2023-04-23 21:25:19,123:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:19,272:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,273:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,274:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,283:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,284:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,285:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,285:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,286:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,286:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,292:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,293:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,294:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,301:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,302:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,302:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,312:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,312:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,313:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,315:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,315:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,316:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,316:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,316:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,317:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,317:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,318:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,318:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,357:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,358:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,359:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:19,361:INFO:Calculating mean and std
2023-04-23 21:25:19,361:INFO:Creating metrics dataframe
2023-04-23 21:25:19,362:INFO:Finalizing model
2023-04-23 21:25:19,462:INFO:Uploading results into container
2023-04-23 21:25:19,462:INFO:Uploading model into container now
2023-04-23 21:25:19,466:INFO:_master_model_container: 25
2023-04-23 21:25:19,466:INFO:_display_container: 9
2023-04-23 21:25:19,467:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-23 21:25:19,467:INFO:create_model() successfully completed......................................
2023-04-23 21:25:19,527:INFO:Initializing tune_model()
2023-04-23 21:25:19,527:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>)
2023-04-23 21:25:19,527:INFO:Checking exceptions
2023-04-23 21:25:19,528:INFO:Copying training dataset
2023-04-23 21:25:19,529:INFO:Checking base model
2023-04-23 21:25:19,529:INFO:Base model : Random Forest Classifier
2023-04-23 21:25:19,530:INFO:Declaring metric variables
2023-04-23 21:25:19,530:INFO:Defining Hyperparameters
2023-04-23 21:25:19,590:INFO:Tuning with n_jobs=-1
2023-04-23 21:25:19,591:INFO:Initializing RandomizedSearchCV
2023-04-23 21:25:23,477:INFO:best_params: {'actual_estimator__n_estimators': 260, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 4, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': False}
2023-04-23 21:25:23,478:INFO:Hyperparameter search completed
2023-04-23 21:25:23,478:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:23,478:INFO:Initializing create_model()
2023-04-23 21:25:23,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000136571A23B0>, model_only=True, return_train_score=False, kwargs={'n_estimators': 260, 'min_samples_split': 5, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.0005, 'max_features': 'sqrt', 'max_depth': 4, 'criterion': 'gini', 'class_weight': 'balanced_subsample', 'bootstrap': False})
2023-04-23 21:25:23,478:INFO:Checking exceptions
2023-04-23 21:25:23,478:INFO:Importing libraries
2023-04-23 21:25:23,478:INFO:Copying training dataset
2023-04-23 21:25:23,480:INFO:Defining folds
2023-04-23 21:25:23,480:INFO:Declaring metric variables
2023-04-23 21:25:23,480:INFO:Importing untrained model
2023-04-23 21:25:23,480:INFO:Declaring custom model
2023-04-23 21:25:23,480:INFO:Random Forest Classifier Imported successfully
2023-04-23 21:25:23,481:INFO:Starting cross validation
2023-04-23 21:25:23,481:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:23,747:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,748:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,749:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,750:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,751:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,752:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,754:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,755:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,755:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,770:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,770:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,771:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,774:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,775:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,775:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,777:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,778:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,779:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,782:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,783:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,784:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,784:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,785:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,785:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,789:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,790:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,791:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,792:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,793:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,794:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:23,995:INFO:Calculating mean and std
2023-04-23 21:25:23,995:INFO:Creating metrics dataframe
2023-04-23 21:25:23,996:INFO:Finalizing model
2023-04-23 21:25:24,370:INFO:Uploading results into container
2023-04-23 21:25:24,371:INFO:Uploading model into container now
2023-04-23 21:25:24,371:INFO:_master_model_container: 26
2023-04-23 21:25:24,371:INFO:_display_container: 10
2023-04-23 21:25:24,371:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=4, max_features='sqrt', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0005,
                       min_samples_leaf=3, min_samples_split=5,
                       min_weight_fraction_leaf=0.0, n_estimators=260,
                       n_jobs=-1, oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2023-04-23 21:25:24,371:INFO:create_model() successfully completed......................................
2023-04-23 21:25:24,438:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:24,438:INFO:choose_better activated
2023-04-23 21:25:24,439:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:24,439:INFO:Initializing create_model()
2023-04-23 21:25:24,439:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:24,439:INFO:Checking exceptions
2023-04-23 21:25:24,440:INFO:Importing libraries
2023-04-23 21:25:24,440:INFO:Copying training dataset
2023-04-23 21:25:24,442:INFO:Defining folds
2023-04-23 21:25:24,442:INFO:Declaring metric variables
2023-04-23 21:25:24,442:INFO:Importing untrained model
2023-04-23 21:25:24,442:INFO:Declaring custom model
2023-04-23 21:25:24,442:INFO:Random Forest Classifier Imported successfully
2023-04-23 21:25:24,442:INFO:Starting cross validation
2023-04-23 21:25:24,443:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:24,583:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,584:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,585:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,587:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,588:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,588:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,594:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,594:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,595:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,601:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,602:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,603:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,605:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,607:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,607:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,620:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,621:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,622:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,626:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,627:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,628:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,628:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,629:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,630:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,632:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,633:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,634:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,635:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,636:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,637:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:24,846:INFO:Calculating mean and std
2023-04-23 21:25:24,846:INFO:Creating metrics dataframe
2023-04-23 21:25:24,847:INFO:Finalizing model
2023-04-23 21:25:24,976:INFO:Uploading results into container
2023-04-23 21:25:24,976:INFO:Uploading model into container now
2023-04-23 21:25:24,976:INFO:_master_model_container: 27
2023-04-23 21:25:24,976:INFO:_display_container: 11
2023-04-23 21:25:24,976:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-23 21:25:24,976:INFO:create_model() successfully completed......................................
2023-04-23 21:25:25,037:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:25,037:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) result for Accuracy is 0.9467
2023-04-23 21:25:25,038:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=4, max_features='sqrt', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0005,
                       min_samples_leaf=3, min_samples_split=5,
                       min_weight_fraction_leaf=0.0, n_estimators=260,
                       n_jobs=-1, oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.9467
2023-04-23 21:25:25,038:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) is best model
2023-04-23 21:25:25,038:INFO:choose_better completed
2023-04-23 21:25:25,038:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-04-23 21:25:25,042:INFO:_master_model_container: 27
2023-04-23 21:25:25,042:INFO:_display_container: 10
2023-04-23 21:25:25,042:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-23 21:25:25,042:INFO:tune_model() successfully completed......................................
2023-04-23 21:25:25,129:INFO:Initializing evaluate_model()
2023-04-23 21:25:25,129:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-04-23 21:25:25,133:INFO:Initializing tune_model()
2023-04-23 21:25:25,133:INFO:tune_model(estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>)
2023-04-23 21:25:25,134:INFO:Checking exceptions
2023-04-23 21:25:25,135:INFO:Copying training dataset
2023-04-23 21:25:25,136:INFO:Checking base model
2023-04-23 21:25:25,136:INFO:Base model : Ridge Classifier
2023-04-23 21:25:25,136:INFO:Declaring metric variables
2023-04-23 21:25:25,136:INFO:Defining Hyperparameters
2023-04-23 21:25:25,208:INFO:Tuning with n_jobs=-1
2023-04-23 21:25:25,208:INFO:Initializing RandomizedSearchCV
2023-04-23 21:25:28,153:INFO:best_params: {'actual_estimator__fit_intercept': True, 'actual_estimator__alpha': 0.54}
2023-04-23 21:25:28,153:INFO:Hyperparameter search completed
2023-04-23 21:25:28,153:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:28,153:INFO:Initializing create_model()
2023-04-23 21:25:28,154:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365A42B160>, model_only=True, return_train_score=False, kwargs={'fit_intercept': True, 'alpha': 0.54})
2023-04-23 21:25:28,154:INFO:Checking exceptions
2023-04-23 21:25:28,154:INFO:Importing libraries
2023-04-23 21:25:28,154:INFO:Copying training dataset
2023-04-23 21:25:28,155:INFO:Defining folds
2023-04-23 21:25:28,155:INFO:Declaring metric variables
2023-04-23 21:25:28,155:INFO:Importing untrained model
2023-04-23 21:25:28,155:INFO:Declaring custom model
2023-04-23 21:25:28,156:INFO:Ridge Classifier Imported successfully
2023-04-23 21:25:28,156:INFO:Starting cross validation
2023-04-23 21:25:28,156:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:28,186:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:28,186:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,187:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,187:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,188:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:28,189:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,189:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,190:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,211:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:28,211:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,212:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:28,212:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,213:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,213:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,214:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,214:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,216:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:28,216:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,218:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,219:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:28,220:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,220:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,220:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:28,220:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:28,220:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,221:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,221:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,221:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,222:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,222:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,222:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,223:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,227:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:28,227:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,228:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,229:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,231:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:28,231:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,232:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,233:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,451:INFO:Calculating mean and std
2023-04-23 21:25:28,452:INFO:Creating metrics dataframe
2023-04-23 21:25:28,453:INFO:Finalizing model
2023-04-23 21:25:28,508:INFO:Uploading results into container
2023-04-23 21:25:28,508:INFO:Uploading model into container now
2023-04-23 21:25:28,508:INFO:_master_model_container: 28
2023-04-23 21:25:28,508:INFO:_display_container: 11
2023-04-23 21:25:28,509:INFO:RidgeClassifier(alpha=0.54, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-04-23 21:25:28,509:INFO:create_model() successfully completed......................................
2023-04-23 21:25:28,573:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:28,573:INFO:choose_better activated
2023-04-23 21:25:28,573:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:28,574:INFO:Initializing create_model()
2023-04-23 21:25:28,574:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:28,574:INFO:Checking exceptions
2023-04-23 21:25:28,574:INFO:Importing libraries
2023-04-23 21:25:28,574:INFO:Copying training dataset
2023-04-23 21:25:28,576:INFO:Defining folds
2023-04-23 21:25:28,576:INFO:Declaring metric variables
2023-04-23 21:25:28,576:INFO:Importing untrained model
2023-04-23 21:25:28,576:INFO:Declaring custom model
2023-04-23 21:25:28,576:INFO:Ridge Classifier Imported successfully
2023-04-23 21:25:28,576:INFO:Starting cross validation
2023-04-23 21:25:28,576:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:28,605:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:28,605:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,606:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,606:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,607:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:28,607:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,608:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,608:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,630:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:28,631:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,631:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,632:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,633:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:28,633:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,634:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,634:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,635:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:28,635:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,636:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,637:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,647:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:28,647:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,648:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,649:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,649:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:28,650:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,651:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,653:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:28,653:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,653:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,654:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,654:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,658:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:28,658:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,659:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,659:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,661:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:28,663:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,663:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,664:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:28,869:INFO:Calculating mean and std
2023-04-23 21:25:28,869:INFO:Creating metrics dataframe
2023-04-23 21:25:28,870:INFO:Finalizing model
2023-04-23 21:25:28,922:INFO:Uploading results into container
2023-04-23 21:25:28,923:INFO:Uploading model into container now
2023-04-23 21:25:28,923:INFO:_master_model_container: 29
2023-04-23 21:25:28,923:INFO:_display_container: 12
2023-04-23 21:25:28,923:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-04-23 21:25:28,923:INFO:create_model() successfully completed......................................
2023-04-23 21:25:28,984:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:28,985:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001) result for Accuracy is 0.9769
2023-04-23 21:25:28,985:INFO:RidgeClassifier(alpha=0.54, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001) result for Accuracy is 0.9692
2023-04-23 21:25:28,985:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001) is best model
2023-04-23 21:25:28,985:INFO:choose_better completed
2023-04-23 21:25:28,985:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-04-23 21:25:28,989:INFO:_master_model_container: 29
2023-04-23 21:25:28,989:INFO:_display_container: 11
2023-04-23 21:25:28,990:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-04-23 21:25:28,990:INFO:tune_model() successfully completed......................................
2023-04-23 21:25:29,076:INFO:Initializing evaluate_model()
2023-04-23 21:25:29,077:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013651852350>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-04-23 21:25:29,103:INFO:PyCaret ClassificationExperiment
2023-04-23 21:25:29,103:INFO:Logging name: clf-default-name
2023-04-23 21:25:29,103:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-23 21:25:29,103:INFO:version 3.0.0
2023-04-23 21:25:29,103:INFO:Initializing setup()
2023-04-23 21:25:29,103:INFO:self.USI: 315e
2023-04-23 21:25:29,103:INFO:self._variable_keys: {'exp_id', 'X_train', 'target_param', 'seed', 'y', 'html_param', 'pipeline', 'fold_generator', 'gpu_param', 'USI', '_available_plots', 'data', 'logging_param', 'gpu_n_jobs_param', 'fold_shuffle_param', 'exp_name_log', 'y_train', 'fix_imbalance', 'log_plots_param', 'is_multiclass', '_ml_usecase', 'X_test', 'X', 'y_test', 'idx', 'fold_groups_param', 'n_jobs_param', 'memory'}
2023-04-23 21:25:29,103:INFO:Checking environment
2023-04-23 21:25:29,103:INFO:python_version: 3.10.0
2023-04-23 21:25:29,103:INFO:python_build: ('tags/v3.10.0:b494f59', 'Oct  4 2021 19:00:18')
2023-04-23 21:25:29,103:INFO:machine: AMD64
2023-04-23 21:25:29,103:INFO:platform: Windows-10-10.0.19044-SP0
2023-04-23 21:25:29,105:INFO:Memory: svmem(total=34070519808, available=15944159232, percent=53.2, used=18126360576, free=15944159232)
2023-04-23 21:25:29,105:INFO:Physical Core: 12
2023-04-23 21:25:29,105:INFO:Logical Core: 20
2023-04-23 21:25:29,105:INFO:Checking libraries
2023-04-23 21:25:29,105:INFO:System:
2023-04-23 21:25:29,105:INFO:    python: 3.10.0 (tags/v3.10.0:b494f59, Oct  4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]
2023-04-23 21:25:29,105:INFO:executable: C:\Users\123456\Documents\Github\INSE6210\venv\Scripts\python.exe
2023-04-23 21:25:29,105:INFO:   machine: Windows-10-10.0.19044-SP0
2023-04-23 21:25:29,105:INFO:PyCaret required dependencies:
2023-04-23 21:25:29,105:INFO:                 pip: 23.1.1
2023-04-23 21:25:29,105:INFO:          setuptools: 67.7.1
2023-04-23 21:25:29,105:INFO:             pycaret: 3.0.0
2023-04-23 21:25:29,105:INFO:             IPython: 7.34.0
2023-04-23 21:25:29,105:INFO:          ipywidgets: 7.7.1
2023-04-23 21:25:29,105:INFO:                tqdm: 4.65.0
2023-04-23 21:25:29,106:INFO:               numpy: 1.23.5
2023-04-23 21:25:29,106:INFO:              pandas: 1.5.3
2023-04-23 21:25:29,106:INFO:              jinja2: 3.1.2
2023-04-23 21:25:29,106:INFO:               scipy: 1.10.1
2023-04-23 21:25:29,106:INFO:              joblib: 1.2.0
2023-04-23 21:25:29,106:INFO:             sklearn: 1.2.2
2023-04-23 21:25:29,106:INFO:                pyod: 1.0.9
2023-04-23 21:25:29,106:INFO:            imblearn: 0.10.1
2023-04-23 21:25:29,106:INFO:   category_encoders: 2.6.0
2023-04-23 21:25:29,106:INFO:            lightgbm: 3.3.5
2023-04-23 21:25:29,106:INFO:               numba: 0.56.4
2023-04-23 21:25:29,106:INFO:            requests: 2.27.1
2023-04-23 21:25:29,106:INFO:          matplotlib: 3.7.1
2023-04-23 21:25:29,106:INFO:          scikitplot: 0.3.7
2023-04-23 21:25:29,106:INFO:         yellowbrick: 1.5
2023-04-23 21:25:29,106:INFO:              plotly: 5.13.1
2023-04-23 21:25:29,106:INFO:             kaleido: 0.2.1
2023-04-23 21:25:29,106:INFO:         statsmodels: 0.13.5
2023-04-23 21:25:29,106:INFO:              sktime: 0.17.1
2023-04-23 21:25:29,106:INFO:               tbats: 1.1.3
2023-04-23 21:25:29,106:INFO:            pmdarima: 2.0.3
2023-04-23 21:25:29,106:INFO:              psutil: 5.9.5
2023-04-23 21:25:29,106:INFO:PyCaret optional dependencies:
2023-04-23 21:25:29,106:INFO:                shap: 0.41.0
2023-04-23 21:25:29,106:INFO:           interpret: Not installed
2023-04-23 21:25:29,106:INFO:                umap: Not installed
2023-04-23 21:25:29,106:INFO:    pandas_profiling: Not installed
2023-04-23 21:25:29,106:INFO:  explainerdashboard: Not installed
2023-04-23 21:25:29,106:INFO:             autoviz: Not installed
2023-04-23 21:25:29,106:INFO:           fairlearn: Not installed
2023-04-23 21:25:29,106:INFO:             xgboost: 1.7.5
2023-04-23 21:25:29,106:INFO:            catboost: Not installed
2023-04-23 21:25:29,106:INFO:              kmodes: Not installed
2023-04-23 21:25:29,106:INFO:             mlxtend: 0.14.0
2023-04-23 21:25:29,106:INFO:       statsforecast: Not installed
2023-04-23 21:25:29,106:INFO:        tune_sklearn: Not installed
2023-04-23 21:25:29,106:INFO:                 ray: Not installed
2023-04-23 21:25:29,106:INFO:            hyperopt: 0.2.7
2023-04-23 21:25:29,106:INFO:              optuna: Not installed
2023-04-23 21:25:29,106:INFO:               skopt: Not installed
2023-04-23 21:25:29,106:INFO:              mlflow: Not installed
2023-04-23 21:25:29,106:INFO:              gradio: Not installed
2023-04-23 21:25:29,106:INFO:             fastapi: Not installed
2023-04-23 21:25:29,106:INFO:             uvicorn: Not installed
2023-04-23 21:25:29,106:INFO:              m2cgen: Not installed
2023-04-23 21:25:29,106:INFO:           evidently: Not installed
2023-04-23 21:25:29,106:INFO:               fugue: Not installed
2023-04-23 21:25:29,106:INFO:           streamlit: Not installed
2023-04-23 21:25:29,106:INFO:             prophet: 1.1.2
2023-04-23 21:25:29,106:INFO:None
2023-04-23 21:25:29,106:INFO:Set up data.
2023-04-23 21:25:29,109:INFO:Set up train/test split.
2023-04-23 21:25:29,110:INFO:Set up index.
2023-04-23 21:25:29,110:INFO:Set up folding strategy.
2023-04-23 21:25:29,110:INFO:Assigning column types.
2023-04-23 21:25:29,111:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-23 21:25:29,132:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-23 21:25:29,132:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-23 21:25:29,145:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-23 21:25:29,146:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-23 21:25:29,167:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-23 21:25:29,167:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-23 21:25:29,180:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-23 21:25:29,181:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-23 21:25:29,181:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-23 21:25:29,202:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-23 21:25:29,215:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-23 21:25:29,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-23 21:25:29,239:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-23 21:25:29,252:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-23 21:25:29,253:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-23 21:25:29,253:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-23 21:25:29,289:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-23 21:25:29,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-23 21:25:29,325:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-23 21:25:29,326:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-23 21:25:29,327:INFO:Preparing preprocessing pipeline...
2023-04-23 21:25:29,328:INFO:Set up label encoding.
2023-04-23 21:25:29,328:INFO:Set up simple imputation.
2023-04-23 21:25:29,328:INFO:Set up feature normalization.
2023-04-23 21:25:29,328:INFO:Set up PCA.
2023-04-23 21:25:29,347:INFO:Finished creating preprocessing pipeline.
2023-04-23 21:25:29,351:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\123456\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['AR', 'PR', 'CP', 'LK', 'WD', 'AS',
                                             'LG'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_va...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('pca',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=PCA(copy=True,
                                                    iterated_power='auto',
                                                    n_components=3,
                                                    n_oversamples=10,
                                                    power_iteration_normalizer='auto',
                                                    random_state=None,
                                                    svd_solver='auto', tol=0.0,
                                                    whiten=False)))],
         verbose=False)
2023-04-23 21:25:29,352:INFO:Creating final display dataframe.
2023-04-23 21:25:29,406:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             class
2                   Target type        Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2
4           Original data shape          (210, 8)
5        Transformed data shape          (210, 4)
6   Transformed train set shape          (147, 4)
7    Transformed test set shape           (63, 4)
8              Numeric features                 7
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13                    Normalize              True
14             Normalize method            zscore
15                          PCA              True
16                   PCA method            linear
17               PCA components                 3
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              315e
2023-04-23 21:25:29,443:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-23 21:25:29,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-23 21:25:29,485:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-23 21:25:29,486:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-23 21:25:29,486:INFO:setup() successfully completed in 0.41s...............
2023-04-23 21:25:29,486:INFO:Initializing compare_models()
2023-04-23 21:25:29,486:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-04-23 21:25:29,486:INFO:Checking exceptions
2023-04-23 21:25:29,488:INFO:Preparing display monitor
2023-04-23 21:25:29,489:INFO:Initializing Logistic Regression
2023-04-23 21:25:29,489:INFO:Total runtime is 0.0 minutes
2023-04-23 21:25:29,489:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:29,489:INFO:Initializing create_model()
2023-04-23 21:25:29,489:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013655089390>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:29,489:INFO:Checking exceptions
2023-04-23 21:25:29,489:INFO:Importing libraries
2023-04-23 21:25:29,489:INFO:Copying training dataset
2023-04-23 21:25:29,490:INFO:Defining folds
2023-04-23 21:25:29,490:INFO:Declaring metric variables
2023-04-23 21:25:29,490:INFO:Importing untrained model
2023-04-23 21:25:29,490:INFO:Logistic Regression Imported successfully
2023-04-23 21:25:29,490:INFO:Starting cross validation
2023-04-23 21:25:29,491:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:29,549:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,550:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,551:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,577:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,578:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,579:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,594:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,594:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,594:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,594:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,595:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,595:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,595:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,595:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,595:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,595:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,597:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,601:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,601:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,602:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,609:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,610:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,610:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,610:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,611:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,611:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,620:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,621:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,621:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:29,800:INFO:Calculating mean and std
2023-04-23 21:25:29,800:INFO:Creating metrics dataframe
2023-04-23 21:25:29,832:INFO:Uploading results into container
2023-04-23 21:25:29,833:INFO:Uploading model into container now
2023-04-23 21:25:29,833:INFO:_master_model_container: 1
2023-04-23 21:25:29,833:INFO:_display_container: 2
2023-04-23 21:25:29,833:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-23 21:25:29,833:INFO:create_model() successfully completed......................................
2023-04-23 21:25:29,899:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:29,899:INFO:Creating metrics dataframe
2023-04-23 21:25:29,901:INFO:Initializing K Neighbors Classifier
2023-04-23 21:25:29,901:INFO:Total runtime is 0.006856902440388998 minutes
2023-04-23 21:25:29,901:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:29,901:INFO:Initializing create_model()
2023-04-23 21:25:29,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013655089390>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:29,901:INFO:Checking exceptions
2023-04-23 21:25:29,901:INFO:Importing libraries
2023-04-23 21:25:29,901:INFO:Copying training dataset
2023-04-23 21:25:29,902:INFO:Defining folds
2023-04-23 21:25:29,902:INFO:Declaring metric variables
2023-04-23 21:25:29,902:INFO:Importing untrained model
2023-04-23 21:25:29,903:INFO:K Neighbors Classifier Imported successfully
2023-04-23 21:25:29,903:INFO:Starting cross validation
2023-04-23 21:25:29,903:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:30,012:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,013:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,013:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,013:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,014:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,014:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,014:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,014:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,015:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,015:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,016:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,018:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,018:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,019:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,019:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,020:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,020:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,021:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,022:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,022:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,026:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,027:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,027:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,028:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,028:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,028:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,034:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,035:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,036:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,254:INFO:Calculating mean and std
2023-04-23 21:25:30,254:INFO:Creating metrics dataframe
2023-04-23 21:25:30,292:INFO:Uploading results into container
2023-04-23 21:25:30,293:INFO:Uploading model into container now
2023-04-23 21:25:30,293:INFO:_master_model_container: 2
2023-04-23 21:25:30,293:INFO:_display_container: 2
2023-04-23 21:25:30,293:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-23 21:25:30,293:INFO:create_model() successfully completed......................................
2023-04-23 21:25:30,354:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:30,354:INFO:Creating metrics dataframe
2023-04-23 21:25:30,357:INFO:Initializing Naive Bayes
2023-04-23 21:25:30,357:INFO:Total runtime is 0.014454078674316407 minutes
2023-04-23 21:25:30,357:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:30,357:INFO:Initializing create_model()
2023-04-23 21:25:30,357:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013655089390>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:30,357:INFO:Checking exceptions
2023-04-23 21:25:30,357:INFO:Importing libraries
2023-04-23 21:25:30,357:INFO:Copying training dataset
2023-04-23 21:25:30,359:INFO:Defining folds
2023-04-23 21:25:30,359:INFO:Declaring metric variables
2023-04-23 21:25:30,359:INFO:Importing untrained model
2023-04-23 21:25:30,359:INFO:Naive Bayes Imported successfully
2023-04-23 21:25:30,359:INFO:Starting cross validation
2023-04-23 21:25:30,359:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:30,431:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,432:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,432:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,436:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,437:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,437:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,446:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,447:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,447:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,449:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,451:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,451:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,452:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,452:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,452:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,453:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,454:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,454:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,454:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,455:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,456:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,457:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,458:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,458:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,462:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,463:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,464:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,464:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,464:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,465:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,694:INFO:Calculating mean and std
2023-04-23 21:25:30,695:INFO:Creating metrics dataframe
2023-04-23 21:25:30,735:INFO:Uploading results into container
2023-04-23 21:25:30,735:INFO:Uploading model into container now
2023-04-23 21:25:30,736:INFO:_master_model_container: 3
2023-04-23 21:25:30,736:INFO:_display_container: 2
2023-04-23 21:25:30,736:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-23 21:25:30,736:INFO:create_model() successfully completed......................................
2023-04-23 21:25:30,802:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:30,802:INFO:Creating metrics dataframe
2023-04-23 21:25:30,805:INFO:Initializing Decision Tree Classifier
2023-04-23 21:25:30,805:INFO:Total runtime is 0.021928409735361736 minutes
2023-04-23 21:25:30,805:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:30,805:INFO:Initializing create_model()
2023-04-23 21:25:30,805:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013655089390>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:30,805:INFO:Checking exceptions
2023-04-23 21:25:30,805:INFO:Importing libraries
2023-04-23 21:25:30,805:INFO:Copying training dataset
2023-04-23 21:25:30,807:INFO:Defining folds
2023-04-23 21:25:30,807:INFO:Declaring metric variables
2023-04-23 21:25:30,807:INFO:Importing untrained model
2023-04-23 21:25:30,808:INFO:Decision Tree Classifier Imported successfully
2023-04-23 21:25:30,808:INFO:Starting cross validation
2023-04-23 21:25:30,808:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:30,878:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,879:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,880:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,886:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,887:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,888:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,893:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,894:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,894:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,897:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,898:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,898:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,900:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,901:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,901:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,903:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,904:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,904:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,904:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,905:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,905:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,907:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,908:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,909:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,917:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,919:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,920:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,921:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,922:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:30,923:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,138:INFO:Calculating mean and std
2023-04-23 21:25:31,138:INFO:Creating metrics dataframe
2023-04-23 21:25:31,182:INFO:Uploading results into container
2023-04-23 21:25:31,182:INFO:Uploading model into container now
2023-04-23 21:25:31,182:INFO:_master_model_container: 4
2023-04-23 21:25:31,182:INFO:_display_container: 2
2023-04-23 21:25:31,182:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-23 21:25:31,182:INFO:create_model() successfully completed......................................
2023-04-23 21:25:31,246:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:31,246:INFO:Creating metrics dataframe
2023-04-23 21:25:31,249:INFO:Initializing SVM - Linear Kernel
2023-04-23 21:25:31,249:INFO:Total runtime is 0.029323919614156087 minutes
2023-04-23 21:25:31,249:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:31,249:INFO:Initializing create_model()
2023-04-23 21:25:31,249:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013655089390>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:31,249:INFO:Checking exceptions
2023-04-23 21:25:31,249:INFO:Importing libraries
2023-04-23 21:25:31,249:INFO:Copying training dataset
2023-04-23 21:25:31,251:INFO:Defining folds
2023-04-23 21:25:31,251:INFO:Declaring metric variables
2023-04-23 21:25:31,251:INFO:Importing untrained model
2023-04-23 21:25:31,251:INFO:SVM - Linear Kernel Imported successfully
2023-04-23 21:25:31,251:INFO:Starting cross validation
2023-04-23 21:25:31,251:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:31,317:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-23 21:25:31,317:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,318:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,318:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,319:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-23 21:25:31,320:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,321:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,322:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,329:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-23 21:25:31,330:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,331:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,332:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,335:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-23 21:25:31,336:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,337:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,337:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-23 21:25:31,337:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,337:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,338:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,339:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,344:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-23 21:25:31,344:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,345:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,345:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,349:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-23 21:25:31,349:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,350:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,351:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,353:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-23 21:25:31,353:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,354:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,354:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,355:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-23 21:25:31,356:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,356:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-23 21:25:31,356:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,356:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,357:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,357:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,357:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,567:INFO:Calculating mean and std
2023-04-23 21:25:31,567:INFO:Creating metrics dataframe
2023-04-23 21:25:31,610:INFO:Uploading results into container
2023-04-23 21:25:31,611:INFO:Uploading model into container now
2023-04-23 21:25:31,611:INFO:_master_model_container: 5
2023-04-23 21:25:31,611:INFO:_display_container: 2
2023-04-23 21:25:31,611:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-04-23 21:25:31,611:INFO:create_model() successfully completed......................................
2023-04-23 21:25:31,672:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:31,672:INFO:Creating metrics dataframe
2023-04-23 21:25:31,675:INFO:Initializing Ridge Classifier
2023-04-23 21:25:31,675:INFO:Total runtime is 0.03642001946767171 minutes
2023-04-23 21:25:31,675:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:31,675:INFO:Initializing create_model()
2023-04-23 21:25:31,675:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013655089390>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:31,675:INFO:Checking exceptions
2023-04-23 21:25:31,675:INFO:Importing libraries
2023-04-23 21:25:31,675:INFO:Copying training dataset
2023-04-23 21:25:31,676:INFO:Defining folds
2023-04-23 21:25:31,677:INFO:Declaring metric variables
2023-04-23 21:25:31,677:INFO:Importing untrained model
2023-04-23 21:25:31,677:INFO:Ridge Classifier Imported successfully
2023-04-23 21:25:31,677:INFO:Starting cross validation
2023-04-23 21:25:31,677:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:31,718:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:31,718:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,719:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,720:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,727:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:31,727:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,728:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,729:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,747:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:31,748:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,749:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,750:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:31,750:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,751:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,751:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,752:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,758:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:31,758:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,759:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,759:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,762:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:31,762:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,763:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,764:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,767:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:31,767:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,769:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,770:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:31,770:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,770:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,771:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,772:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,773:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:31,773:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,774:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,774:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,784:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-23 21:25:31,784:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,785:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,786:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:31,982:INFO:Calculating mean and std
2023-04-23 21:25:31,983:INFO:Creating metrics dataframe
2023-04-23 21:25:32,016:INFO:Uploading results into container
2023-04-23 21:25:32,016:INFO:Uploading model into container now
2023-04-23 21:25:32,016:INFO:_master_model_container: 6
2023-04-23 21:25:32,016:INFO:_display_container: 2
2023-04-23 21:25:32,016:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-04-23 21:25:32,016:INFO:create_model() successfully completed......................................
2023-04-23 21:25:32,079:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:32,079:INFO:Creating metrics dataframe
2023-04-23 21:25:32,082:INFO:Initializing Random Forest Classifier
2023-04-23 21:25:32,082:INFO:Total runtime is 0.04320571422576904 minutes
2023-04-23 21:25:32,082:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:32,082:INFO:Initializing create_model()
2023-04-23 21:25:32,082:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013655089390>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:32,082:INFO:Checking exceptions
2023-04-23 21:25:32,083:INFO:Importing libraries
2023-04-23 21:25:32,083:INFO:Copying training dataset
2023-04-23 21:25:32,084:INFO:Defining folds
2023-04-23 21:25:32,084:INFO:Declaring metric variables
2023-04-23 21:25:32,084:INFO:Importing untrained model
2023-04-23 21:25:32,084:INFO:Random Forest Classifier Imported successfully
2023-04-23 21:25:32,085:INFO:Starting cross validation
2023-04-23 21:25:32,085:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:32,375:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,376:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,377:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,396:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,397:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,398:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,404:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,404:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,405:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,406:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,408:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,413:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,414:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,415:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,429:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,430:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,431:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,431:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,432:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,432:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,435:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,436:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,436:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,447:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,447:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,448:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,448:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,448:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,449:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,671:INFO:Calculating mean and std
2023-04-23 21:25:32,671:INFO:Creating metrics dataframe
2023-04-23 21:25:32,736:INFO:Uploading results into container
2023-04-23 21:25:32,737:INFO:Uploading model into container now
2023-04-23 21:25:32,737:INFO:_master_model_container: 7
2023-04-23 21:25:32,737:INFO:_display_container: 2
2023-04-23 21:25:32,737:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-23 21:25:32,737:INFO:create_model() successfully completed......................................
2023-04-23 21:25:32,800:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:32,800:INFO:Creating metrics dataframe
2023-04-23 21:25:32,803:INFO:Initializing Quadratic Discriminant Analysis
2023-04-23 21:25:32,803:INFO:Total runtime is 0.05523369709650675 minutes
2023-04-23 21:25:32,803:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:32,803:INFO:Initializing create_model()
2023-04-23 21:25:32,803:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013655089390>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:32,803:INFO:Checking exceptions
2023-04-23 21:25:32,803:INFO:Importing libraries
2023-04-23 21:25:32,803:INFO:Copying training dataset
2023-04-23 21:25:32,805:INFO:Defining folds
2023-04-23 21:25:32,805:INFO:Declaring metric variables
2023-04-23 21:25:32,805:INFO:Importing untrained model
2023-04-23 21:25:32,805:INFO:Quadratic Discriminant Analysis Imported successfully
2023-04-23 21:25:32,805:INFO:Starting cross validation
2023-04-23 21:25:32,805:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:32,869:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,870:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,870:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,870:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,871:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,871:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,877:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,879:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,880:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,885:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,886:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,887:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,891:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,892:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,893:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,894:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,894:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,895:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,896:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,896:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,897:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,901:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,902:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,902:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,910:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,910:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,911:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,922:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,923:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:32,923:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,151:INFO:Calculating mean and std
2023-04-23 21:25:33,152:INFO:Creating metrics dataframe
2023-04-23 21:25:33,187:INFO:Uploading results into container
2023-04-23 21:25:33,187:INFO:Uploading model into container now
2023-04-23 21:25:33,188:INFO:_master_model_container: 8
2023-04-23 21:25:33,188:INFO:_display_container: 2
2023-04-23 21:25:33,188:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-04-23 21:25:33,188:INFO:create_model() successfully completed......................................
2023-04-23 21:25:33,250:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:33,250:INFO:Creating metrics dataframe
2023-04-23 21:25:33,252:INFO:Initializing Ada Boost Classifier
2023-04-23 21:25:33,252:INFO:Total runtime is 0.06270944277445475 minutes
2023-04-23 21:25:33,252:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:33,253:INFO:Initializing create_model()
2023-04-23 21:25:33,253:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013655089390>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:33,253:INFO:Checking exceptions
2023-04-23 21:25:33,253:INFO:Importing libraries
2023-04-23 21:25:33,253:INFO:Copying training dataset
2023-04-23 21:25:33,254:INFO:Defining folds
2023-04-23 21:25:33,254:INFO:Declaring metric variables
2023-04-23 21:25:33,254:INFO:Importing untrained model
2023-04-23 21:25:33,254:INFO:Ada Boost Classifier Imported successfully
2023-04-23 21:25:33,254:INFO:Starting cross validation
2023-04-23 21:25:33,255:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:33,376:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,377:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,377:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-23 21:25:33,378:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,385:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,385:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,386:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,402:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,403:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,404:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,408:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,408:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,409:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,411:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,412:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,413:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,415:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,415:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,416:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,425:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,425:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,426:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,434:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,434:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,435:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,435:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,435:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,436:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,445:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,446:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,447:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:33,658:INFO:Calculating mean and std
2023-04-23 21:25:33,658:INFO:Creating metrics dataframe
2023-04-23 21:25:33,705:INFO:Uploading results into container
2023-04-23 21:25:33,705:INFO:Uploading model into container now
2023-04-23 21:25:33,705:INFO:_master_model_container: 9
2023-04-23 21:25:33,705:INFO:_display_container: 2
2023-04-23 21:25:33,705:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-04-23 21:25:33,705:INFO:create_model() successfully completed......................................
2023-04-23 21:25:33,775:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:33,775:INFO:Creating metrics dataframe
2023-04-23 21:25:33,777:INFO:Initializing Gradient Boosting Classifier
2023-04-23 21:25:33,777:INFO:Total runtime is 0.07145775159200032 minutes
2023-04-23 21:25:33,777:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:33,778:INFO:Initializing create_model()
2023-04-23 21:25:33,778:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013655089390>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:33,778:INFO:Checking exceptions
2023-04-23 21:25:33,778:INFO:Importing libraries
2023-04-23 21:25:33,778:INFO:Copying training dataset
2023-04-23 21:25:33,779:INFO:Defining folds
2023-04-23 21:25:33,779:INFO:Declaring metric variables
2023-04-23 21:25:33,779:INFO:Importing untrained model
2023-04-23 21:25:33,779:INFO:Gradient Boosting Classifier Imported successfully
2023-04-23 21:25:33,779:INFO:Starting cross validation
2023-04-23 21:25:33,780:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:34,146:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,146:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,147:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,161:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,162:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,164:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,176:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,176:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,177:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,193:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,194:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,196:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,201:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,202:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,203:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,210:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,211:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,212:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,214:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,214:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,215:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,215:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,215:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,216:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,216:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,217:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,217:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,235:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,236:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,237:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,435:INFO:Calculating mean and std
2023-04-23 21:25:34,435:INFO:Creating metrics dataframe
2023-04-23 21:25:34,474:INFO:Uploading results into container
2023-04-23 21:25:34,474:INFO:Uploading model into container now
2023-04-23 21:25:34,474:INFO:_master_model_container: 10
2023-04-23 21:25:34,474:INFO:_display_container: 2
2023-04-23 21:25:34,474:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-23 21:25:34,474:INFO:create_model() successfully completed......................................
2023-04-23 21:25:34,538:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:34,538:INFO:Creating metrics dataframe
2023-04-23 21:25:34,540:INFO:Initializing Linear Discriminant Analysis
2023-04-23 21:25:34,540:INFO:Total runtime is 0.08417960007985432 minutes
2023-04-23 21:25:34,540:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:34,540:INFO:Initializing create_model()
2023-04-23 21:25:34,540:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013655089390>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:34,540:INFO:Checking exceptions
2023-04-23 21:25:34,540:INFO:Importing libraries
2023-04-23 21:25:34,541:INFO:Copying training dataset
2023-04-23 21:25:34,542:INFO:Defining folds
2023-04-23 21:25:34,542:INFO:Declaring metric variables
2023-04-23 21:25:34,542:INFO:Importing untrained model
2023-04-23 21:25:34,542:INFO:Linear Discriminant Analysis Imported successfully
2023-04-23 21:25:34,542:INFO:Starting cross validation
2023-04-23 21:25:34,543:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:34,597:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,598:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,598:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,613:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,615:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,616:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,624:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,625:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,626:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,635:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,637:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,638:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,639:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,639:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,639:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,646:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,646:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,647:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,650:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,651:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,651:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,652:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,652:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,652:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,657:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,657:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,658:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,663:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,664:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,664:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:34,896:INFO:Calculating mean and std
2023-04-23 21:25:34,897:INFO:Creating metrics dataframe
2023-04-23 21:25:34,943:INFO:Uploading results into container
2023-04-23 21:25:34,943:INFO:Uploading model into container now
2023-04-23 21:25:34,943:INFO:_master_model_container: 11
2023-04-23 21:25:34,943:INFO:_display_container: 2
2023-04-23 21:25:34,943:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-04-23 21:25:34,943:INFO:create_model() successfully completed......................................
2023-04-23 21:25:35,008:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:35,008:INFO:Creating metrics dataframe
2023-04-23 21:25:35,011:INFO:Initializing Extra Trees Classifier
2023-04-23 21:25:35,011:INFO:Total runtime is 0.09202260971069336 minutes
2023-04-23 21:25:35,011:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:35,011:INFO:Initializing create_model()
2023-04-23 21:25:35,011:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013655089390>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:35,011:INFO:Checking exceptions
2023-04-23 21:25:35,011:INFO:Importing libraries
2023-04-23 21:25:35,011:INFO:Copying training dataset
2023-04-23 21:25:35,013:INFO:Defining folds
2023-04-23 21:25:35,013:INFO:Declaring metric variables
2023-04-23 21:25:35,013:INFO:Importing untrained model
2023-04-23 21:25:35,013:INFO:Extra Trees Classifier Imported successfully
2023-04-23 21:25:35,013:INFO:Starting cross validation
2023-04-23 21:25:35,013:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:35,266:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,267:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,268:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,275:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,276:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,276:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,279:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,279:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,279:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,279:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,280:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,280:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,284:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,285:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,286:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,307:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,308:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,309:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,333:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,333:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,334:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,352:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,353:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,354:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,372:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,373:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,374:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,378:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,379:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,380:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,573:INFO:Calculating mean and std
2023-04-23 21:25:35,574:INFO:Creating metrics dataframe
2023-04-23 21:25:35,626:INFO:Uploading results into container
2023-04-23 21:25:35,626:INFO:Uploading model into container now
2023-04-23 21:25:35,627:INFO:_master_model_container: 12
2023-04-23 21:25:35,627:INFO:_display_container: 2
2023-04-23 21:25:35,627:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-04-23 21:25:35,627:INFO:create_model() successfully completed......................................
2023-04-23 21:25:35,692:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:35,693:INFO:Creating metrics dataframe
2023-04-23 21:25:35,696:INFO:Initializing Extreme Gradient Boosting
2023-04-23 21:25:35,696:INFO:Total runtime is 0.10343716541926065 minutes
2023-04-23 21:25:35,696:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:35,696:INFO:Initializing create_model()
2023-04-23 21:25:35,696:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013655089390>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:35,696:INFO:Checking exceptions
2023-04-23 21:25:35,696:INFO:Importing libraries
2023-04-23 21:25:35,696:INFO:Copying training dataset
2023-04-23 21:25:35,698:INFO:Defining folds
2023-04-23 21:25:35,698:INFO:Declaring metric variables
2023-04-23 21:25:35,698:INFO:Importing untrained model
2023-04-23 21:25:35,698:INFO:Extreme Gradient Boosting Imported successfully
2023-04-23 21:25:35,698:INFO:Starting cross validation
2023-04-23 21:25:35,699:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:35,788:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,790:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,791:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,798:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,799:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,800:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,812:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,813:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,813:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,814:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,815:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,816:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,820:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,820:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,821:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,841:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,842:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,842:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,861:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,862:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,862:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,862:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,863:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,863:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,870:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,870:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,871:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,882:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,882:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:35,883:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,082:INFO:Calculating mean and std
2023-04-23 21:25:36,082:INFO:Creating metrics dataframe
2023-04-23 21:25:36,120:INFO:Uploading results into container
2023-04-23 21:25:36,120:INFO:Uploading model into container now
2023-04-23 21:25:36,120:INFO:_master_model_container: 13
2023-04-23 21:25:36,120:INFO:_display_container: 2
2023-04-23 21:25:36,121:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-04-23 21:25:36,121:INFO:create_model() successfully completed......................................
2023-04-23 21:25:36,181:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:36,181:INFO:Creating metrics dataframe
2023-04-23 21:25:36,183:INFO:Initializing Light Gradient Boosting Machine
2023-04-23 21:25:36,183:INFO:Total runtime is 0.11156313816706338 minutes
2023-04-23 21:25:36,183:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:36,184:INFO:Initializing create_model()
2023-04-23 21:25:36,184:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013655089390>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:36,184:INFO:Checking exceptions
2023-04-23 21:25:36,184:INFO:Importing libraries
2023-04-23 21:25:36,184:INFO:Copying training dataset
2023-04-23 21:25:36,185:INFO:Defining folds
2023-04-23 21:25:36,185:INFO:Declaring metric variables
2023-04-23 21:25:36,185:INFO:Importing untrained model
2023-04-23 21:25:36,185:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-23 21:25:36,185:INFO:Starting cross validation
2023-04-23 21:25:36,186:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:36,295:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,296:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,298:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,302:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,304:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,305:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,309:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,310:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,311:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,314:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,316:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,317:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,318:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,319:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,319:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,353:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\cupy\_environment.py:213: UserWarning: CUDA path could not be detected. Set CUDA_PATH environment variable if CuPy fails to load.
  warnings.warn(

2023-04-23 21:25:36,357:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\cupy\_environment.py:213: UserWarning: CUDA path could not be detected. Set CUDA_PATH environment variable if CuPy fails to load.
  warnings.warn(

2023-04-23 21:25:36,368:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\cupy\_environment.py:213: UserWarning: CUDA path could not be detected. Set CUDA_PATH environment variable if CuPy fails to load.
  warnings.warn(

2023-04-23 21:25:36,369:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\cupy\_environment.py:213: UserWarning: CUDA path could not be detected. Set CUDA_PATH environment variable if CuPy fails to load.
  warnings.warn(

2023-04-23 21:25:36,374:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\cupy\_environment.py:213: UserWarning: CUDA path could not be detected. Set CUDA_PATH environment variable if CuPy fails to load.
  warnings.warn(

2023-04-23 21:25:36,691:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,692:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,693:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,693:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,693:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,694:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,711:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,712:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,712:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,713:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,713:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,714:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,723:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,724:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,725:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:36,821:INFO:Calculating mean and std
2023-04-23 21:25:36,823:INFO:Creating metrics dataframe
2023-04-23 21:25:36,867:INFO:Uploading results into container
2023-04-23 21:25:36,868:INFO:Uploading model into container now
2023-04-23 21:25:36,868:INFO:_master_model_container: 14
2023-04-23 21:25:36,868:INFO:_display_container: 2
2023-04-23 21:25:36,868:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-23 21:25:36,868:INFO:create_model() successfully completed......................................
2023-04-23 21:25:36,932:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:36,932:INFO:Creating metrics dataframe
2023-04-23 21:25:36,934:INFO:Initializing Dummy Classifier
2023-04-23 21:25:36,934:INFO:Total runtime is 0.12407018343607583 minutes
2023-04-23 21:25:36,934:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:36,934:INFO:Initializing create_model()
2023-04-23 21:25:36,934:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013655089390>, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:36,934:INFO:Checking exceptions
2023-04-23 21:25:36,934:INFO:Importing libraries
2023-04-23 21:25:36,934:INFO:Copying training dataset
2023-04-23 21:25:36,936:INFO:Defining folds
2023-04-23 21:25:36,936:INFO:Declaring metric variables
2023-04-23 21:25:36,936:INFO:Importing untrained model
2023-04-23 21:25:36,936:INFO:Dummy Classifier Imported successfully
2023-04-23 21:25:36,936:INFO:Starting cross validation
2023-04-23 21:25:36,937:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:37,004:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,005:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,006:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-23 21:25:37,007:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,013:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,014:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,014:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-23 21:25:37,014:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,026:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,028:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,029:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-23 21:25:37,029:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,030:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,031:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,032:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-23 21:25:37,032:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,037:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,038:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,038:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-23 21:25:37,038:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,038:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,039:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,040:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-23 21:25:37,040:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,042:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,043:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,043:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-23 21:25:37,044:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,045:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,046:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,046:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,046:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-23 21:25:37,047:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,047:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,048:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-23 21:25:37,048:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,058:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,059:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,060:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-23 21:25:37,060:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:37,293:INFO:Calculating mean and std
2023-04-23 21:25:37,293:INFO:Creating metrics dataframe
2023-04-23 21:25:37,340:INFO:Uploading results into container
2023-04-23 21:25:37,341:INFO:Uploading model into container now
2023-04-23 21:25:37,341:INFO:_master_model_container: 15
2023-04-23 21:25:37,341:INFO:_display_container: 2
2023-04-23 21:25:37,341:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-04-23 21:25:37,341:INFO:create_model() successfully completed......................................
2023-04-23 21:25:37,403:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:37,403:INFO:Creating metrics dataframe
2023-04-23 21:25:37,407:INFO:Initializing create_model()
2023-04-23 21:25:37,407:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:37,407:INFO:Checking exceptions
2023-04-23 21:25:37,407:INFO:Importing libraries
2023-04-23 21:25:37,407:INFO:Copying training dataset
2023-04-23 21:25:37,408:INFO:Defining folds
2023-04-23 21:25:37,408:INFO:Declaring metric variables
2023-04-23 21:25:37,408:INFO:Importing untrained model
2023-04-23 21:25:37,408:INFO:Declaring custom model
2023-04-23 21:25:37,409:INFO:Random Forest Classifier Imported successfully
2023-04-23 21:25:37,409:INFO:Cross validation set to False
2023-04-23 21:25:37,409:INFO:Fitting Model
2023-04-23 21:25:37,535:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-23 21:25:37,536:INFO:create_model() successfully completed......................................
2023-04-23 21:25:37,605:INFO:_master_model_container: 15
2023-04-23 21:25:37,605:INFO:_display_container: 2
2023-04-23 21:25:37,605:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-23 21:25:37,605:INFO:compare_models() successfully completed......................................
2023-04-23 21:25:37,605:INFO:Initializing tune_model()
2023-04-23 21:25:37,605:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>)
2023-04-23 21:25:37,606:INFO:Checking exceptions
2023-04-23 21:25:37,607:INFO:Copying training dataset
2023-04-23 21:25:37,608:INFO:Checking base model
2023-04-23 21:25:37,608:INFO:Base model : Random Forest Classifier
2023-04-23 21:25:37,608:INFO:Declaring metric variables
2023-04-23 21:25:37,608:INFO:Defining Hyperparameters
2023-04-23 21:25:37,670:INFO:Tuning with n_jobs=-1
2023-04-23 21:25:37,670:INFO:Initializing RandomizedSearchCV
2023-04-23 21:25:44,123:INFO:best_params: {'actual_estimator__n_estimators': 260, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 4, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': False}
2023-04-23 21:25:44,123:INFO:Hyperparameter search completed
2023-04-23 21:25:44,123:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:44,124:INFO:Initializing create_model()
2023-04-23 21:25:44,124:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365A4B8BE0>, model_only=True, return_train_score=False, kwargs={'n_estimators': 260, 'min_samples_split': 5, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.0005, 'max_features': 'sqrt', 'max_depth': 4, 'criterion': 'gini', 'class_weight': 'balanced_subsample', 'bootstrap': False})
2023-04-23 21:25:44,124:INFO:Checking exceptions
2023-04-23 21:25:44,124:INFO:Importing libraries
2023-04-23 21:25:44,124:INFO:Copying training dataset
2023-04-23 21:25:44,126:INFO:Defining folds
2023-04-23 21:25:44,126:INFO:Declaring metric variables
2023-04-23 21:25:44,126:INFO:Importing untrained model
2023-04-23 21:25:44,126:INFO:Declaring custom model
2023-04-23 21:25:44,126:INFO:Random Forest Classifier Imported successfully
2023-04-23 21:25:44,126:INFO:Starting cross validation
2023-04-23 21:25:44,127:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:44,413:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,413:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,414:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,416:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,418:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,419:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,419:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,420:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,421:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,431:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,432:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,432:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,434:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,434:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,435:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,443:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,444:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,444:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,445:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,447:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,449:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,459:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,460:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,461:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,461:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,462:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,463:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,495:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,496:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,497:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:44,873:INFO:Calculating mean and std
2023-04-23 21:25:44,873:INFO:Creating metrics dataframe
2023-04-23 21:25:44,873:INFO:Finalizing model
2023-04-23 21:25:45,248:INFO:Uploading results into container
2023-04-23 21:25:45,249:INFO:Uploading model into container now
2023-04-23 21:25:45,249:INFO:_master_model_container: 16
2023-04-23 21:25:45,249:INFO:_display_container: 3
2023-04-23 21:25:45,249:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=4, max_features='sqrt', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0005,
                       min_samples_leaf=3, min_samples_split=5,
                       min_weight_fraction_leaf=0.0, n_estimators=260,
                       n_jobs=-1, oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2023-04-23 21:25:45,249:INFO:create_model() successfully completed......................................
2023-04-23 21:25:45,314:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:45,314:INFO:choose_better activated
2023-04-23 21:25:45,314:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:45,314:INFO:Initializing create_model()
2023-04-23 21:25:45,314:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:45,314:INFO:Checking exceptions
2023-04-23 21:25:45,315:INFO:Importing libraries
2023-04-23 21:25:45,315:INFO:Copying training dataset
2023-04-23 21:25:45,316:INFO:Defining folds
2023-04-23 21:25:45,317:INFO:Declaring metric variables
2023-04-23 21:25:45,317:INFO:Importing untrained model
2023-04-23 21:25:45,317:INFO:Declaring custom model
2023-04-23 21:25:45,317:INFO:Random Forest Classifier Imported successfully
2023-04-23 21:25:45,317:INFO:Starting cross validation
2023-04-23 21:25:45,317:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:45,480:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,481:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,482:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,487:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,488:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,489:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,489:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,490:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,490:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,494:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,495:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,495:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,519:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,520:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,520:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,521:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,521:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,521:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,534:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,534:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,535:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,535:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,536:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,537:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,540:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,541:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,542:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,609:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,610:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,611:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:45,959:INFO:Calculating mean and std
2023-04-23 21:25:45,959:INFO:Creating metrics dataframe
2023-04-23 21:25:45,961:INFO:Finalizing model
2023-04-23 21:25:46,129:INFO:Uploading results into container
2023-04-23 21:25:46,130:INFO:Uploading model into container now
2023-04-23 21:25:46,130:INFO:_master_model_container: 17
2023-04-23 21:25:46,130:INFO:_display_container: 4
2023-04-23 21:25:46,130:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-23 21:25:46,130:INFO:create_model() successfully completed......................................
2023-04-23 21:25:46,194:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:46,195:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) result for Accuracy is 0.9257
2023-04-23 21:25:46,195:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=4, max_features='sqrt', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0005,
                       min_samples_leaf=3, min_samples_split=5,
                       min_weight_fraction_leaf=0.0, n_estimators=260,
                       n_jobs=-1, oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.919
2023-04-23 21:25:46,195:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) is best model
2023-04-23 21:25:46,195:INFO:choose_better completed
2023-04-23 21:25:46,195:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-04-23 21:25:46,199:INFO:_master_model_container: 17
2023-04-23 21:25:46,199:INFO:_display_container: 3
2023-04-23 21:25:46,200:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-23 21:25:46,200:INFO:tune_model() successfully completed......................................
2023-04-23 21:25:46,310:INFO:Initializing evaluate_model()
2023-04-23 21:25:46,310:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-04-23 21:25:50,324:WARNING:"is" with a literal. Did you mean "=="?

2023-04-23 21:25:50,324:WARNING:"is" with a literal. Did you mean "=="?

2023-04-23 21:25:50,324:WARNING:"is" with a literal. Did you mean "=="?

2023-04-23 21:25:50,324:WARNING:"is" with a literal. Did you mean "=="?

2023-04-23 21:25:50,326:WARNING:"is not" with a literal. Did you mean "!="?

2023-04-23 21:25:50,401:WARNING:"is not" with a literal. Did you mean "!="?

2023-04-23 21:25:50,548:INFO:Initializing create_model()
2023-04-23 21:25:50,548:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:50,548:INFO:Checking exceptions
2023-04-23 21:25:50,549:INFO:Importing libraries
2023-04-23 21:25:50,549:INFO:Copying training dataset
2023-04-23 21:25:50,550:INFO:Defining folds
2023-04-23 21:25:50,551:INFO:Declaring metric variables
2023-04-23 21:25:50,551:INFO:Importing untrained model
2023-04-23 21:25:50,551:INFO:Random Forest Classifier Imported successfully
2023-04-23 21:25:50,551:INFO:Starting cross validation
2023-04-23 21:25:50,551:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:50,715:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,716:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,717:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,723:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,724:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,725:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,741:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,742:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,742:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,756:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,757:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,759:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,761:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,762:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,763:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,775:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,777:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,778:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,778:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,779:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,779:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,785:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,786:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,788:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,790:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,791:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,791:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,895:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,896:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:50,897:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:51,208:INFO:Calculating mean and std
2023-04-23 21:25:51,208:INFO:Creating metrics dataframe
2023-04-23 21:25:51,210:INFO:Finalizing model
2023-04-23 21:25:51,383:INFO:Uploading results into container
2023-04-23 21:25:51,384:INFO:Uploading model into container now
2023-04-23 21:25:51,388:INFO:_master_model_container: 18
2023-04-23 21:25:51,388:INFO:_display_container: 4
2023-04-23 21:25:51,388:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-23 21:25:51,388:INFO:create_model() successfully completed......................................
2023-04-23 21:25:51,491:INFO:Initializing tune_model()
2023-04-23 21:25:51,491:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>)
2023-04-23 21:25:51,491:INFO:Checking exceptions
2023-04-23 21:25:51,493:INFO:Copying training dataset
2023-04-23 21:25:51,493:INFO:Checking base model
2023-04-23 21:25:51,494:INFO:Base model : Random Forest Classifier
2023-04-23 21:25:51,494:INFO:Declaring metric variables
2023-04-23 21:25:51,494:INFO:Defining Hyperparameters
2023-04-23 21:25:51,592:INFO:Tuning with n_jobs=-1
2023-04-23 21:25:51,592:INFO:Initializing RandomizedSearchCV
2023-04-23 21:25:57,367:INFO:best_params: {'actual_estimator__n_estimators': 260, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 4, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': False}
2023-04-23 21:25:57,367:INFO:Hyperparameter search completed
2023-04-23 21:25:57,367:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:57,367:INFO:Initializing create_model()
2023-04-23 21:25:57,367:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001365AEFD150>, model_only=True, return_train_score=False, kwargs={'n_estimators': 260, 'min_samples_split': 5, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.0005, 'max_features': 'sqrt', 'max_depth': 4, 'criterion': 'gini', 'class_weight': 'balanced_subsample', 'bootstrap': False})
2023-04-23 21:25:57,367:INFO:Checking exceptions
2023-04-23 21:25:57,367:INFO:Importing libraries
2023-04-23 21:25:57,367:INFO:Copying training dataset
2023-04-23 21:25:57,369:INFO:Defining folds
2023-04-23 21:25:57,369:INFO:Declaring metric variables
2023-04-23 21:25:57,369:INFO:Importing untrained model
2023-04-23 21:25:57,369:INFO:Declaring custom model
2023-04-23 21:25:57,370:INFO:Random Forest Classifier Imported successfully
2023-04-23 21:25:57,370:INFO:Starting cross validation
2023-04-23 21:25:57,370:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:57,652:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,652:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,653:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,654:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,654:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,655:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,657:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,658:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,659:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,670:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,671:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,672:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,674:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,675:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,676:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,683:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,684:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,685:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,688:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,689:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,689:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,700:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,701:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,701:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,701:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,702:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,734:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,735:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:57,736:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,133:INFO:Calculating mean and std
2023-04-23 21:25:58,134:INFO:Creating metrics dataframe
2023-04-23 21:25:58,136:INFO:Finalizing model
2023-04-23 21:25:58,268:INFO:Uploading results into container
2023-04-23 21:25:58,269:INFO:Uploading model into container now
2023-04-23 21:25:58,269:INFO:_master_model_container: 19
2023-04-23 21:25:58,269:INFO:_display_container: 5
2023-04-23 21:25:58,269:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=4, max_features='sqrt', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0005,
                       min_samples_leaf=3, min_samples_split=5,
                       min_weight_fraction_leaf=0.0, n_estimators=260,
                       n_jobs=-1, oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2023-04-23 21:25:58,269:INFO:create_model() successfully completed......................................
2023-04-23 21:25:58,370:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:58,370:INFO:choose_better activated
2023-04-23 21:25:58,370:INFO:SubProcess create_model() called ==================================
2023-04-23 21:25:58,370:INFO:Initializing create_model()
2023-04-23 21:25:58,370:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-23 21:25:58,370:INFO:Checking exceptions
2023-04-23 21:25:58,371:INFO:Importing libraries
2023-04-23 21:25:58,371:INFO:Copying training dataset
2023-04-23 21:25:58,372:INFO:Defining folds
2023-04-23 21:25:58,372:INFO:Declaring metric variables
2023-04-23 21:25:58,372:INFO:Importing untrained model
2023-04-23 21:25:58,372:INFO:Declaring custom model
2023-04-23 21:25:58,373:INFO:Random Forest Classifier Imported successfully
2023-04-23 21:25:58,373:INFO:Starting cross validation
2023-04-23 21:25:58,373:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-23 21:25:58,526:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,527:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,528:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,532:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,532:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,534:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,565:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,566:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,567:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,570:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,571:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,571:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,572:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,572:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,572:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,572:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,573:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,573:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,581:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,583:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,584:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,591:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,592:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,592:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,595:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,596:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,597:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,603:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,604:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:58,605:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-23 21:25:59,016:INFO:Calculating mean and std
2023-04-23 21:25:59,016:INFO:Creating metrics dataframe
2023-04-23 21:25:59,018:INFO:Finalizing model
2023-04-23 21:25:59,185:INFO:Uploading results into container
2023-04-23 21:25:59,185:INFO:Uploading model into container now
2023-04-23 21:25:59,186:INFO:_master_model_container: 20
2023-04-23 21:25:59,186:INFO:_display_container: 6
2023-04-23 21:25:59,186:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-23 21:25:59,186:INFO:create_model() successfully completed......................................
2023-04-23 21:25:59,282:INFO:SubProcess create_model() end ==================================
2023-04-23 21:25:59,282:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) result for Accuracy is 0.9257
2023-04-23 21:25:59,282:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=4, max_features='sqrt', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0005,
                       min_samples_leaf=3, min_samples_split=5,
                       min_weight_fraction_leaf=0.0, n_estimators=260,
                       n_jobs=-1, oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.919
2023-04-23 21:25:59,283:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) is best model
2023-04-23 21:25:59,283:INFO:choose_better completed
2023-04-23 21:25:59,283:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-04-23 21:25:59,287:INFO:_master_model_container: 20
2023-04-23 21:25:59,287:INFO:_display_container: 5
2023-04-23 21:25:59,287:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-23 21:25:59,287:INFO:tune_model() successfully completed......................................
2023-04-23 21:25:59,447:INFO:Initializing interpret_model()
2023-04-23 21:25:59,447:INFO:interpret_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>)
2023-04-23 21:25:59,447:INFO:Checking exceptions
2023-04-23 21:25:59,448:INFO:Soft dependency imported: shap: 0.41.0
2023-04-23 21:25:59,460:INFO:plot type: summary
2023-04-23 21:25:59,460:INFO:Creating TreeExplainer
2023-04-23 21:25:59,462:INFO:Compiling shap values
2023-04-23 21:26:02,891:INFO:Visual Rendered Successfully
2023-04-23 21:26:02,891:INFO:interpret_model() successfully completed......................................
2023-04-23 21:26:03,008:INFO:Initializing interpret_model()
2023-04-23 21:26:03,009:INFO:interpret_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=32, plot=reason, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>)
2023-04-23 21:26:03,009:INFO:Checking exceptions
2023-04-23 21:26:03,009:INFO:Soft dependency imported: shap: 0.41.0
2023-04-23 21:26:03,022:INFO:plot type: reason
2023-04-23 21:26:03,022:INFO:model type detected: type 1
2023-04-23 21:26:03,022:INFO:Creating TreeExplainer
2023-04-23 21:26:03,024:INFO:Compiling shap values
2023-04-23 21:26:03,024:INFO:model type detected: Unknown
2023-04-23 21:26:03,025:INFO:Visual Rendered Successfully
2023-04-23 21:26:03,025:INFO:interpret_model() successfully completed......................................
2023-04-23 21:26:03,127:INFO:Initializing interpret_model()
2023-04-23 21:26:03,127:INFO:interpret_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=reason, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001365A4B97E0>)
2023-04-23 21:26:03,127:INFO:Checking exceptions
2023-04-23 21:26:03,127:INFO:Soft dependency imported: shap: 0.41.0
2023-04-23 21:26:03,139:INFO:plot type: reason
2023-04-23 21:26:03,139:INFO:model type detected: type 1
2023-04-23 21:26:03,139:INFO:Creating TreeExplainer
2023-04-23 21:26:03,140:INFO:Compiling shap values
2023-04-23 21:26:03,140:WARNING:Observation set to None. Model agnostic plot will be rendered.
2023-04-23 21:26:03,149:INFO:Visual Rendered Successfully
2023-04-23 21:26:03,149:INFO:interpret_model() successfully completed......................................
2023-04-24 10:02:20,359:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\seaborn\categorical.py:166: FutureWarning: Setting a gradient palette using color= is deprecated and will be removed in version 0.13. Set `palette='dark:.25'` for same effect.
  warnings.warn(msg, FutureWarning)

2023-04-24 10:02:20,545:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\matplotlib\collections.py:963: RuntimeWarning: invalid value encountered in sqrt
  scale = np.sqrt(self._sizes) * dpi / 72.0 * self._factor

2023-04-24 10:02:21,160:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\matplotlib\collections.py:963: RuntimeWarning: invalid value encountered in sqrt
  scale = np.sqrt(self._sizes) * dpi / 72.0 * self._factor

2023-04-24 10:05:09,744:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\seaborn\categorical.py:166: FutureWarning: Setting a gradient palette using color= is deprecated and will be removed in version 0.13. Set `palette='dark:.25'` for same effect.
  warnings.warn(msg, FutureWarning)

2023-04-24 10:05:09,932:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\matplotlib\collections.py:963: RuntimeWarning: invalid value encountered in sqrt
  scale = np.sqrt(self._sizes) * dpi / 72.0 * self._factor

2023-04-24 10:05:10,531:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\matplotlib\collections.py:963: RuntimeWarning: invalid value encountered in sqrt
  scale = np.sqrt(self._sizes) * dpi / 72.0 * self._factor

2023-04-24 10:10:46,940:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\seaborn\categorical.py:166: FutureWarning: Setting a gradient palette using color= is deprecated and will be removed in version 0.13. Set `palette='dark:.25'` for same effect.
  warnings.warn(msg, FutureWarning)

2023-04-24 10:14:54,472:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\seaborn\categorical.py:166: FutureWarning: Setting a gradient palette using color= is deprecated and will be removed in version 0.13. Set `palette='dark:.25'` for same effect.
  warnings.warn(msg, FutureWarning)

2023-04-25 10:14:46,548:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\utils\extmath.py:1047: RuntimeWarning: invalid value encountered in divide
  updated_mean = (last_sum + new_sum) / updated_sample_count

2023-04-25 10:14:46,549:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\utils\extmath.py:1052: RuntimeWarning: invalid value encountered in divide
  T = new_sum / new_sample_count

2023-04-25 10:14:46,549:WARNING:C:\Users\123456\Documents\Github\INSE6210\venv\lib\site-packages\sklearn\utils\extmath.py:1072: RuntimeWarning: invalid value encountered in divide
  new_unnormalized_variance -= correction**2 / new_sample_count

2023-04-27 16:50:07,697:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\matplotlib\collections.py:963: RuntimeWarning: invalid value encountered in sqrt
  scale = np.sqrt(self._sizes) * dpi / 72.0 * self._factor

2023-04-27 16:50:08,080:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\matplotlib\collections.py:963: RuntimeWarning: invalid value encountered in sqrt
  scale = np.sqrt(self._sizes) * dpi / 72.0 * self._factor

2023-04-27 16:50:41,000:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\matplotlib\collections.py:963: RuntimeWarning: invalid value encountered in sqrt
  scale = np.sqrt(self._sizes) * dpi / 72.0 * self._factor

2023-04-27 16:50:41,286:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\matplotlib\collections.py:963: RuntimeWarning: invalid value encountered in sqrt
  scale = np.sqrt(self._sizes) * dpi / 72.0 * self._factor

2023-04-27 16:50:49,932:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-27 16:50:49,932:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-27 16:50:49,932:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-27 16:50:49,932:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-27 16:50:51,276:INFO:Soft dependency imported: prophet: 1.1.2
2023-04-27 16:50:51,597:INFO:PyCaret ClassificationExperiment
2023-04-27 16:50:51,597:INFO:Logging name: clf-default-name
2023-04-27 16:50:51,597:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-27 16:50:51,597:INFO:version 3.0.0
2023-04-27 16:50:51,597:INFO:Initializing setup()
2023-04-27 16:50:51,597:INFO:self.USI: c618
2023-04-27 16:50:51,597:INFO:self._variable_keys: {'y_train', 'y', 'X', 'n_jobs_param', 'is_multiclass', '_ml_usecase', 'exp_name_log', 'X_train', 'exp_id', 'seed', 'data', 'fix_imbalance', 'logging_param', 'fold_groups_param', 'fold_generator', 'y_test', 'pipeline', 'gpu_n_jobs_param', 'X_test', 'USI', 'html_param', 'idx', 'log_plots_param', 'target_param', 'fold_shuffle_param', '_available_plots', 'memory', 'gpu_param'}
2023-04-27 16:50:51,597:INFO:Checking environment
2023-04-27 16:50:51,597:INFO:python_version: 3.10.0
2023-04-27 16:50:51,597:INFO:python_build: ('tags/v3.10.0:b494f59', 'Oct  4 2021 19:00:18')
2023-04-27 16:50:51,597:INFO:machine: AMD64
2023-04-27 16:50:51,615:INFO:platform: Windows-10-10.0.22000-SP0
2023-04-27 16:50:51,617:INFO:Memory: svmem(total=34070724608, available=22495084544, percent=34.0, used=11575640064, free=22495084544)
2023-04-27 16:50:51,617:INFO:Physical Core: 12
2023-04-27 16:50:51,617:INFO:Logical Core: 20
2023-04-27 16:50:51,617:INFO:Checking libraries
2023-04-27 16:50:51,617:INFO:System:
2023-04-27 16:50:51,617:INFO:    python: 3.10.0 (tags/v3.10.0:b494f59, Oct  4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]
2023-04-27 16:50:51,617:INFO:executable: C:\Users\123456\Documents\GitHub\INSE6220\venv\Scripts\python.exe
2023-04-27 16:50:51,617:INFO:   machine: Windows-10-10.0.22000-SP0
2023-04-27 16:50:51,617:INFO:PyCaret required dependencies:
2023-04-27 16:50:51,617:INFO:                 pip: 23.1.1
2023-04-27 16:50:51,617:INFO:          setuptools: 67.7.1
2023-04-27 16:50:51,617:INFO:             pycaret: 3.0.0
2023-04-27 16:50:51,617:INFO:             IPython: 7.34.0
2023-04-27 16:50:51,617:INFO:          ipywidgets: 7.7.1
2023-04-27 16:50:51,617:INFO:                tqdm: 4.65.0
2023-04-27 16:50:51,617:INFO:               numpy: 1.23.5
2023-04-27 16:50:51,617:INFO:              pandas: 1.5.3
2023-04-27 16:50:51,617:INFO:              jinja2: 3.1.2
2023-04-27 16:50:51,617:INFO:               scipy: 1.10.1
2023-04-27 16:50:51,617:INFO:              joblib: 1.2.0
2023-04-27 16:50:51,618:INFO:             sklearn: 1.2.2
2023-04-27 16:50:51,618:INFO:                pyod: 1.0.9
2023-04-27 16:50:51,618:INFO:            imblearn: 0.10.1
2023-04-27 16:50:51,618:INFO:   category_encoders: 2.6.0
2023-04-27 16:50:51,618:INFO:            lightgbm: 3.3.5
2023-04-27 16:50:51,618:INFO:               numba: 0.56.4
2023-04-27 16:50:51,618:INFO:            requests: 2.27.1
2023-04-27 16:50:51,618:INFO:          matplotlib: 3.7.1
2023-04-27 16:50:51,618:INFO:          scikitplot: 0.3.7
2023-04-27 16:50:51,618:INFO:         yellowbrick: 1.5
2023-04-27 16:50:51,618:INFO:              plotly: 5.13.1
2023-04-27 16:50:51,618:INFO:             kaleido: 0.2.1
2023-04-27 16:50:51,618:INFO:         statsmodels: 0.13.5
2023-04-27 16:50:51,618:INFO:              sktime: 0.17.1
2023-04-27 16:50:51,618:INFO:               tbats: 1.1.3
2023-04-27 16:50:51,618:INFO:            pmdarima: 2.0.3
2023-04-27 16:50:51,618:INFO:              psutil: 5.9.5
2023-04-27 16:50:51,618:INFO:PyCaret optional dependencies:
2023-04-27 16:50:51,625:INFO:                shap: 0.41.0
2023-04-27 16:50:51,625:INFO:           interpret: Not installed
2023-04-27 16:50:51,625:INFO:                umap: Not installed
2023-04-27 16:50:51,625:INFO:    pandas_profiling: Not installed
2023-04-27 16:50:51,625:INFO:  explainerdashboard: Not installed
2023-04-27 16:50:51,625:INFO:             autoviz: Not installed
2023-04-27 16:50:51,625:INFO:           fairlearn: Not installed
2023-04-27 16:50:51,625:INFO:             xgboost: 1.7.5
2023-04-27 16:50:51,625:INFO:            catboost: Not installed
2023-04-27 16:50:51,626:INFO:              kmodes: Not installed
2023-04-27 16:50:51,626:INFO:             mlxtend: 0.14.0
2023-04-27 16:50:51,626:INFO:       statsforecast: Not installed
2023-04-27 16:50:51,626:INFO:        tune_sklearn: Not installed
2023-04-27 16:50:51,626:INFO:                 ray: Not installed
2023-04-27 16:50:51,626:INFO:            hyperopt: 0.2.7
2023-04-27 16:50:51,626:INFO:              optuna: Not installed
2023-04-27 16:50:51,626:INFO:               skopt: Not installed
2023-04-27 16:50:51,626:INFO:              mlflow: Not installed
2023-04-27 16:50:51,626:INFO:              gradio: Not installed
2023-04-27 16:50:51,626:INFO:             fastapi: Not installed
2023-04-27 16:50:51,626:INFO:             uvicorn: Not installed
2023-04-27 16:50:51,626:INFO:              m2cgen: Not installed
2023-04-27 16:50:51,626:INFO:           evidently: Not installed
2023-04-27 16:50:51,626:INFO:               fugue: Not installed
2023-04-27 16:50:51,626:INFO:           streamlit: Not installed
2023-04-27 16:50:51,626:INFO:             prophet: 1.1.2
2023-04-27 16:50:51,626:INFO:None
2023-04-27 16:50:51,626:INFO:Set up data.
2023-04-27 16:50:51,629:INFO:Set up train/test split.
2023-04-27 16:50:51,631:INFO:Set up index.
2023-04-27 16:50:51,631:INFO:Set up folding strategy.
2023-04-27 16:50:51,631:INFO:Assigning column types.
2023-04-27 16:50:51,633:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-27 16:50:51,654:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-27 16:50:51,657:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 16:50:51,676:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-27 16:50:51,922:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 16:50:51,944:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-27 16:50:51,946:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 16:50:51,959:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-27 16:50:51,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 16:50:51,960:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-27 16:50:51,983:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 16:50:51,997:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-27 16:50:51,998:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 16:50:52,020:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 16:50:52,033:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-27 16:50:52,034:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 16:50:52,035:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-27 16:50:52,071:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-27 16:50:52,073:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 16:50:52,115:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-27 16:50:52,116:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 16:50:52,118:INFO:Preparing preprocessing pipeline...
2023-04-27 16:50:52,119:INFO:Set up label encoding.
2023-04-27 16:50:52,119:INFO:Set up simple imputation.
2023-04-27 16:50:52,135:INFO:Finished creating preprocessing pipeline.
2023-04-27 16:50:52,138:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\123456\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['AR', 'PR', 'CP', 'LK', 'WD', 'AS',
                                             'LG'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-04-27 16:50:52,138:INFO:Creating final display dataframe.
2023-04-27 16:50:52,177:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             class
2                   Target type        Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2
4           Original data shape          (189, 8)
5        Transformed data shape          (189, 8)
6   Transformed train set shape          (132, 8)
7    Transformed test set shape           (57, 8)
8              Numeric features                 7
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              c618
2023-04-27 16:50:52,222:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-27 16:50:52,223:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 16:50:52,259:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-27 16:50:52,260:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 16:50:52,261:INFO:setup() successfully completed in 0.67s...............
2023-04-27 16:50:52,261:INFO:Initializing compare_models()
2023-04-27 16:50:52,261:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-04-27 16:50:52,261:INFO:Checking exceptions
2023-04-27 16:50:52,263:INFO:Preparing display monitor
2023-04-27 16:50:52,265:INFO:Initializing Logistic Regression
2023-04-27 16:50:52,265:INFO:Total runtime is 0.0 minutes
2023-04-27 16:50:52,265:INFO:SubProcess create_model() called ==================================
2023-04-27 16:50:52,266:INFO:Initializing create_model()
2023-04-27 16:50:52,266:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9A73D480>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:50:52,266:INFO:Checking exceptions
2023-04-27 16:50:52,266:INFO:Importing libraries
2023-04-27 16:50:52,266:INFO:Copying training dataset
2023-04-27 16:50:52,267:INFO:Defining folds
2023-04-27 16:50:52,267:INFO:Declaring metric variables
2023-04-27 16:50:52,267:INFO:Importing untrained model
2023-04-27 16:50:52,267:INFO:Logistic Regression Imported successfully
2023-04-27 16:50:52,267:INFO:Starting cross validation
2023-04-27 16:50:52,268:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:50:54,423:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,424:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,424:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,458:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,459:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,460:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,480:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,481:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,481:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,482:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,482:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,483:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,487:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,489:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,490:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,499:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,500:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,501:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,506:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,507:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,508:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,516:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,517:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,518:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,520:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,522:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,523:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,526:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,527:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,528:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:54,530:INFO:Calculating mean and std
2023-04-27 16:50:54,531:INFO:Creating metrics dataframe
2023-04-27 16:50:54,534:INFO:Uploading results into container
2023-04-27 16:50:54,535:INFO:Uploading model into container now
2023-04-27 16:50:54,535:INFO:_master_model_container: 1
2023-04-27 16:50:54,535:INFO:_display_container: 2
2023-04-27 16:50:54,535:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-27 16:50:54,535:INFO:create_model() successfully completed......................................
2023-04-27 16:50:54,727:INFO:SubProcess create_model() end ==================================
2023-04-27 16:50:54,728:INFO:Creating metrics dataframe
2023-04-27 16:50:54,730:INFO:Initializing K Neighbors Classifier
2023-04-27 16:50:54,730:INFO:Total runtime is 0.04109181960423788 minutes
2023-04-27 16:50:54,730:INFO:SubProcess create_model() called ==================================
2023-04-27 16:50:54,730:INFO:Initializing create_model()
2023-04-27 16:50:54,731:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9A73D480>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:50:54,731:INFO:Checking exceptions
2023-04-27 16:50:54,731:INFO:Importing libraries
2023-04-27 16:50:54,731:INFO:Copying training dataset
2023-04-27 16:50:54,732:INFO:Defining folds
2023-04-27 16:50:54,733:INFO:Declaring metric variables
2023-04-27 16:50:54,733:INFO:Importing untrained model
2023-04-27 16:50:54,733:INFO:K Neighbors Classifier Imported successfully
2023-04-27 16:50:54,733:INFO:Starting cross validation
2023-04-27 16:50:54,733:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:50:56,122:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,123:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,124:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,147:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,148:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,148:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,159:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,161:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,161:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,164:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,165:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,166:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,167:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,168:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,168:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,172:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,173:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,173:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,181:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,183:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,185:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,192:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,193:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,194:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,204:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,204:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,205:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,205:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,207:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,208:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,211:INFO:Calculating mean and std
2023-04-27 16:50:56,211:INFO:Creating metrics dataframe
2023-04-27 16:50:56,216:INFO:Uploading results into container
2023-04-27 16:50:56,216:INFO:Uploading model into container now
2023-04-27 16:50:56,216:INFO:_master_model_container: 2
2023-04-27 16:50:56,217:INFO:_display_container: 2
2023-04-27 16:50:56,217:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-27 16:50:56,217:INFO:create_model() successfully completed......................................
2023-04-27 16:50:56,285:INFO:SubProcess create_model() end ==================================
2023-04-27 16:50:56,286:INFO:Creating metrics dataframe
2023-04-27 16:50:56,288:INFO:Initializing Naive Bayes
2023-04-27 16:50:56,288:INFO:Total runtime is 0.06704343557357788 minutes
2023-04-27 16:50:56,288:INFO:SubProcess create_model() called ==================================
2023-04-27 16:50:56,288:INFO:Initializing create_model()
2023-04-27 16:50:56,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9A73D480>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:50:56,288:INFO:Checking exceptions
2023-04-27 16:50:56,288:INFO:Importing libraries
2023-04-27 16:50:56,289:INFO:Copying training dataset
2023-04-27 16:50:56,290:INFO:Defining folds
2023-04-27 16:50:56,290:INFO:Declaring metric variables
2023-04-27 16:50:56,290:INFO:Importing untrained model
2023-04-27 16:50:56,290:INFO:Naive Bayes Imported successfully
2023-04-27 16:50:56,290:INFO:Starting cross validation
2023-04-27 16:50:56,291:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:50:56,331:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,331:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,332:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,332:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,333:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,334:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,337:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,338:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,339:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,339:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,339:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,340:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,344:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,345:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,345:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,346:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,346:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,346:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,347:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,347:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,348:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,351:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,351:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,352:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,352:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,353:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,353:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,357:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,358:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,358:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,360:INFO:Calculating mean and std
2023-04-27 16:50:56,360:INFO:Creating metrics dataframe
2023-04-27 16:50:56,363:INFO:Uploading results into container
2023-04-27 16:50:56,363:INFO:Uploading model into container now
2023-04-27 16:50:56,364:INFO:_master_model_container: 3
2023-04-27 16:50:56,364:INFO:_display_container: 2
2023-04-27 16:50:56,364:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-27 16:50:56,364:INFO:create_model() successfully completed......................................
2023-04-27 16:50:56,428:INFO:SubProcess create_model() end ==================================
2023-04-27 16:50:56,428:INFO:Creating metrics dataframe
2023-04-27 16:50:56,430:INFO:Initializing Decision Tree Classifier
2023-04-27 16:50:56,430:INFO:Total runtime is 0.06942072709401448 minutes
2023-04-27 16:50:56,430:INFO:SubProcess create_model() called ==================================
2023-04-27 16:50:56,430:INFO:Initializing create_model()
2023-04-27 16:50:56,431:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9A73D480>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:50:56,431:INFO:Checking exceptions
2023-04-27 16:50:56,431:INFO:Importing libraries
2023-04-27 16:50:56,431:INFO:Copying training dataset
2023-04-27 16:50:56,432:INFO:Defining folds
2023-04-27 16:50:56,432:INFO:Declaring metric variables
2023-04-27 16:50:56,432:INFO:Importing untrained model
2023-04-27 16:50:56,432:INFO:Decision Tree Classifier Imported successfully
2023-04-27 16:50:56,432:INFO:Starting cross validation
2023-04-27 16:50:56,433:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:50:56,476:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,477:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,478:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,478:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,479:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,479:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,480:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,480:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,480:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,480:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,480:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,481:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,484:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,485:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,486:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,489:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,490:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,490:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,493:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,493:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,493:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,494:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,494:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,495:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,498:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,499:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,499:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,504:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,505:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,506:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,508:INFO:Calculating mean and std
2023-04-27 16:50:56,508:INFO:Creating metrics dataframe
2023-04-27 16:50:56,510:INFO:Uploading results into container
2023-04-27 16:50:56,511:INFO:Uploading model into container now
2023-04-27 16:50:56,511:INFO:_master_model_container: 4
2023-04-27 16:50:56,511:INFO:_display_container: 2
2023-04-27 16:50:56,511:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-27 16:50:56,511:INFO:create_model() successfully completed......................................
2023-04-27 16:50:56,574:INFO:SubProcess create_model() end ==================================
2023-04-27 16:50:56,574:INFO:Creating metrics dataframe
2023-04-27 16:50:56,577:INFO:Initializing SVM - Linear Kernel
2023-04-27 16:50:56,577:INFO:Total runtime is 0.07187531391779581 minutes
2023-04-27 16:50:56,577:INFO:SubProcess create_model() called ==================================
2023-04-27 16:50:56,577:INFO:Initializing create_model()
2023-04-27 16:50:56,577:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9A73D480>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:50:56,577:INFO:Checking exceptions
2023-04-27 16:50:56,577:INFO:Importing libraries
2023-04-27 16:50:56,577:INFO:Copying training dataset
2023-04-27 16:50:56,579:INFO:Defining folds
2023-04-27 16:50:56,579:INFO:Declaring metric variables
2023-04-27 16:50:56,579:INFO:Importing untrained model
2023-04-27 16:50:56,579:INFO:SVM - Linear Kernel Imported successfully
2023-04-27 16:50:56,579:INFO:Starting cross validation
2023-04-27 16:50:56,580:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:50:56,630:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 16:50:56,630:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 16:50:56,630:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 16:50:56,630:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,631:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,631:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,631:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 16:50:56,632:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,632:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,632:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,632:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,633:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,633:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,633:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,634:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,634:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,634:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 16:50:56,635:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,636:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,637:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,639:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 16:50:56,640:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,640:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,641:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,646:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 16:50:56,646:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,646:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 16:50:56,647:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,647:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,648:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,648:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,648:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-27 16:50:56,649:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,651:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 16:50:56,651:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 16:50:56,651:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,651:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,652:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,652:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,652:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,653:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,655:INFO:Calculating mean and std
2023-04-27 16:50:56,655:INFO:Creating metrics dataframe
2023-04-27 16:50:56,658:INFO:Uploading results into container
2023-04-27 16:50:56,658:INFO:Uploading model into container now
2023-04-27 16:50:56,658:INFO:_master_model_container: 5
2023-04-27 16:50:56,659:INFO:_display_container: 2
2023-04-27 16:50:56,659:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-04-27 16:50:56,659:INFO:create_model() successfully completed......................................
2023-04-27 16:50:56,720:INFO:SubProcess create_model() end ==================================
2023-04-27 16:50:56,720:INFO:Creating metrics dataframe
2023-04-27 16:50:56,723:INFO:Initializing Ridge Classifier
2023-04-27 16:50:56,723:INFO:Total runtime is 0.07430064678192137 minutes
2023-04-27 16:50:56,723:INFO:SubProcess create_model() called ==================================
2023-04-27 16:50:56,723:INFO:Initializing create_model()
2023-04-27 16:50:56,723:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9A73D480>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:50:56,723:INFO:Checking exceptions
2023-04-27 16:50:56,723:INFO:Importing libraries
2023-04-27 16:50:56,723:INFO:Copying training dataset
2023-04-27 16:50:56,725:INFO:Defining folds
2023-04-27 16:50:56,725:INFO:Declaring metric variables
2023-04-27 16:50:56,725:INFO:Importing untrained model
2023-04-27 16:50:56,725:INFO:Ridge Classifier Imported successfully
2023-04-27 16:50:56,725:INFO:Starting cross validation
2023-04-27 16:50:56,726:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:50:56,769:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:50:56,769:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:50:56,769:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,769:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,770:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,770:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,770:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,771:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:50:56,771:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,771:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

tom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:50:56,771:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:50:56,771:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,772:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,772:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,772:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,773:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,773:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,774:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,774:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,777:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:50:56,778:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,779:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,779:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:50:56,780:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,780:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,781:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,782:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:50:56,782:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,782:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,783:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:50:56,783:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,783:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,784:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,784:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,785:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,786:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:50:56,787:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,787:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,788:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:56,790:INFO:Calculating mean and std
2023-04-27 16:50:56,790:INFO:Creating metrics dataframe
2023-04-27 16:50:56,793:INFO:Uploading results into container
2023-04-27 16:50:56,793:INFO:Uploading model into container now
2023-04-27 16:50:56,793:INFO:_master_model_container: 6
2023-04-27 16:50:56,793:INFO:_display_container: 2
2023-04-27 16:50:56,794:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-04-27 16:50:56,794:INFO:create_model() successfully completed......................................
2023-04-27 16:50:56,856:INFO:SubProcess create_model() end ==================================
2023-04-27 16:50:56,856:INFO:Creating metrics dataframe
2023-04-27 16:50:56,860:INFO:Initializing Random Forest Classifier
2023-04-27 16:50:56,860:INFO:Total runtime is 0.07658387025197345 minutes
2023-04-27 16:50:56,860:INFO:SubProcess create_model() called ==================================
2023-04-27 16:50:56,860:INFO:Initializing create_model()
2023-04-27 16:50:56,860:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9A73D480>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:50:56,860:INFO:Checking exceptions
2023-04-27 16:50:56,860:INFO:Importing libraries
2023-04-27 16:50:56,860:INFO:Copying training dataset
2023-04-27 16:50:56,861:INFO:Defining folds
2023-04-27 16:50:56,862:INFO:Declaring metric variables
2023-04-27 16:50:56,862:INFO:Importing untrained model
2023-04-27 16:50:56,862:INFO:Random Forest Classifier Imported successfully
2023-04-27 16:50:56,862:INFO:Starting cross validation
2023-04-27 16:50:56,862:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:50:57,182:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,183:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,184:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,191:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,193:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,194:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,203:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,204:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,205:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,211:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,212:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,213:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,215:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,216:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,217:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,217:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,218:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,219:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,221:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,221:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,222:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,222:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,223:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,223:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,225:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,226:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,227:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,243:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,244:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,245:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,246:INFO:Calculating mean and std
2023-04-27 16:50:57,247:INFO:Creating metrics dataframe
2023-04-27 16:50:57,253:INFO:Uploading results into container
2023-04-27 16:50:57,254:INFO:Uploading model into container now
2023-04-27 16:50:57,254:INFO:_master_model_container: 7
2023-04-27 16:50:57,254:INFO:_display_container: 2
2023-04-27 16:50:57,254:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-27 16:50:57,254:INFO:create_model() successfully completed......................................
2023-04-27 16:50:57,323:INFO:SubProcess create_model() end ==================================
2023-04-27 16:50:57,323:INFO:Creating metrics dataframe
2023-04-27 16:50:57,326:INFO:Initializing Quadratic Discriminant Analysis
2023-04-27 16:50:57,327:INFO:Total runtime is 0.08436029752095539 minutes
2023-04-27 16:50:57,327:INFO:SubProcess create_model() called ==================================
2023-04-27 16:50:57,327:INFO:Initializing create_model()
2023-04-27 16:50:57,327:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9A73D480>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:50:57,327:INFO:Checking exceptions
2023-04-27 16:50:57,327:INFO:Importing libraries
2023-04-27 16:50:57,327:INFO:Copying training dataset
2023-04-27 16:50:57,329:INFO:Defining folds
2023-04-27 16:50:57,329:INFO:Declaring metric variables
2023-04-27 16:50:57,329:INFO:Importing untrained model
2023-04-27 16:50:57,329:INFO:Quadratic Discriminant Analysis Imported successfully
2023-04-27 16:50:57,329:INFO:Starting cross validation
2023-04-27 16:50:57,330:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:50:57,378:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,378:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,379:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,379:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,380:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,380:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,380:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,381:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,381:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,382:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,383:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,383:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,384:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,384:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,392:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,393:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,393:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,393:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,394:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,394:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,394:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,394:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,395:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,397:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,398:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,399:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,402:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,403:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,404:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,421:INFO:Calculating mean and std
2023-04-27 16:50:57,422:INFO:Creating metrics dataframe
2023-04-27 16:50:57,428:INFO:Uploading results into container
2023-04-27 16:50:57,428:INFO:Uploading model into container now
2023-04-27 16:50:57,428:INFO:_master_model_container: 8
2023-04-27 16:50:57,428:INFO:_display_container: 2
2023-04-27 16:50:57,428:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-04-27 16:50:57,428:INFO:create_model() successfully completed......................................
2023-04-27 16:50:57,492:INFO:SubProcess create_model() end ==================================
2023-04-27 16:50:57,492:INFO:Creating metrics dataframe
2023-04-27 16:50:57,495:INFO:Initializing Ada Boost Classifier
2023-04-27 16:50:57,495:INFO:Total runtime is 0.08716184695561725 minutes
2023-04-27 16:50:57,495:INFO:SubProcess create_model() called ==================================
2023-04-27 16:50:57,495:INFO:Initializing create_model()
2023-04-27 16:50:57,495:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9A73D480>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:50:57,495:INFO:Checking exceptions
2023-04-27 16:50:57,495:INFO:Importing libraries
2023-04-27 16:50:57,495:INFO:Copying training dataset
2023-04-27 16:50:57,497:INFO:Defining folds
2023-04-27 16:50:57,497:INFO:Declaring metric variables
2023-04-27 16:50:57,497:INFO:Importing untrained model
2023-04-27 16:50:57,497:INFO:Ada Boost Classifier Imported successfully
2023-04-27 16:50:57,497:INFO:Starting cross validation
2023-04-27 16:50:57,498:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:50:57,611:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,613:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,614:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,615:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,615:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,616:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,626:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,627:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,627:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,631:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,631:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,632:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,632:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,633:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,633:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,642:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,643:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,643:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,643:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,644:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,644:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,645:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,645:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,645:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,649:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,651:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,652:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,658:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,659:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,660:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:57,662:INFO:Calculating mean and std
2023-04-27 16:50:57,662:INFO:Creating metrics dataframe
2023-04-27 16:50:57,669:INFO:Uploading results into container
2023-04-27 16:50:57,669:INFO:Uploading model into container now
2023-04-27 16:50:57,669:INFO:_master_model_container: 9
2023-04-27 16:50:57,669:INFO:_display_container: 2
2023-04-27 16:50:57,670:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-04-27 16:50:57,670:INFO:create_model() successfully completed......................................
2023-04-27 16:50:57,732:INFO:SubProcess create_model() end ==================================
2023-04-27 16:50:57,732:INFO:Creating metrics dataframe
2023-04-27 16:50:57,735:INFO:Initializing Gradient Boosting Classifier
2023-04-27 16:50:57,735:INFO:Total runtime is 0.09117153882980344 minutes
2023-04-27 16:50:57,735:INFO:SubProcess create_model() called ==================================
2023-04-27 16:50:57,735:INFO:Initializing create_model()
2023-04-27 16:50:57,735:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9A73D480>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:50:57,735:INFO:Checking exceptions
2023-04-27 16:50:57,735:INFO:Importing libraries
2023-04-27 16:50:57,735:INFO:Copying training dataset
2023-04-27 16:50:57,737:INFO:Defining folds
2023-04-27 16:50:57,737:INFO:Declaring metric variables
2023-04-27 16:50:57,737:INFO:Importing untrained model
2023-04-27 16:50:57,737:INFO:Gradient Boosting Classifier Imported successfully
2023-04-27 16:50:57,737:INFO:Starting cross validation
2023-04-27 16:50:57,738:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:50:58,163:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,164:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,164:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,183:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,184:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,185:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,186:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,187:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,187:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,188:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,188:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,188:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,191:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,192:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,192:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,202:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,203:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,204:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,218:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,219:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,219:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,239:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,240:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,241:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,248:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,249:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,250:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,262:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,262:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,263:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,265:INFO:Calculating mean and std
2023-04-27 16:50:58,265:INFO:Creating metrics dataframe
2023-04-27 16:50:58,275:INFO:Uploading results into container
2023-04-27 16:50:58,276:INFO:Uploading model into container now
2023-04-27 16:50:58,276:INFO:_master_model_container: 10
2023-04-27 16:50:58,276:INFO:_display_container: 2
2023-04-27 16:50:58,276:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-27 16:50:58,276:INFO:create_model() successfully completed......................................
2023-04-27 16:50:58,339:INFO:SubProcess create_model() end ==================================
2023-04-27 16:50:58,339:INFO:Creating metrics dataframe
2023-04-27 16:50:58,342:INFO:Initializing Linear Discriminant Analysis
2023-04-27 16:50:58,342:INFO:Total runtime is 0.10128393173217771 minutes
2023-04-27 16:50:58,342:INFO:SubProcess create_model() called ==================================
2023-04-27 16:50:58,342:INFO:Initializing create_model()
2023-04-27 16:50:58,342:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9A73D480>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:50:58,342:INFO:Checking exceptions
2023-04-27 16:50:58,343:INFO:Importing libraries
2023-04-27 16:50:58,343:INFO:Copying training dataset
2023-04-27 16:50:58,344:INFO:Defining folds
2023-04-27 16:50:58,344:INFO:Declaring metric variables
2023-04-27 16:50:58,344:INFO:Importing untrained model
2023-04-27 16:50:58,344:INFO:Linear Discriminant Analysis Imported successfully
2023-04-27 16:50:58,344:INFO:Starting cross validation
2023-04-27 16:50:58,345:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:50:58,388:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,389:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,390:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,394:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,395:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,395:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,396:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,397:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,397:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,397:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,398:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,399:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,401:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,402:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,403:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,405:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,405:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,406:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,407:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,407:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,407:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,407:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,408:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,409:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,409:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,410:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,410:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,414:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,414:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,415:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,450:INFO:Calculating mean and std
2023-04-27 16:50:58,450:INFO:Creating metrics dataframe
2023-04-27 16:50:58,460:INFO:Uploading results into container
2023-04-27 16:50:58,461:INFO:Uploading model into container now
2023-04-27 16:50:58,461:INFO:_master_model_container: 11
2023-04-27 16:50:58,461:INFO:_display_container: 2
2023-04-27 16:50:58,461:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-04-27 16:50:58,461:INFO:create_model() successfully completed......................................
2023-04-27 16:50:58,524:INFO:SubProcess create_model() end ==================================
2023-04-27 16:50:58,525:INFO:Creating metrics dataframe
2023-04-27 16:50:58,527:INFO:Initializing Extra Trees Classifier
2023-04-27 16:50:58,527:INFO:Total runtime is 0.10436789989471433 minutes
2023-04-27 16:50:58,527:INFO:SubProcess create_model() called ==================================
2023-04-27 16:50:58,527:INFO:Initializing create_model()
2023-04-27 16:50:58,527:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9A73D480>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:50:58,528:INFO:Checking exceptions
2023-04-27 16:50:58,528:INFO:Importing libraries
2023-04-27 16:50:58,528:INFO:Copying training dataset
2023-04-27 16:50:58,529:INFO:Defining folds
2023-04-27 16:50:58,529:INFO:Declaring metric variables
2023-04-27 16:50:58,529:INFO:Importing untrained model
2023-04-27 16:50:58,529:INFO:Extra Trees Classifier Imported successfully
2023-04-27 16:50:58,529:INFO:Starting cross validation
2023-04-27 16:50:58,530:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:50:58,755:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,756:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,756:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,756:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,757:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,757:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,765:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,766:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,767:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,769:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,770:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,771:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,777:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,778:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,780:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,796:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,798:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,798:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,840:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,841:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,842:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,844:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,844:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,845:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,845:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,845:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,847:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,847:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,848:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,849:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:58,866:INFO:Calculating mean and std
2023-04-27 16:50:58,866:INFO:Creating metrics dataframe
2023-04-27 16:50:58,877:INFO:Uploading results into container
2023-04-27 16:50:58,877:INFO:Uploading model into container now
2023-04-27 16:50:58,878:INFO:_master_model_container: 12
2023-04-27 16:50:58,878:INFO:_display_container: 2
2023-04-27 16:50:58,878:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-04-27 16:50:58,878:INFO:create_model() successfully completed......................................
2023-04-27 16:50:58,939:INFO:SubProcess create_model() end ==================================
2023-04-27 16:50:58,939:INFO:Creating metrics dataframe
2023-04-27 16:50:58,942:INFO:Initializing Extreme Gradient Boosting
2023-04-27 16:50:58,942:INFO:Total runtime is 0.11129049460093178 minutes
2023-04-27 16:50:58,942:INFO:SubProcess create_model() called ==================================
2023-04-27 16:50:58,942:INFO:Initializing create_model()
2023-04-27 16:50:58,942:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9A73D480>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:50:58,942:INFO:Checking exceptions
2023-04-27 16:50:58,942:INFO:Importing libraries
2023-04-27 16:50:58,942:INFO:Copying training dataset
2023-04-27 16:50:58,944:INFO:Defining folds
2023-04-27 16:50:58,944:INFO:Declaring metric variables
2023-04-27 16:50:58,944:INFO:Importing untrained model
2023-04-27 16:50:58,944:INFO:Extreme Gradient Boosting Imported successfully
2023-04-27 16:50:58,944:INFO:Starting cross validation
2023-04-27 16:50:58,945:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:50:59,121:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,122:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,123:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,123:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,124:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,124:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,124:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,125:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,126:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,129:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,130:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,130:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,131:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,131:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,132:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,140:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,141:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,141:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,142:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,142:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,143:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,149:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,150:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,150:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,169:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,169:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,170:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,173:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,174:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,174:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,210:INFO:Calculating mean and std
2023-04-27 16:50:59,210:INFO:Creating metrics dataframe
2023-04-27 16:50:59,223:INFO:Uploading results into container
2023-04-27 16:50:59,223:INFO:Uploading model into container now
2023-04-27 16:50:59,223:INFO:_master_model_container: 13
2023-04-27 16:50:59,224:INFO:_display_container: 2
2023-04-27 16:50:59,224:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-04-27 16:50:59,224:INFO:create_model() successfully completed......................................
2023-04-27 16:50:59,286:INFO:SubProcess create_model() end ==================================
2023-04-27 16:50:59,286:INFO:Creating metrics dataframe
2023-04-27 16:50:59,288:INFO:Initializing Light Gradient Boosting Machine
2023-04-27 16:50:59,289:INFO:Total runtime is 0.1170761982599894 minutes
2023-04-27 16:50:59,289:INFO:SubProcess create_model() called ==================================
2023-04-27 16:50:59,289:INFO:Initializing create_model()
2023-04-27 16:50:59,289:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9A73D480>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:50:59,289:INFO:Checking exceptions
2023-04-27 16:50:59,289:INFO:Importing libraries
2023-04-27 16:50:59,289:INFO:Copying training dataset
2023-04-27 16:50:59,290:INFO:Defining folds
2023-04-27 16:50:59,290:INFO:Declaring metric variables
2023-04-27 16:50:59,290:INFO:Importing untrained model
2023-04-27 16:50:59,291:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-27 16:50:59,291:INFO:Starting cross validation
2023-04-27 16:50:59,291:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:50:59,827:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,828:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,829:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,831:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,832:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,833:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,833:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,834:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,834:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,848:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,849:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,850:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,852:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,853:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,854:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,856:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,857:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,857:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,857:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,858:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,858:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,859:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,860:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,860:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,861:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,861:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,862:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,871:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,872:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,872:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:50:59,919:INFO:Calculating mean and std
2023-04-27 16:50:59,919:INFO:Creating metrics dataframe
2023-04-27 16:50:59,931:INFO:Uploading results into container
2023-04-27 16:50:59,932:INFO:Uploading model into container now
2023-04-27 16:50:59,932:INFO:_master_model_container: 14
2023-04-27 16:50:59,932:INFO:_display_container: 2
2023-04-27 16:50:59,932:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-27 16:50:59,932:INFO:create_model() successfully completed......................................
2023-04-27 16:50:59,995:INFO:SubProcess create_model() end ==================================
2023-04-27 16:50:59,995:INFO:Creating metrics dataframe
2023-04-27 16:50:59,998:INFO:Initializing Dummy Classifier
2023-04-27 16:50:59,998:INFO:Total runtime is 0.12888379096984862 minutes
2023-04-27 16:50:59,998:INFO:SubProcess create_model() called ==================================
2023-04-27 16:50:59,998:INFO:Initializing create_model()
2023-04-27 16:50:59,998:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9A73D480>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:50:59,998:INFO:Checking exceptions
2023-04-27 16:50:59,998:INFO:Importing libraries
2023-04-27 16:50:59,998:INFO:Copying training dataset
2023-04-27 16:50:59,999:INFO:Defining folds
2023-04-27 16:50:59,999:INFO:Declaring metric variables
2023-04-27 16:50:59,999:INFO:Importing untrained model
2023-04-27 16:51:00,000:INFO:Dummy Classifier Imported successfully
2023-04-27 16:51:00,000:INFO:Starting cross validation
2023-04-27 16:51:00,000:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:00,040:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,041:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,041:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,042:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,042:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-27 16:51:00,043:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-27 16:51:00,043:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,043:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,050:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,051:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,051:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,051:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-27 16:51:00,051:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,052:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,052:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,052:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,053:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-27 16:51:00,053:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,053:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-27 16:51:00,053:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,060:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,061:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,061:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-27 16:51:00,062:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,065:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,065:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,066:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,066:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,066:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-27 16:51:00,067:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,067:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-27 16:51:00,067:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,067:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,068:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,068:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,068:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-27 16:51:00,068:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,069:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,069:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-27 16:51:00,069:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,130:INFO:Calculating mean and std
2023-04-27 16:51:00,130:INFO:Creating metrics dataframe
2023-04-27 16:51:00,142:INFO:Uploading results into container
2023-04-27 16:51:00,143:INFO:Uploading model into container now
2023-04-27 16:51:00,143:INFO:_master_model_container: 15
2023-04-27 16:51:00,143:INFO:_display_container: 2
2023-04-27 16:51:00,143:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-04-27 16:51:00,143:INFO:create_model() successfully completed......................................
2023-04-27 16:51:00,204:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:00,205:INFO:Creating metrics dataframe
2023-04-27 16:51:00,208:INFO:Initializing create_model()
2023-04-27 16:51:00,208:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:00,208:INFO:Checking exceptions
2023-04-27 16:51:00,208:INFO:Importing libraries
2023-04-27 16:51:00,208:INFO:Copying training dataset
2023-04-27 16:51:00,210:INFO:Defining folds
2023-04-27 16:51:00,210:INFO:Declaring metric variables
2023-04-27 16:51:00,210:INFO:Importing untrained model
2023-04-27 16:51:00,210:INFO:Declaring custom model
2023-04-27 16:51:00,210:INFO:Ridge Classifier Imported successfully
2023-04-27 16:51:00,210:INFO:Cross validation set to False
2023-04-27 16:51:00,210:INFO:Fitting Model
2023-04-27 16:51:00,230:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-04-27 16:51:00,230:INFO:create_model() successfully completed......................................
2023-04-27 16:51:00,298:INFO:_master_model_container: 15
2023-04-27 16:51:00,298:INFO:_display_container: 2
2023-04-27 16:51:00,298:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-04-27 16:51:00,298:INFO:compare_models() successfully completed......................................
2023-04-27 16:51:00,298:INFO:Initializing create_model()
2023-04-27 16:51:00,298:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:00,298:INFO:Checking exceptions
2023-04-27 16:51:00,299:INFO:Importing libraries
2023-04-27 16:51:00,299:INFO:Copying training dataset
2023-04-27 16:51:00,300:INFO:Defining folds
2023-04-27 16:51:00,301:INFO:Declaring metric variables
2023-04-27 16:51:00,301:INFO:Importing untrained model
2023-04-27 16:51:00,301:INFO:Decision Tree Classifier Imported successfully
2023-04-27 16:51:00,301:INFO:Starting cross validation
2023-04-27 16:51:00,301:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:00,343:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,344:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,345:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,346:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,346:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,347:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,352:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,353:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,354:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,354:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,355:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,355:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,356:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,357:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,358:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,358:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,358:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,359:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,360:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,361:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,362:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,367:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,368:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,369:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,370:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,371:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,372:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,372:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,373:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,374:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:00,431:INFO:Calculating mean and std
2023-04-27 16:51:00,431:INFO:Creating metrics dataframe
2023-04-27 16:51:00,433:INFO:Finalizing model
2023-04-27 16:51:00,455:INFO:Uploading results into container
2023-04-27 16:51:00,455:INFO:Uploading model into container now
2023-04-27 16:51:00,460:INFO:_master_model_container: 16
2023-04-27 16:51:00,460:INFO:_display_container: 3
2023-04-27 16:51:00,460:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-27 16:51:00,460:INFO:create_model() successfully completed......................................
2023-04-27 16:51:00,524:INFO:Initializing tune_model()
2023-04-27 16:51:00,524:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>)
2023-04-27 16:51:00,524:INFO:Checking exceptions
2023-04-27 16:51:00,525:INFO:Copying training dataset
2023-04-27 16:51:00,526:INFO:Checking base model
2023-04-27 16:51:00,526:INFO:Base model : Decision Tree Classifier
2023-04-27 16:51:00,527:INFO:Declaring metric variables
2023-04-27 16:51:00,527:INFO:Defining Hyperparameters
2023-04-27 16:51:00,595:INFO:Tuning with n_jobs=-1
2023-04-27 16:51:00,596:INFO:Initializing RandomizedSearchCV
2023-04-27 16:51:01,752:INFO:best_params: {'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.0001, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'gini'}
2023-04-27 16:51:01,752:INFO:Hyperparameter search completed
2023-04-27 16:51:01,752:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:01,753:INFO:Initializing create_model()
2023-04-27 16:51:01,753:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA99AABD00>, model_only=True, return_train_score=False, kwargs={'min_samples_split': 10, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.0001, 'max_features': 1.0, 'max_depth': 6, 'criterion': 'gini'})
2023-04-27 16:51:01,753:INFO:Checking exceptions
2023-04-27 16:51:01,753:INFO:Importing libraries
2023-04-27 16:51:01,753:INFO:Copying training dataset
2023-04-27 16:51:01,755:INFO:Defining folds
2023-04-27 16:51:01,755:INFO:Declaring metric variables
2023-04-27 16:51:01,755:INFO:Importing untrained model
2023-04-27 16:51:01,755:INFO:Declaring custom model
2023-04-27 16:51:01,755:INFO:Decision Tree Classifier Imported successfully
2023-04-27 16:51:01,755:INFO:Starting cross validation
2023-04-27 16:51:01,756:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:01,802:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,803:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,803:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,804:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,804:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,805:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,805:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,806:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,806:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,806:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,807:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,807:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,807:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,807:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,808:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,812:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,813:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,815:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,818:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,819:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,820:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,822:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,823:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,823:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,823:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,825:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,825:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,825:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,825:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,826:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:01,887:INFO:Calculating mean and std
2023-04-27 16:51:01,888:INFO:Creating metrics dataframe
2023-04-27 16:51:01,889:INFO:Finalizing model
2023-04-27 16:51:01,910:INFO:Uploading results into container
2023-04-27 16:51:01,910:INFO:Uploading model into container now
2023-04-27 16:51:01,911:INFO:_master_model_container: 17
2023-04-27 16:51:01,911:INFO:_display_container: 4
2023-04-27 16:51:01,911:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=6, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.0001, min_samples_leaf=4,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-27 16:51:01,911:INFO:create_model() successfully completed......................................
2023-04-27 16:51:01,969:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:01,970:INFO:choose_better activated
2023-04-27 16:51:01,970:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:01,970:INFO:Initializing create_model()
2023-04-27 16:51:01,970:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:01,970:INFO:Checking exceptions
2023-04-27 16:51:01,971:INFO:Importing libraries
2023-04-27 16:51:01,971:INFO:Copying training dataset
2023-04-27 16:51:01,972:INFO:Defining folds
2023-04-27 16:51:01,972:INFO:Declaring metric variables
2023-04-27 16:51:01,972:INFO:Importing untrained model
2023-04-27 16:51:01,972:INFO:Declaring custom model
2023-04-27 16:51:01,972:INFO:Decision Tree Classifier Imported successfully
2023-04-27 16:51:01,973:INFO:Starting cross validation
2023-04-27 16:51:01,973:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:02,013:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,014:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,015:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,018:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,019:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,020:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,020:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,021:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,021:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,021:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,022:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,022:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,024:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,025:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,026:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,027:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,028:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,029:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,031:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,032:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,033:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,034:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,034:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,034:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,035:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,035:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,036:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,041:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,041:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,042:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,101:INFO:Calculating mean and std
2023-04-27 16:51:02,101:INFO:Creating metrics dataframe
2023-04-27 16:51:02,103:INFO:Finalizing model
2023-04-27 16:51:02,126:INFO:Uploading results into container
2023-04-27 16:51:02,127:INFO:Uploading model into container now
2023-04-27 16:51:02,127:INFO:_master_model_container: 18
2023-04-27 16:51:02,127:INFO:_display_container: 5
2023-04-27 16:51:02,127:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-27 16:51:02,127:INFO:create_model() successfully completed......................................
2023-04-27 16:51:02,185:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:02,185:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best') result for Accuracy is 0.9159
2023-04-27 16:51:02,186:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=6, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.0001, min_samples_leaf=4,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best') result for Accuracy is 0.917
2023-04-27 16:51:02,186:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=6, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.0001, min_samples_leaf=4,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best') is best model
2023-04-27 16:51:02,186:INFO:choose_better completed
2023-04-27 16:51:02,190:INFO:_master_model_container: 18
2023-04-27 16:51:02,190:INFO:_display_container: 4
2023-04-27 16:51:02,190:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=6, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.0001, min_samples_leaf=4,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-27 16:51:02,190:INFO:tune_model() successfully completed......................................
2023-04-27 16:51:02,257:INFO:Initializing evaluate_model()
2023-04-27 16:51:02,257:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=6, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.0001, min_samples_leaf=4,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-04-27 16:51:02,263:INFO:Initializing create_model()
2023-04-27 16:51:02,263:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:02,263:INFO:Checking exceptions
2023-04-27 16:51:02,263:INFO:Importing libraries
2023-04-27 16:51:02,263:INFO:Copying training dataset
2023-04-27 16:51:02,265:INFO:Defining folds
2023-04-27 16:51:02,265:INFO:Declaring metric variables
2023-04-27 16:51:02,265:INFO:Importing untrained model
2023-04-27 16:51:02,265:INFO:K Neighbors Classifier Imported successfully
2023-04-27 16:51:02,266:INFO:Starting cross validation
2023-04-27 16:51:02,266:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:02,327:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,328:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,329:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,330:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,331:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,331:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,333:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,333:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,334:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,334:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,335:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,335:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,338:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,339:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,339:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,340:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,340:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,341:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,349:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,350:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,350:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,351:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,351:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,352:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,354:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,355:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,356:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,356:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,357:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,358:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:02,414:INFO:Calculating mean and std
2023-04-27 16:51:02,414:INFO:Creating metrics dataframe
2023-04-27 16:51:02,416:INFO:Finalizing model
2023-04-27 16:51:02,438:INFO:Uploading results into container
2023-04-27 16:51:02,438:INFO:Uploading model into container now
2023-04-27 16:51:02,443:INFO:_master_model_container: 19
2023-04-27 16:51:02,443:INFO:_display_container: 5
2023-04-27 16:51:02,443:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-27 16:51:02,443:INFO:create_model() successfully completed......................................
2023-04-27 16:51:02,505:INFO:Initializing tune_model()
2023-04-27 16:51:02,505:INFO:tune_model(estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, n_iter=10, custom_grid={'n_neighbors': array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49])}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>)
2023-04-27 16:51:02,505:INFO:Checking exceptions
2023-04-27 16:51:02,506:INFO:Copying training dataset
2023-04-27 16:51:02,507:INFO:Checking base model
2023-04-27 16:51:02,507:INFO:Base model : K Neighbors Classifier
2023-04-27 16:51:02,507:INFO:Declaring metric variables
2023-04-27 16:51:02,507:INFO:Defining Hyperparameters
2023-04-27 16:51:02,567:INFO:custom_grid: {'actual_estimator__n_neighbors': array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49])}
2023-04-27 16:51:02,568:INFO:Tuning with n_jobs=-1
2023-04-27 16:51:02,568:INFO:Initializing RandomizedSearchCV
2023-04-27 16:51:03,742:INFO:best_params: {'actual_estimator__n_neighbors': 17}
2023-04-27 16:51:03,743:INFO:Hyperparameter search completed
2023-04-27 16:51:03,743:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:03,743:INFO:Initializing create_model()
2023-04-27 16:51:03,743:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9970DE10>, model_only=True, return_train_score=False, kwargs={'n_neighbors': 17})
2023-04-27 16:51:03,743:INFO:Checking exceptions
2023-04-27 16:51:03,743:INFO:Importing libraries
2023-04-27 16:51:03,743:INFO:Copying training dataset
2023-04-27 16:51:03,745:INFO:Defining folds
2023-04-27 16:51:03,745:INFO:Declaring metric variables
2023-04-27 16:51:03,745:INFO:Importing untrained model
2023-04-27 16:51:03,745:INFO:Declaring custom model
2023-04-27 16:51:03,745:INFO:K Neighbors Classifier Imported successfully
2023-04-27 16:51:03,745:INFO:Starting cross validation
2023-04-27 16:51:03,746:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:03,811:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,811:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,812:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,812:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,813:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,813:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,813:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,814:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,816:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,827:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,828:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,829:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,829:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,830:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,831:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,832:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,834:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,834:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,835:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,835:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,836:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,838:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,839:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,840:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,840:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,841:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,842:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,858:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,859:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,860:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:03,904:INFO:Calculating mean and std
2023-04-27 16:51:03,904:INFO:Creating metrics dataframe
2023-04-27 16:51:03,906:INFO:Finalizing model
2023-04-27 16:51:03,927:INFO:Uploading results into container
2023-04-27 16:51:03,928:INFO:Uploading model into container now
2023-04-27 16:51:03,928:INFO:_master_model_container: 20
2023-04-27 16:51:03,928:INFO:_display_container: 6
2023-04-27 16:51:03,928:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=17, p=2,
                     weights='uniform')
2023-04-27 16:51:03,928:INFO:create_model() successfully completed......................................
2023-04-27 16:51:03,992:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:03,992:INFO:choose_better activated
2023-04-27 16:51:03,992:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:03,993:INFO:Initializing create_model()
2023-04-27 16:51:03,993:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:03,993:INFO:Checking exceptions
2023-04-27 16:51:03,993:INFO:Importing libraries
2023-04-27 16:51:03,993:INFO:Copying training dataset
2023-04-27 16:51:03,995:INFO:Defining folds
2023-04-27 16:51:03,995:INFO:Declaring metric variables
2023-04-27 16:51:03,995:INFO:Importing untrained model
2023-04-27 16:51:03,995:INFO:Declaring custom model
2023-04-27 16:51:03,995:INFO:K Neighbors Classifier Imported successfully
2023-04-27 16:51:03,995:INFO:Starting cross validation
2023-04-27 16:51:03,996:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:04,064:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,064:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,065:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,066:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,066:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,067:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,067:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,069:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,071:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,072:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,073:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,073:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,074:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,074:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,074:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,075:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,076:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,077:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,078:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,079:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,084:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,086:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,087:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,088:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,089:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,091:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,094:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,094:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,095:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,156:INFO:Calculating mean and std
2023-04-27 16:51:04,156:INFO:Creating metrics dataframe
2023-04-27 16:51:04,158:INFO:Finalizing model
2023-04-27 16:51:04,182:INFO:Uploading results into container
2023-04-27 16:51:04,183:INFO:Uploading model into container now
2023-04-27 16:51:04,183:INFO:_master_model_container: 21
2023-04-27 16:51:04,183:INFO:_display_container: 7
2023-04-27 16:51:04,183:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-27 16:51:04,183:INFO:create_model() successfully completed......................................
2023-04-27 16:51:04,260:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:04,260:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') result for Accuracy is 0.9011
2023-04-27 16:51:04,260:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=17, p=2,
                     weights='uniform') result for Accuracy is 0.9082
2023-04-27 16:51:04,261:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=17, p=2,
                     weights='uniform') is best model
2023-04-27 16:51:04,261:INFO:choose_better completed
2023-04-27 16:51:04,266:INFO:_master_model_container: 21
2023-04-27 16:51:04,266:INFO:_display_container: 6
2023-04-27 16:51:04,266:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=17, p=2,
                     weights='uniform')
2023-04-27 16:51:04,266:INFO:tune_model() successfully completed......................................
2023-04-27 16:51:04,350:INFO:Initializing evaluate_model()
2023-04-27 16:51:04,350:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=17, p=2,
                     weights='uniform'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-04-27 16:51:04,353:INFO:Initializing create_model()
2023-04-27 16:51:04,353:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:04,353:INFO:Checking exceptions
2023-04-27 16:51:04,354:INFO:Importing libraries
2023-04-27 16:51:04,354:INFO:Copying training dataset
2023-04-27 16:51:04,355:INFO:Defining folds
2023-04-27 16:51:04,355:INFO:Declaring metric variables
2023-04-27 16:51:04,355:INFO:Importing untrained model
2023-04-27 16:51:04,356:INFO:Logistic Regression Imported successfully
2023-04-27 16:51:04,356:INFO:Starting cross validation
2023-04-27 16:51:04,356:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:04,410:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,410:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,411:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,414:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,414:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,415:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,422:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,423:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,423:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,426:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,427:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,428:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,430:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,430:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,431:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,434:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,435:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,436:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,437:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,437:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,437:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,438:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,438:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,438:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,444:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,444:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,445:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,449:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,450:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,451:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:04,495:INFO:Calculating mean and std
2023-04-27 16:51:04,496:INFO:Creating metrics dataframe
2023-04-27 16:51:04,497:INFO:Finalizing model
2023-04-27 16:51:04,545:INFO:Uploading results into container
2023-04-27 16:51:04,545:INFO:Uploading model into container now
2023-04-27 16:51:04,550:INFO:_master_model_container: 22
2023-04-27 16:51:04,550:INFO:_display_container: 7
2023-04-27 16:51:04,550:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-27 16:51:04,550:INFO:create_model() successfully completed......................................
2023-04-27 16:51:04,612:INFO:Initializing tune_model()
2023-04-27 16:51:04,612:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>)
2023-04-27 16:51:04,612:INFO:Checking exceptions
2023-04-27 16:51:04,614:INFO:Copying training dataset
2023-04-27 16:51:04,615:INFO:Checking base model
2023-04-27 16:51:04,615:INFO:Base model : Logistic Regression
2023-04-27 16:51:04,616:INFO:Declaring metric variables
2023-04-27 16:51:04,616:INFO:Defining Hyperparameters
2023-04-27 16:51:04,678:INFO:Tuning with n_jobs=-1
2023-04-27 16:51:04,678:INFO:Initializing RandomizedSearchCV
2023-04-27 16:51:05,901:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 9.984}
2023-04-27 16:51:05,901:INFO:Hyperparameter search completed
2023-04-27 16:51:05,901:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:05,901:INFO:Initializing create_model()
2023-04-27 16:51:05,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9A73D6C0>, model_only=True, return_train_score=False, kwargs={'class_weight': 'balanced', 'C': 9.984})
2023-04-27 16:51:05,901:INFO:Checking exceptions
2023-04-27 16:51:05,901:INFO:Importing libraries
2023-04-27 16:51:05,901:INFO:Copying training dataset
2023-04-27 16:51:05,903:INFO:Defining folds
2023-04-27 16:51:05,903:INFO:Declaring metric variables
2023-04-27 16:51:05,903:INFO:Importing untrained model
2023-04-27 16:51:05,903:INFO:Declaring custom model
2023-04-27 16:51:05,904:INFO:Logistic Regression Imported successfully
2023-04-27 16:51:05,904:INFO:Starting cross validation
2023-04-27 16:51:05,904:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:05,983:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:05,984:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:05,984:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:05,985:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:05,985:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:05,986:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:05,990:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:05,991:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:05,991:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:05,991:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:05,992:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:05,992:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:05,996:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:05,997:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:05,998:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,000:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,001:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,001:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,002:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,004:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,012:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,013:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,014:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,020:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,021:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,022:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,026:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,026:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,027:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,071:INFO:Calculating mean and std
2023-04-27 16:51:06,071:INFO:Creating metrics dataframe
2023-04-27 16:51:06,073:INFO:Finalizing model
2023-04-27 16:51:06,133:INFO:Uploading results into container
2023-04-27 16:51:06,133:INFO:Uploading model into container now
2023-04-27 16:51:06,133:INFO:_master_model_container: 23
2023-04-27 16:51:06,133:INFO:_display_container: 8
2023-04-27 16:51:06,134:INFO:LogisticRegression(C=9.984, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-27 16:51:06,134:INFO:create_model() successfully completed......................................
2023-04-27 16:51:06,195:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:06,195:INFO:choose_better activated
2023-04-27 16:51:06,195:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:06,195:INFO:Initializing create_model()
2023-04-27 16:51:06,195:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:06,195:INFO:Checking exceptions
2023-04-27 16:51:06,196:INFO:Importing libraries
2023-04-27 16:51:06,196:INFO:Copying training dataset
2023-04-27 16:51:06,197:INFO:Defining folds
2023-04-27 16:51:06,198:INFO:Declaring metric variables
2023-04-27 16:51:06,198:INFO:Importing untrained model
2023-04-27 16:51:06,198:INFO:Declaring custom model
2023-04-27 16:51:06,198:INFO:Logistic Regression Imported successfully
2023-04-27 16:51:06,198:INFO:Starting cross validation
2023-04-27 16:51:06,198:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:06,251:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,252:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,253:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,253:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,254:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,255:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,262:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,263:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,264:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,264:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,266:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,266:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,267:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,268:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,268:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,272:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,272:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,273:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,277:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,278:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,278:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,281:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,281:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,282:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,282:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,283:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,283:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,288:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,290:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,290:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,339:INFO:Calculating mean and std
2023-04-27 16:51:06,339:INFO:Creating metrics dataframe
2023-04-27 16:51:06,340:INFO:Finalizing model
2023-04-27 16:51:06,389:INFO:Uploading results into container
2023-04-27 16:51:06,390:INFO:Uploading model into container now
2023-04-27 16:51:06,390:INFO:_master_model_container: 24
2023-04-27 16:51:06,390:INFO:_display_container: 9
2023-04-27 16:51:06,390:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-27 16:51:06,391:INFO:create_model() successfully completed......................................
2023-04-27 16:51:06,451:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:06,452:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.9154
2023-04-27 16:51:06,452:INFO:LogisticRegression(C=9.984, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.9462
2023-04-27 16:51:06,452:INFO:LogisticRegression(C=9.984, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-04-27 16:51:06,453:INFO:choose_better completed
2023-04-27 16:51:06,459:INFO:_master_model_container: 24
2023-04-27 16:51:06,459:INFO:_display_container: 8
2023-04-27 16:51:06,459:INFO:LogisticRegression(C=9.984, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-27 16:51:06,459:INFO:tune_model() successfully completed......................................
2023-04-27 16:51:06,534:INFO:Initializing evaluate_model()
2023-04-27 16:51:06,534:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=LogisticRegression(C=9.984, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-04-27 16:51:06,537:INFO:Initializing create_model()
2023-04-27 16:51:06,537:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:06,537:INFO:Checking exceptions
2023-04-27 16:51:06,538:INFO:Importing libraries
2023-04-27 16:51:06,538:INFO:Copying training dataset
2023-04-27 16:51:06,539:INFO:Defining folds
2023-04-27 16:51:06,539:INFO:Declaring metric variables
2023-04-27 16:51:06,539:INFO:Importing untrained model
2023-04-27 16:51:06,539:INFO:Random Forest Classifier Imported successfully
2023-04-27 16:51:06,539:INFO:Starting cross validation
2023-04-27 16:51:06,540:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:06,686:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,687:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,688:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,695:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,696:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,697:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,697:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,697:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,698:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,698:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,698:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,699:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,699:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,700:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,700:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,701:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,703:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,704:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,712:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,714:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,715:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,727:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,728:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,728:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,730:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,731:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,732:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,747:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,748:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,749:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:06,776:INFO:Calculating mean and std
2023-04-27 16:51:06,776:INFO:Creating metrics dataframe
2023-04-27 16:51:06,777:INFO:Finalizing model
2023-04-27 16:51:06,883:INFO:Uploading results into container
2023-04-27 16:51:06,884:INFO:Uploading model into container now
2023-04-27 16:51:06,888:INFO:_master_model_container: 25
2023-04-27 16:51:06,888:INFO:_display_container: 9
2023-04-27 16:51:06,888:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-27 16:51:06,888:INFO:create_model() successfully completed......................................
2023-04-27 16:51:06,949:INFO:Initializing tune_model()
2023-04-27 16:51:06,950:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>)
2023-04-27 16:51:06,951:INFO:Checking exceptions
2023-04-27 16:51:06,952:INFO:Copying training dataset
2023-04-27 16:51:06,953:INFO:Checking base model
2023-04-27 16:51:06,953:INFO:Base model : Random Forest Classifier
2023-04-27 16:51:06,953:INFO:Declaring metric variables
2023-04-27 16:51:06,953:INFO:Defining Hyperparameters
2023-04-27 16:51:07,014:INFO:Tuning with n_jobs=-1
2023-04-27 16:51:07,014:INFO:Initializing RandomizedSearchCV
2023-04-27 16:51:11,509:INFO:best_params: {'actual_estimator__n_estimators': 260, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 4, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': False}
2023-04-27 16:51:11,509:INFO:Hyperparameter search completed
2023-04-27 16:51:11,509:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:11,509:INFO:Initializing create_model()
2023-04-27 16:51:11,509:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9A563820>, model_only=True, return_train_score=False, kwargs={'n_estimators': 260, 'min_samples_split': 5, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.0005, 'max_features': 'sqrt', 'max_depth': 4, 'criterion': 'gini', 'class_weight': 'balanced_subsample', 'bootstrap': False})
2023-04-27 16:51:11,509:INFO:Checking exceptions
2023-04-27 16:51:11,509:INFO:Importing libraries
2023-04-27 16:51:11,510:INFO:Copying training dataset
2023-04-27 16:51:11,511:INFO:Defining folds
2023-04-27 16:51:11,511:INFO:Declaring metric variables
2023-04-27 16:51:11,511:INFO:Importing untrained model
2023-04-27 16:51:11,511:INFO:Declaring custom model
2023-04-27 16:51:11,512:INFO:Random Forest Classifier Imported successfully
2023-04-27 16:51:11,512:INFO:Starting cross validation
2023-04-27 16:51:11,512:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:11,771:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,772:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,773:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,807:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,807:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,808:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,812:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,813:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,813:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,824:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,825:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,826:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,827:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,829:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,830:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,841:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,842:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,842:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,843:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,843:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,843:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,843:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,843:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,861:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,862:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,864:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,867:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,867:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:11,868:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,083:INFO:Calculating mean and std
2023-04-27 16:51:12,083:INFO:Creating metrics dataframe
2023-04-27 16:51:12,084:INFO:Finalizing model
2023-04-27 16:51:12,427:INFO:Uploading results into container
2023-04-27 16:51:12,428:INFO:Uploading model into container now
2023-04-27 16:51:12,428:INFO:_master_model_container: 26
2023-04-27 16:51:12,428:INFO:_display_container: 10
2023-04-27 16:51:12,428:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=4, max_features='sqrt', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0005,
                       min_samples_leaf=3, min_samples_split=5,
                       min_weight_fraction_leaf=0.0, n_estimators=260,
                       n_jobs=-1, oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2023-04-27 16:51:12,428:INFO:create_model() successfully completed......................................
2023-04-27 16:51:12,490:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:12,490:INFO:choose_better activated
2023-04-27 16:51:12,490:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:12,490:INFO:Initializing create_model()
2023-04-27 16:51:12,490:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:12,490:INFO:Checking exceptions
2023-04-27 16:51:12,491:INFO:Importing libraries
2023-04-27 16:51:12,491:INFO:Copying training dataset
2023-04-27 16:51:12,492:INFO:Defining folds
2023-04-27 16:51:12,492:INFO:Declaring metric variables
2023-04-27 16:51:12,493:INFO:Importing untrained model
2023-04-27 16:51:12,493:INFO:Declaring custom model
2023-04-27 16:51:12,493:INFO:Random Forest Classifier Imported successfully
2023-04-27 16:51:12,493:INFO:Starting cross validation
2023-04-27 16:51:12,493:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:12,641:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,643:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,643:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,644:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,644:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,645:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,646:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,646:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,647:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,650:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,651:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,654:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,654:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,654:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,655:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,662:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,664:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,664:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,665:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,666:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,667:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,677:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,678:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,678:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,679:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,680:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,680:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,683:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,684:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,685:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:12,954:INFO:Calculating mean and std
2023-04-27 16:51:12,954:INFO:Creating metrics dataframe
2023-04-27 16:51:12,956:INFO:Finalizing model
2023-04-27 16:51:13,089:INFO:Uploading results into container
2023-04-27 16:51:13,090:INFO:Uploading model into container now
2023-04-27 16:51:13,090:INFO:_master_model_container: 27
2023-04-27 16:51:13,090:INFO:_display_container: 11
2023-04-27 16:51:13,091:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-27 16:51:13,091:INFO:create_model() successfully completed......................................
2023-04-27 16:51:13,150:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:13,151:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) result for Accuracy is 0.9467
2023-04-27 16:51:13,151:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=4, max_features='sqrt', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0005,
                       min_samples_leaf=3, min_samples_split=5,
                       min_weight_fraction_leaf=0.0, n_estimators=260,
                       n_jobs=-1, oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.9467
2023-04-27 16:51:13,151:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) is best model
2023-04-27 16:51:13,151:INFO:choose_better completed
2023-04-27 16:51:13,151:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-04-27 16:51:13,155:INFO:_master_model_container: 27
2023-04-27 16:51:13,155:INFO:_display_container: 10
2023-04-27 16:51:13,156:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-27 16:51:13,156:INFO:tune_model() successfully completed......................................
2023-04-27 16:51:13,245:INFO:Initializing evaluate_model()
2023-04-27 16:51:13,245:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-04-27 16:51:13,248:INFO:Initializing tune_model()
2023-04-27 16:51:13,248:INFO:tune_model(estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>)
2023-04-27 16:51:13,248:INFO:Checking exceptions
2023-04-27 16:51:13,249:INFO:Copying training dataset
2023-04-27 16:51:13,250:INFO:Checking base model
2023-04-27 16:51:13,250:INFO:Base model : Ridge Classifier
2023-04-27 16:51:13,250:INFO:Declaring metric variables
2023-04-27 16:51:13,250:INFO:Defining Hyperparameters
2023-04-27 16:51:13,312:INFO:Tuning with n_jobs=-1
2023-04-27 16:51:13,312:INFO:Initializing RandomizedSearchCV
2023-04-27 16:51:17,007:INFO:best_params: {'actual_estimator__fit_intercept': True, 'actual_estimator__alpha': 0.54}
2023-04-27 16:51:17,007:INFO:Hyperparameter search completed
2023-04-27 16:51:17,007:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:17,007:INFO:Initializing create_model()
2023-04-27 16:51:17,008:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA91388E80>, model_only=True, return_train_score=False, kwargs={'fit_intercept': True, 'alpha': 0.54})
2023-04-27 16:51:17,008:INFO:Checking exceptions
2023-04-27 16:51:17,008:INFO:Importing libraries
2023-04-27 16:51:17,008:INFO:Copying training dataset
2023-04-27 16:51:17,009:INFO:Defining folds
2023-04-27 16:51:17,009:INFO:Declaring metric variables
2023-04-27 16:51:17,010:INFO:Importing untrained model
2023-04-27 16:51:17,010:INFO:Declaring custom model
2023-04-27 16:51:17,010:INFO:Ridge Classifier Imported successfully
2023-04-27 16:51:17,010:INFO:Starting cross validation
2023-04-27 16:51:17,010:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:17,043:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:17,043:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,044:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,045:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,051:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:17,052:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,052:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:17,052:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:17,053:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,053:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,053:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,054:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,054:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,055:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,055:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,056:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,060:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:17,060:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:17,060:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,061:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,061:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:17,062:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,062:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,062:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,062:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,062:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,063:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,063:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,064:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:17,065:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,066:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,067:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:17,067:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,067:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,068:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,070:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,076:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:17,077:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,078:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,079:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,354:INFO:Calculating mean and std
2023-04-27 16:51:17,354:INFO:Creating metrics dataframe
2023-04-27 16:51:17,355:INFO:Finalizing model
2023-04-27 16:51:17,408:INFO:Uploading results into container
2023-04-27 16:51:17,408:INFO:Uploading model into container now
2023-04-27 16:51:17,409:INFO:_master_model_container: 28
2023-04-27 16:51:17,409:INFO:_display_container: 11
2023-04-27 16:51:17,409:INFO:RidgeClassifier(alpha=0.54, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-04-27 16:51:17,409:INFO:create_model() successfully completed......................................
2023-04-27 16:51:17,474:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:17,474:INFO:choose_better activated
2023-04-27 16:51:17,474:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:17,474:INFO:Initializing create_model()
2023-04-27 16:51:17,474:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:17,474:INFO:Checking exceptions
2023-04-27 16:51:17,475:INFO:Importing libraries
2023-04-27 16:51:17,475:INFO:Copying training dataset
2023-04-27 16:51:17,476:INFO:Defining folds
2023-04-27 16:51:17,476:INFO:Declaring metric variables
2023-04-27 16:51:17,476:INFO:Importing untrained model
2023-04-27 16:51:17,476:INFO:Declaring custom model
2023-04-27 16:51:17,476:INFO:Ridge Classifier Imported successfully
2023-04-27 16:51:17,477:INFO:Starting cross validation
2023-04-27 16:51:17,477:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:17,509:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:17,509:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,511:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,512:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,513:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:17,513:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,515:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,515:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:17,516:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,516:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,517:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,518:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,522:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:17,523:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,524:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,524:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:17,525:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,525:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,525:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,526:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:17,526:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,526:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,527:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,527:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:17,528:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,528:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,529:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,530:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,530:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:17,530:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,531:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,532:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,533:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:17,533:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,535:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,536:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,538:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:17,539:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,540:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,541:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:17,826:INFO:Calculating mean and std
2023-04-27 16:51:17,826:INFO:Creating metrics dataframe
2023-04-27 16:51:17,827:INFO:Finalizing model
2023-04-27 16:51:17,880:INFO:Uploading results into container
2023-04-27 16:51:17,880:INFO:Uploading model into container now
2023-04-27 16:51:17,880:INFO:_master_model_container: 29
2023-04-27 16:51:17,880:INFO:_display_container: 12
2023-04-27 16:51:17,881:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-04-27 16:51:17,881:INFO:create_model() successfully completed......................................
2023-04-27 16:51:17,945:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:17,946:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001) result for Accuracy is 0.9769
2023-04-27 16:51:17,946:INFO:RidgeClassifier(alpha=0.54, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001) result for Accuracy is 0.9692
2023-04-27 16:51:17,946:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001) is best model
2023-04-27 16:51:17,946:INFO:choose_better completed
2023-04-27 16:51:17,946:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-04-27 16:51:17,950:INFO:_master_model_container: 29
2023-04-27 16:51:17,950:INFO:_display_container: 11
2023-04-27 16:51:17,951:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-04-27 16:51:17,951:INFO:tune_model() successfully completed......................................
2023-04-27 16:51:18,047:INFO:Initializing evaluate_model()
2023-04-27 16:51:18,048:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA8FE51F30>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-04-27 16:51:18,080:INFO:PyCaret ClassificationExperiment
2023-04-27 16:51:18,081:INFO:Logging name: clf-default-name
2023-04-27 16:51:18,081:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-27 16:51:18,081:INFO:version 3.0.0
2023-04-27 16:51:18,081:INFO:Initializing setup()
2023-04-27 16:51:18,081:INFO:self.USI: 7b2c
2023-04-27 16:51:18,081:INFO:self._variable_keys: {'y_train', 'y', 'X', 'n_jobs_param', 'is_multiclass', '_ml_usecase', 'exp_name_log', 'X_train', 'exp_id', 'seed', 'data', 'fix_imbalance', 'logging_param', 'fold_groups_param', 'fold_generator', 'y_test', 'pipeline', 'gpu_n_jobs_param', 'X_test', 'USI', 'html_param', 'idx', 'log_plots_param', 'target_param', 'fold_shuffle_param', '_available_plots', 'memory', 'gpu_param'}
2023-04-27 16:51:18,081:INFO:Checking environment
2023-04-27 16:51:18,081:INFO:python_version: 3.10.0
2023-04-27 16:51:18,081:INFO:python_build: ('tags/v3.10.0:b494f59', 'Oct  4 2021 19:00:18')
2023-04-27 16:51:18,081:INFO:machine: AMD64
2023-04-27 16:51:18,081:INFO:platform: Windows-10-10.0.22000-SP0
2023-04-27 16:51:18,083:INFO:Memory: svmem(total=34070724608, available=19183910912, percent=43.7, used=14886813696, free=19183910912)
2023-04-27 16:51:18,083:INFO:Physical Core: 12
2023-04-27 16:51:18,083:INFO:Logical Core: 20
2023-04-27 16:51:18,083:INFO:Checking libraries
2023-04-27 16:51:18,083:INFO:System:
2023-04-27 16:51:18,083:INFO:    python: 3.10.0 (tags/v3.10.0:b494f59, Oct  4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]
2023-04-27 16:51:18,083:INFO:executable: C:\Users\123456\Documents\GitHub\INSE6220\venv\Scripts\python.exe
2023-04-27 16:51:18,083:INFO:   machine: Windows-10-10.0.22000-SP0
2023-04-27 16:51:18,083:INFO:PyCaret required dependencies:
2023-04-27 16:51:18,084:INFO:                 pip: 23.1.1
2023-04-27 16:51:18,084:INFO:          setuptools: 67.7.1
2023-04-27 16:51:18,084:INFO:             pycaret: 3.0.0
2023-04-27 16:51:18,084:INFO:             IPython: 7.34.0
2023-04-27 16:51:18,084:INFO:          ipywidgets: 7.7.1
2023-04-27 16:51:18,084:INFO:                tqdm: 4.65.0
2023-04-27 16:51:18,084:INFO:               numpy: 1.23.5
2023-04-27 16:51:18,084:INFO:              pandas: 1.5.3
2023-04-27 16:51:18,084:INFO:              jinja2: 3.1.2
2023-04-27 16:51:18,084:INFO:               scipy: 1.10.1
2023-04-27 16:51:18,084:INFO:              joblib: 1.2.0
2023-04-27 16:51:18,084:INFO:             sklearn: 1.2.2
2023-04-27 16:51:18,084:INFO:                pyod: 1.0.9
2023-04-27 16:51:18,084:INFO:            imblearn: 0.10.1
2023-04-27 16:51:18,084:INFO:   category_encoders: 2.6.0
2023-04-27 16:51:18,084:INFO:            lightgbm: 3.3.5
2023-04-27 16:51:18,084:INFO:               numba: 0.56.4
2023-04-27 16:51:18,084:INFO:            requests: 2.27.1
2023-04-27 16:51:18,084:INFO:          matplotlib: 3.7.1
2023-04-27 16:51:18,084:INFO:          scikitplot: 0.3.7
2023-04-27 16:51:18,084:INFO:         yellowbrick: 1.5
2023-04-27 16:51:18,084:INFO:              plotly: 5.13.1
2023-04-27 16:51:18,084:INFO:             kaleido: 0.2.1
2023-04-27 16:51:18,084:INFO:         statsmodels: 0.13.5
2023-04-27 16:51:18,084:INFO:              sktime: 0.17.1
2023-04-27 16:51:18,084:INFO:               tbats: 1.1.3
2023-04-27 16:51:18,084:INFO:            pmdarima: 2.0.3
2023-04-27 16:51:18,084:INFO:              psutil: 5.9.5
2023-04-27 16:51:18,084:INFO:PyCaret optional dependencies:
2023-04-27 16:51:18,084:INFO:                shap: 0.41.0
2023-04-27 16:51:18,084:INFO:           interpret: Not installed
2023-04-27 16:51:18,084:INFO:                umap: Not installed
2023-04-27 16:51:18,084:INFO:    pandas_profiling: Not installed
2023-04-27 16:51:18,084:INFO:  explainerdashboard: Not installed
2023-04-27 16:51:18,084:INFO:             autoviz: Not installed
2023-04-27 16:51:18,084:INFO:           fairlearn: Not installed
2023-04-27 16:51:18,084:INFO:             xgboost: 1.7.5
2023-04-27 16:51:18,084:INFO:            catboost: Not installed
2023-04-27 16:51:18,084:INFO:              kmodes: Not installed
2023-04-27 16:51:18,084:INFO:             mlxtend: 0.14.0
2023-04-27 16:51:18,084:INFO:       statsforecast: Not installed
2023-04-27 16:51:18,084:INFO:        tune_sklearn: Not installed
2023-04-27 16:51:18,084:INFO:                 ray: Not installed
2023-04-27 16:51:18,084:INFO:            hyperopt: 0.2.7
2023-04-27 16:51:18,084:INFO:              optuna: Not installed
2023-04-27 16:51:18,084:INFO:               skopt: Not installed
2023-04-27 16:51:18,084:INFO:              mlflow: Not installed
2023-04-27 16:51:18,084:INFO:              gradio: Not installed
2023-04-27 16:51:18,084:INFO:             fastapi: Not installed
2023-04-27 16:51:18,084:INFO:             uvicorn: Not installed
2023-04-27 16:51:18,084:INFO:              m2cgen: Not installed
2023-04-27 16:51:18,084:INFO:           evidently: Not installed
2023-04-27 16:51:18,084:INFO:               fugue: Not installed
2023-04-27 16:51:18,084:INFO:           streamlit: Not installed
2023-04-27 16:51:18,085:INFO:             prophet: 1.1.2
2023-04-27 16:51:18,085:INFO:None
2023-04-27 16:51:18,085:INFO:Set up data.
2023-04-27 16:51:18,087:INFO:Set up train/test split.
2023-04-27 16:51:18,089:INFO:Set up index.
2023-04-27 16:51:18,089:INFO:Set up folding strategy.
2023-04-27 16:51:18,089:INFO:Assigning column types.
2023-04-27 16:51:18,090:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-27 16:51:18,112:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-27 16:51:18,113:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 16:51:18,126:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-27 16:51:18,128:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 16:51:18,149:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-27 16:51:18,150:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 16:51:18,163:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-27 16:51:18,164:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 16:51:18,164:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-27 16:51:18,187:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 16:51:18,201:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-27 16:51:18,203:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 16:51:18,225:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-27 16:51:18,239:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-27 16:51:18,240:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 16:51:18,241:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-27 16:51:18,277:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-27 16:51:18,278:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 16:51:18,313:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-27 16:51:18,314:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 16:51:18,315:INFO:Preparing preprocessing pipeline...
2023-04-27 16:51:18,316:INFO:Set up label encoding.
2023-04-27 16:51:18,316:INFO:Set up simple imputation.
2023-04-27 16:51:18,316:INFO:Set up feature normalization.
2023-04-27 16:51:18,316:INFO:Set up PCA.
2023-04-27 16:51:18,337:INFO:Finished creating preprocessing pipeline.
2023-04-27 16:51:18,341:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\123456\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['AR', 'PR', 'CP', 'LK', 'WD', 'AS',
                                             'LG'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_va...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('pca',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=PCA(copy=True,
                                                    iterated_power='auto',
                                                    n_components=3,
                                                    n_oversamples=10,
                                                    power_iteration_normalizer='auto',
                                                    random_state=None,
                                                    svd_solver='auto', tol=0.0,
                                                    whiten=False)))],
         verbose=False)
2023-04-27 16:51:18,341:INFO:Creating final display dataframe.
2023-04-27 16:51:18,397:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             class
2                   Target type        Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2
4           Original data shape          (210, 8)
5        Transformed data shape          (210, 4)
6   Transformed train set shape          (147, 4)
7    Transformed test set shape           (63, 4)
8              Numeric features                 7
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13                    Normalize              True
14             Normalize method            zscore
15                          PCA              True
16                   PCA method            linear
17               PCA components                 3
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              7b2c
2023-04-27 16:51:18,434:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-27 16:51:18,435:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 16:51:18,470:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-27 16:51:18,471:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-27 16:51:18,472:INFO:setup() successfully completed in 0.42s...............
2023-04-27 16:51:18,472:INFO:Initializing compare_models()
2023-04-27 16:51:18,472:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-04-27 16:51:18,472:INFO:Checking exceptions
2023-04-27 16:51:18,473:INFO:Preparing display monitor
2023-04-27 16:51:18,475:INFO:Initializing Logistic Regression
2023-04-27 16:51:18,475:INFO:Total runtime is 0.0 minutes
2023-04-27 16:51:18,475:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:18,475:INFO:Initializing create_model()
2023-04-27 16:51:18,475:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9142AEC0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:18,475:INFO:Checking exceptions
2023-04-27 16:51:18,475:INFO:Importing libraries
2023-04-27 16:51:18,475:INFO:Copying training dataset
2023-04-27 16:51:18,476:INFO:Defining folds
2023-04-27 16:51:18,476:INFO:Declaring metric variables
2023-04-27 16:51:18,476:INFO:Importing untrained model
2023-04-27 16:51:18,477:INFO:Logistic Regression Imported successfully
2023-04-27 16:51:18,477:INFO:Starting cross validation
2023-04-27 16:51:18,477:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:18,539:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,539:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,540:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,551:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,551:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,552:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,552:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,553:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,554:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,556:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,558:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,559:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,559:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,560:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,560:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,566:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,567:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,567:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,568:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,568:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,569:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,569:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,569:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,570:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,570:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,571:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,572:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,576:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,577:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,577:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:18,848:INFO:Calculating mean and std
2023-04-27 16:51:18,849:INFO:Creating metrics dataframe
2023-04-27 16:51:18,892:INFO:Uploading results into container
2023-04-27 16:51:18,893:INFO:Uploading model into container now
2023-04-27 16:51:18,893:INFO:_master_model_container: 1
2023-04-27 16:51:18,893:INFO:_display_container: 2
2023-04-27 16:51:18,893:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-27 16:51:18,893:INFO:create_model() successfully completed......................................
2023-04-27 16:51:18,963:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:18,963:INFO:Creating metrics dataframe
2023-04-27 16:51:18,966:INFO:Initializing K Neighbors Classifier
2023-04-27 16:51:18,966:INFO:Total runtime is 0.008179036776224773 minutes
2023-04-27 16:51:18,966:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:18,966:INFO:Initializing create_model()
2023-04-27 16:51:18,966:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9142AEC0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:18,966:INFO:Checking exceptions
2023-04-27 16:51:18,966:INFO:Importing libraries
2023-04-27 16:51:18,966:INFO:Copying training dataset
2023-04-27 16:51:18,968:INFO:Defining folds
2023-04-27 16:51:18,968:INFO:Declaring metric variables
2023-04-27 16:51:18,968:INFO:Importing untrained model
2023-04-27 16:51:18,968:INFO:K Neighbors Classifier Imported successfully
2023-04-27 16:51:18,968:INFO:Starting cross validation
2023-04-27 16:51:18,969:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:19,068:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,068:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,069:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,069:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,070:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,070:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,071:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,071:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,072:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,072:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,073:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,078:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,080:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,082:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,084:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,085:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,085:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,086:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,086:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,087:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,092:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,093:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,093:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,094:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,094:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,095:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,103:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,104:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,104:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,387:INFO:Calculating mean and std
2023-04-27 16:51:19,388:INFO:Creating metrics dataframe
2023-04-27 16:51:19,430:INFO:Uploading results into container
2023-04-27 16:51:19,431:INFO:Uploading model into container now
2023-04-27 16:51:19,431:INFO:_master_model_container: 2
2023-04-27 16:51:19,431:INFO:_display_container: 2
2023-04-27 16:51:19,431:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-27 16:51:19,431:INFO:create_model() successfully completed......................................
2023-04-27 16:51:19,498:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:19,498:INFO:Creating metrics dataframe
2023-04-27 16:51:19,500:INFO:Initializing Naive Bayes
2023-04-27 16:51:19,500:INFO:Total runtime is 0.017074445883433025 minutes
2023-04-27 16:51:19,501:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:19,501:INFO:Initializing create_model()
2023-04-27 16:51:19,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9142AEC0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:19,501:INFO:Checking exceptions
2023-04-27 16:51:19,501:INFO:Importing libraries
2023-04-27 16:51:19,501:INFO:Copying training dataset
2023-04-27 16:51:19,503:INFO:Defining folds
2023-04-27 16:51:19,503:INFO:Declaring metric variables
2023-04-27 16:51:19,503:INFO:Importing untrained model
2023-04-27 16:51:19,503:INFO:Naive Bayes Imported successfully
2023-04-27 16:51:19,503:INFO:Starting cross validation
2023-04-27 16:51:19,504:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:19,566:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,568:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,569:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,572:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,573:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,573:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,574:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,575:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,575:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,575:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,576:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,576:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,577:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,577:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,578:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,582:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,583:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,583:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,584:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,585:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,585:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,586:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,586:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,587:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,588:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,589:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,590:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,607:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,608:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,609:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:19,881:INFO:Calculating mean and std
2023-04-27 16:51:19,882:INFO:Creating metrics dataframe
2023-04-27 16:51:19,925:INFO:Uploading results into container
2023-04-27 16:51:19,926:INFO:Uploading model into container now
2023-04-27 16:51:19,926:INFO:_master_model_container: 3
2023-04-27 16:51:19,926:INFO:_display_container: 2
2023-04-27 16:51:19,926:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-27 16:51:19,926:INFO:create_model() successfully completed......................................
2023-04-27 16:51:19,998:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:19,998:INFO:Creating metrics dataframe
2023-04-27 16:51:20,001:INFO:Initializing Decision Tree Classifier
2023-04-27 16:51:20,001:INFO:Total runtime is 0.02541850010553996 minutes
2023-04-27 16:51:20,001:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:20,001:INFO:Initializing create_model()
2023-04-27 16:51:20,002:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9142AEC0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:20,002:INFO:Checking exceptions
2023-04-27 16:51:20,002:INFO:Importing libraries
2023-04-27 16:51:20,002:INFO:Copying training dataset
2023-04-27 16:51:20,004:INFO:Defining folds
2023-04-27 16:51:20,005:INFO:Declaring metric variables
2023-04-27 16:51:20,005:INFO:Importing untrained model
2023-04-27 16:51:20,005:INFO:Decision Tree Classifier Imported successfully
2023-04-27 16:51:20,005:INFO:Starting cross validation
2023-04-27 16:51:20,006:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:20,087:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,088:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,089:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,089:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,090:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,090:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,090:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,090:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,092:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,099:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,100:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,100:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,100:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,101:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,101:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,102:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,102:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,103:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,103:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,104:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,104:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,105:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,105:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,106:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,106:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,107:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,108:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,122:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,124:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,125:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,435:INFO:Calculating mean and std
2023-04-27 16:51:20,435:INFO:Creating metrics dataframe
2023-04-27 16:51:20,481:INFO:Uploading results into container
2023-04-27 16:51:20,481:INFO:Uploading model into container now
2023-04-27 16:51:20,482:INFO:_master_model_container: 4
2023-04-27 16:51:20,482:INFO:_display_container: 2
2023-04-27 16:51:20,482:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-27 16:51:20,482:INFO:create_model() successfully completed......................................
2023-04-27 16:51:20,548:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:20,548:INFO:Creating metrics dataframe
2023-04-27 16:51:20,550:INFO:Initializing SVM - Linear Kernel
2023-04-27 16:51:20,550:INFO:Total runtime is 0.03456854820251465 minutes
2023-04-27 16:51:20,551:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:20,551:INFO:Initializing create_model()
2023-04-27 16:51:20,551:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9142AEC0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:20,551:INFO:Checking exceptions
2023-04-27 16:51:20,551:INFO:Importing libraries
2023-04-27 16:51:20,551:INFO:Copying training dataset
2023-04-27 16:51:20,552:INFO:Defining folds
2023-04-27 16:51:20,552:INFO:Declaring metric variables
2023-04-27 16:51:20,553:INFO:Importing untrained model
2023-04-27 16:51:20,553:INFO:SVM - Linear Kernel Imported successfully
2023-04-27 16:51:20,553:INFO:Starting cross validation
2023-04-27 16:51:20,553:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:20,624:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 16:51:20,625:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,626:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,626:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 16:51:20,627:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,627:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,628:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,629:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,637:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 16:51:20,638:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,639:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 16:51:20,639:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,640:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,641:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,641:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,641:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 16:51:20,642:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,642:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,643:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,645:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,647:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 16:51:20,648:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,649:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,650:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 16:51:20,650:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,650:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,652:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,654:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,654:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 16:51:20,655:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,655:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 16:51:20,656:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,656:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-27 16:51:20,656:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,657:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,657:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,657:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,658:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,658:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,659:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:20,941:INFO:Calculating mean and std
2023-04-27 16:51:20,941:INFO:Creating metrics dataframe
2023-04-27 16:51:20,985:INFO:Uploading results into container
2023-04-27 16:51:20,985:INFO:Uploading model into container now
2023-04-27 16:51:20,985:INFO:_master_model_container: 5
2023-04-27 16:51:20,985:INFO:_display_container: 2
2023-04-27 16:51:20,986:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-04-27 16:51:20,986:INFO:create_model() successfully completed......................................
2023-04-27 16:51:21,050:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:21,050:INFO:Creating metrics dataframe
2023-04-27 16:51:21,052:INFO:Initializing Ridge Classifier
2023-04-27 16:51:21,053:INFO:Total runtime is 0.04295183420181274 minutes
2023-04-27 16:51:21,053:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:21,053:INFO:Initializing create_model()
2023-04-27 16:51:21,053:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9142AEC0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:21,053:INFO:Checking exceptions
2023-04-27 16:51:21,053:INFO:Importing libraries
2023-04-27 16:51:21,053:INFO:Copying training dataset
2023-04-27 16:51:21,055:INFO:Defining folds
2023-04-27 16:51:21,055:INFO:Declaring metric variables
2023-04-27 16:51:21,055:INFO:Importing untrained model
2023-04-27 16:51:21,055:INFO:Ridge Classifier Imported successfully
2023-04-27 16:51:21,055:INFO:Starting cross validation
2023-04-27 16:51:21,055:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:21,106:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:21,107:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,108:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:21,108:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,108:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,109:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,110:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,110:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,110:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:21,110:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,111:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,112:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,120:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:21,120:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,122:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,123:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,124:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:21,125:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:21,125:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:21,125:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,125:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,125:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,126:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,126:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,127:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,127:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,127:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

tom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:21,128:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,128:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,128:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,129:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,133:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:21,133:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,133:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-27 16:51:21,134:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,134:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,135:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,135:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,136:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,420:INFO:Calculating mean and std
2023-04-27 16:51:21,420:INFO:Creating metrics dataframe
2023-04-27 16:51:21,460:INFO:Uploading results into container
2023-04-27 16:51:21,461:INFO:Uploading model into container now
2023-04-27 16:51:21,461:INFO:_master_model_container: 6
2023-04-27 16:51:21,461:INFO:_display_container: 2
2023-04-27 16:51:21,461:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-04-27 16:51:21,461:INFO:create_model() successfully completed......................................
2023-04-27 16:51:21,523:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:21,523:INFO:Creating metrics dataframe
2023-04-27 16:51:21,525:INFO:Initializing Random Forest Classifier
2023-04-27 16:51:21,526:INFO:Total runtime is 0.05083522796630859 minutes
2023-04-27 16:51:21,526:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:21,526:INFO:Initializing create_model()
2023-04-27 16:51:21,526:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9142AEC0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:21,526:INFO:Checking exceptions
2023-04-27 16:51:21,526:INFO:Importing libraries
2023-04-27 16:51:21,526:INFO:Copying training dataset
2023-04-27 16:51:21,527:INFO:Defining folds
2023-04-27 16:51:21,528:INFO:Declaring metric variables
2023-04-27 16:51:21,528:INFO:Importing untrained model
2023-04-27 16:51:21,528:INFO:Random Forest Classifier Imported successfully
2023-04-27 16:51:21,528:INFO:Starting cross validation
2023-04-27 16:51:21,528:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:21,860:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,861:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,861:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,862:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,862:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,863:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,867:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,869:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,869:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,870:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,870:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,870:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,871:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,871:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,872:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,887:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,888:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,889:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,889:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,890:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,891:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,891:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,892:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,892:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,894:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,895:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,896:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,910:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,911:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:21,912:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,211:INFO:Calculating mean and std
2023-04-27 16:51:22,212:INFO:Creating metrics dataframe
2023-04-27 16:51:22,257:INFO:Uploading results into container
2023-04-27 16:51:22,258:INFO:Uploading model into container now
2023-04-27 16:51:22,258:INFO:_master_model_container: 7
2023-04-27 16:51:22,258:INFO:_display_container: 2
2023-04-27 16:51:22,258:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-27 16:51:22,258:INFO:create_model() successfully completed......................................
2023-04-27 16:51:22,322:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:22,322:INFO:Creating metrics dataframe
2023-04-27 16:51:22,324:INFO:Initializing Quadratic Discriminant Analysis
2023-04-27 16:51:22,325:INFO:Total runtime is 0.06416644255320231 minutes
2023-04-27 16:51:22,325:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:22,326:INFO:Initializing create_model()
2023-04-27 16:51:22,326:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9142AEC0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:22,326:INFO:Checking exceptions
2023-04-27 16:51:22,326:INFO:Importing libraries
2023-04-27 16:51:22,326:INFO:Copying training dataset
2023-04-27 16:51:22,326:INFO:Defining folds
2023-04-27 16:51:22,327:INFO:Declaring metric variables
2023-04-27 16:51:22,327:INFO:Importing untrained model
2023-04-27 16:51:22,327:INFO:Quadratic Discriminant Analysis Imported successfully
2023-04-27 16:51:22,327:INFO:Starting cross validation
2023-04-27 16:51:22,327:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:22,390:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,391:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,392:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,396:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,398:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,399:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,407:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,408:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,408:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,408:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,409:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,409:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,409:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,409:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,411:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,416:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,417:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,418:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,419:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,419:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,421:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,421:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,421:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,422:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,424:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,425:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,426:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,436:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,437:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,438:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,724:INFO:Calculating mean and std
2023-04-27 16:51:22,725:INFO:Creating metrics dataframe
2023-04-27 16:51:22,768:INFO:Uploading results into container
2023-04-27 16:51:22,768:INFO:Uploading model into container now
2023-04-27 16:51:22,769:INFO:_master_model_container: 8
2023-04-27 16:51:22,769:INFO:_display_container: 2
2023-04-27 16:51:22,769:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-04-27 16:51:22,769:INFO:create_model() successfully completed......................................
2023-04-27 16:51:22,831:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:22,831:INFO:Creating metrics dataframe
2023-04-27 16:51:22,834:INFO:Initializing Ada Boost Classifier
2023-04-27 16:51:22,834:INFO:Total runtime is 0.07264198064804077 minutes
2023-04-27 16:51:22,834:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:22,834:INFO:Initializing create_model()
2023-04-27 16:51:22,834:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9142AEC0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:22,834:INFO:Checking exceptions
2023-04-27 16:51:22,834:INFO:Importing libraries
2023-04-27 16:51:22,834:INFO:Copying training dataset
2023-04-27 16:51:22,836:INFO:Defining folds
2023-04-27 16:51:22,836:INFO:Declaring metric variables
2023-04-27 16:51:22,836:INFO:Importing untrained model
2023-04-27 16:51:22,836:INFO:Ada Boost Classifier Imported successfully
2023-04-27 16:51:22,837:INFO:Starting cross validation
2023-04-27 16:51:22,837:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:22,978:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,978:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,979:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,981:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,982:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:22,983:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,002:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,003:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,004:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-27 16:51:23,004:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,005:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,005:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,006:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,008:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,009:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,009:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,010:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,010:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,010:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,010:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,011:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,011:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,011:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,013:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,013:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,019:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,020:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,021:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,029:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,030:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,030:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,320:INFO:Calculating mean and std
2023-04-27 16:51:23,320:INFO:Creating metrics dataframe
2023-04-27 16:51:23,363:INFO:Uploading results into container
2023-04-27 16:51:23,364:INFO:Uploading model into container now
2023-04-27 16:51:23,364:INFO:_master_model_container: 9
2023-04-27 16:51:23,364:INFO:_display_container: 2
2023-04-27 16:51:23,364:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-04-27 16:51:23,364:INFO:create_model() successfully completed......................................
2023-04-27 16:51:23,428:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:23,428:INFO:Creating metrics dataframe
2023-04-27 16:51:23,431:INFO:Initializing Gradient Boosting Classifier
2023-04-27 16:51:23,431:INFO:Total runtime is 0.08259940942128499 minutes
2023-04-27 16:51:23,431:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:23,431:INFO:Initializing create_model()
2023-04-27 16:51:23,431:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9142AEC0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:23,431:INFO:Checking exceptions
2023-04-27 16:51:23,431:INFO:Importing libraries
2023-04-27 16:51:23,431:INFO:Copying training dataset
2023-04-27 16:51:23,434:INFO:Defining folds
2023-04-27 16:51:23,434:INFO:Declaring metric variables
2023-04-27 16:51:23,434:INFO:Importing untrained model
2023-04-27 16:51:23,434:INFO:Gradient Boosting Classifier Imported successfully
2023-04-27 16:51:23,434:INFO:Starting cross validation
2023-04-27 16:51:23,434:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:23,839:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,840:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,841:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,848:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,849:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,850:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,852:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,853:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,854:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,856:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,857:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,858:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,859:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,859:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,860:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,863:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,864:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,865:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,895:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,896:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,896:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,914:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,915:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,917:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,935:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,935:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,937:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,953:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,954:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:23,955:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,211:INFO:Calculating mean and std
2023-04-27 16:51:24,211:INFO:Creating metrics dataframe
2023-04-27 16:51:24,260:INFO:Uploading results into container
2023-04-27 16:51:24,261:INFO:Uploading model into container now
2023-04-27 16:51:24,261:INFO:_master_model_container: 10
2023-04-27 16:51:24,261:INFO:_display_container: 2
2023-04-27 16:51:24,261:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-27 16:51:24,261:INFO:create_model() successfully completed......................................
2023-04-27 16:51:24,329:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:24,329:INFO:Creating metrics dataframe
2023-04-27 16:51:24,333:INFO:Initializing Linear Discriminant Analysis
2023-04-27 16:51:24,333:INFO:Total runtime is 0.09762305816014608 minutes
2023-04-27 16:51:24,333:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:24,333:INFO:Initializing create_model()
2023-04-27 16:51:24,333:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9142AEC0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:24,333:INFO:Checking exceptions
2023-04-27 16:51:24,333:INFO:Importing libraries
2023-04-27 16:51:24,333:INFO:Copying training dataset
2023-04-27 16:51:24,335:INFO:Defining folds
2023-04-27 16:51:24,335:INFO:Declaring metric variables
2023-04-27 16:51:24,335:INFO:Importing untrained model
2023-04-27 16:51:24,335:INFO:Linear Discriminant Analysis Imported successfully
2023-04-27 16:51:24,335:INFO:Starting cross validation
2023-04-27 16:51:24,336:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:24,400:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,401:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,402:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,404:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,405:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,406:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,410:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,411:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,411:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,412:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,412:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,413:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,413:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,413:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,413:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,413:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,414:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,419:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,420:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,420:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,421:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,421:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,422:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,432:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,433:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,435:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,440:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,441:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,442:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:24,756:INFO:Calculating mean and std
2023-04-27 16:51:24,757:INFO:Creating metrics dataframe
2023-04-27 16:51:24,806:INFO:Uploading results into container
2023-04-27 16:51:24,807:INFO:Uploading model into container now
2023-04-27 16:51:24,807:INFO:_master_model_container: 11
2023-04-27 16:51:24,807:INFO:_display_container: 2
2023-04-27 16:51:24,807:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-04-27 16:51:24,807:INFO:create_model() successfully completed......................................
2023-04-27 16:51:24,870:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:24,870:INFO:Creating metrics dataframe
2023-04-27 16:51:24,873:INFO:Initializing Extra Trees Classifier
2023-04-27 16:51:24,873:INFO:Total runtime is 0.10662636756896973 minutes
2023-04-27 16:51:24,873:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:24,873:INFO:Initializing create_model()
2023-04-27 16:51:24,873:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9142AEC0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:24,873:INFO:Checking exceptions
2023-04-27 16:51:24,873:INFO:Importing libraries
2023-04-27 16:51:24,873:INFO:Copying training dataset
2023-04-27 16:51:24,875:INFO:Defining folds
2023-04-27 16:51:24,875:INFO:Declaring metric variables
2023-04-27 16:51:24,875:INFO:Importing untrained model
2023-04-27 16:51:24,875:INFO:Extra Trees Classifier Imported successfully
2023-04-27 16:51:24,875:INFO:Starting cross validation
2023-04-27 16:51:24,876:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:25,129:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,130:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,131:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,138:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,139:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,140:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,143:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,144:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,146:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,146:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,148:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,149:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,151:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,152:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,153:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,154:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,155:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,156:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,162:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,163:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,165:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,227:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,227:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,228:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,229:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,229:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,229:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,232:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,233:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,233:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,535:INFO:Calculating mean and std
2023-04-27 16:51:25,536:INFO:Creating metrics dataframe
2023-04-27 16:51:25,597:INFO:Uploading results into container
2023-04-27 16:51:25,598:INFO:Uploading model into container now
2023-04-27 16:51:25,598:INFO:_master_model_container: 12
2023-04-27 16:51:25,598:INFO:_display_container: 2
2023-04-27 16:51:25,599:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-04-27 16:51:25,599:INFO:create_model() successfully completed......................................
2023-04-27 16:51:25,677:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:25,677:INFO:Creating metrics dataframe
2023-04-27 16:51:25,680:INFO:Initializing Extreme Gradient Boosting
2023-04-27 16:51:25,681:INFO:Total runtime is 0.12007891734441122 minutes
2023-04-27 16:51:25,681:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:25,681:INFO:Initializing create_model()
2023-04-27 16:51:25,681:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9142AEC0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:25,681:INFO:Checking exceptions
2023-04-27 16:51:25,681:INFO:Importing libraries
2023-04-27 16:51:25,681:INFO:Copying training dataset
2023-04-27 16:51:25,683:INFO:Defining folds
2023-04-27 16:51:25,683:INFO:Declaring metric variables
2023-04-27 16:51:25,684:INFO:Importing untrained model
2023-04-27 16:51:25,684:INFO:Extreme Gradient Boosting Imported successfully
2023-04-27 16:51:25,684:INFO:Starting cross validation
2023-04-27 16:51:25,685:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:25,795:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,795:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,796:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,796:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,797:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,797:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,800:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,801:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,801:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,820:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,820:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,821:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,821:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,822:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,823:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,831:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,832:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,833:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,840:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,841:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,843:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,849:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,849:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,850:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,851:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,852:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,852:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,864:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,865:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:25,865:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,169:INFO:Calculating mean and std
2023-04-27 16:51:26,170:INFO:Creating metrics dataframe
2023-04-27 16:51:26,222:INFO:Uploading results into container
2023-04-27 16:51:26,223:INFO:Uploading model into container now
2023-04-27 16:51:26,223:INFO:_master_model_container: 13
2023-04-27 16:51:26,223:INFO:_display_container: 2
2023-04-27 16:51:26,224:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-04-27 16:51:26,224:INFO:create_model() successfully completed......................................
2023-04-27 16:51:26,290:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:26,290:INFO:Creating metrics dataframe
2023-04-27 16:51:26,293:INFO:Initializing Light Gradient Boosting Machine
2023-04-27 16:51:26,293:INFO:Total runtime is 0.13029564221700032 minutes
2023-04-27 16:51:26,293:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:26,293:INFO:Initializing create_model()
2023-04-27 16:51:26,293:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9142AEC0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:26,293:INFO:Checking exceptions
2023-04-27 16:51:26,293:INFO:Importing libraries
2023-04-27 16:51:26,293:INFO:Copying training dataset
2023-04-27 16:51:26,295:INFO:Defining folds
2023-04-27 16:51:26,295:INFO:Declaring metric variables
2023-04-27 16:51:26,295:INFO:Importing untrained model
2023-04-27 16:51:26,295:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-27 16:51:26,295:INFO:Starting cross validation
2023-04-27 16:51:26,296:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:26,383:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,384:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,385:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,401:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,402:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,404:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,413:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,414:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,415:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,428:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,429:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,430:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,433:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,434:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,435:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,836:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,836:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,837:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,837:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,837:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,837:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,838:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,838:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,838:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,838:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,838:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,839:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,846:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,847:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,848:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:26,994:INFO:Calculating mean and std
2023-04-27 16:51:26,994:INFO:Creating metrics dataframe
2023-04-27 16:51:27,041:INFO:Uploading results into container
2023-04-27 16:51:27,041:INFO:Uploading model into container now
2023-04-27 16:51:27,041:INFO:_master_model_container: 14
2023-04-27 16:51:27,041:INFO:_display_container: 2
2023-04-27 16:51:27,042:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-27 16:51:27,042:INFO:create_model() successfully completed......................................
2023-04-27 16:51:27,108:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:27,108:INFO:Creating metrics dataframe
2023-04-27 16:51:27,111:INFO:Initializing Dummy Classifier
2023-04-27 16:51:27,112:INFO:Total runtime is 0.14394565423329672 minutes
2023-04-27 16:51:27,112:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:27,112:INFO:Initializing create_model()
2023-04-27 16:51:27,112:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9142AEC0>, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:27,112:INFO:Checking exceptions
2023-04-27 16:51:27,112:INFO:Importing libraries
2023-04-27 16:51:27,112:INFO:Copying training dataset
2023-04-27 16:51:27,114:INFO:Defining folds
2023-04-27 16:51:27,114:INFO:Declaring metric variables
2023-04-27 16:51:27,114:INFO:Importing untrained model
2023-04-27 16:51:27,114:INFO:Dummy Classifier Imported successfully
2023-04-27 16:51:27,114:INFO:Starting cross validation
2023-04-27 16:51:27,114:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:27,198:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,199:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,199:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,199:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-27 16:51:27,200:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,201:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,201:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,202:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-27 16:51:27,203:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,203:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,203:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-27 16:51:27,204:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,205:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,205:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,206:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,207:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,207:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-27 16:51:27,207:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-27 16:51:27,208:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,208:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,209:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,210:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,211:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,212:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-27 16:51:27,212:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,212:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,212:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,212:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-27 16:51:27,213:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,213:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,214:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-27 16:51:27,214:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,215:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,216:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,217:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-27 16:51:27,217:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,218:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,219:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,220:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-27 16:51:27,220:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:27,565:INFO:Calculating mean and std
2023-04-27 16:51:27,565:INFO:Creating metrics dataframe
2023-04-27 16:51:27,616:INFO:Uploading results into container
2023-04-27 16:51:27,616:INFO:Uploading model into container now
2023-04-27 16:51:27,617:INFO:_master_model_container: 15
2023-04-27 16:51:27,617:INFO:_display_container: 2
2023-04-27 16:51:27,617:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-04-27 16:51:27,617:INFO:create_model() successfully completed......................................
2023-04-27 16:51:27,686:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:27,686:INFO:Creating metrics dataframe
2023-04-27 16:51:27,689:INFO:Initializing create_model()
2023-04-27 16:51:27,690:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:27,690:INFO:Checking exceptions
2023-04-27 16:51:27,690:INFO:Importing libraries
2023-04-27 16:51:27,690:INFO:Copying training dataset
2023-04-27 16:51:27,692:INFO:Defining folds
2023-04-27 16:51:27,692:INFO:Declaring metric variables
2023-04-27 16:51:27,692:INFO:Importing untrained model
2023-04-27 16:51:27,692:INFO:Declaring custom model
2023-04-27 16:51:27,692:INFO:Random Forest Classifier Imported successfully
2023-04-27 16:51:27,693:INFO:Cross validation set to False
2023-04-27 16:51:27,693:INFO:Fitting Model
2023-04-27 16:51:27,828:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-27 16:51:27,828:INFO:create_model() successfully completed......................................
2023-04-27 16:51:27,900:INFO:_master_model_container: 15
2023-04-27 16:51:27,900:INFO:_display_container: 2
2023-04-27 16:51:27,900:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-27 16:51:27,900:INFO:compare_models() successfully completed......................................
2023-04-27 16:51:27,900:INFO:Initializing tune_model()
2023-04-27 16:51:27,900:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>)
2023-04-27 16:51:27,900:INFO:Checking exceptions
2023-04-27 16:51:27,902:INFO:Copying training dataset
2023-04-27 16:51:27,903:INFO:Checking base model
2023-04-27 16:51:27,903:INFO:Base model : Random Forest Classifier
2023-04-27 16:51:27,903:INFO:Declaring metric variables
2023-04-27 16:51:27,903:INFO:Defining Hyperparameters
2023-04-27 16:51:27,964:INFO:Tuning with n_jobs=-1
2023-04-27 16:51:27,964:INFO:Initializing RandomizedSearchCV
2023-04-27 16:51:35,631:INFO:best_params: {'actual_estimator__n_estimators': 260, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 4, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': False}
2023-04-27 16:51:35,631:INFO:Hyperparameter search completed
2023-04-27 16:51:35,631:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:35,632:INFO:Initializing create_model()
2023-04-27 16:51:35,632:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AAFFBD6B30>, model_only=True, return_train_score=False, kwargs={'n_estimators': 260, 'min_samples_split': 5, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.0005, 'max_features': 'sqrt', 'max_depth': 4, 'criterion': 'gini', 'class_weight': 'balanced_subsample', 'bootstrap': False})
2023-04-27 16:51:35,632:INFO:Checking exceptions
2023-04-27 16:51:35,632:INFO:Importing libraries
2023-04-27 16:51:35,632:INFO:Copying training dataset
2023-04-27 16:51:35,633:INFO:Defining folds
2023-04-27 16:51:35,634:INFO:Declaring metric variables
2023-04-27 16:51:35,634:INFO:Importing untrained model
2023-04-27 16:51:35,634:INFO:Declaring custom model
2023-04-27 16:51:35,634:INFO:Random Forest Classifier Imported successfully
2023-04-27 16:51:35,634:INFO:Starting cross validation
2023-04-27 16:51:35,635:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:35,953:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:35,954:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:35,956:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:35,968:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:35,969:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:35,969:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:35,970:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:35,971:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:35,971:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:35,977:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:35,979:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:35,980:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:35,993:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:35,994:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:35,995:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:36,038:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:36,039:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:36,040:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:36,041:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:36,041:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:36,041:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:36,042:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:36,042:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:36,043:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:36,054:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:36,055:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:36,056:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:36,067:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:36,068:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:36,069:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:36,557:INFO:Calculating mean and std
2023-04-27 16:51:36,557:INFO:Creating metrics dataframe
2023-04-27 16:51:36,558:INFO:Finalizing model
2023-04-27 16:51:36,958:INFO:Uploading results into container
2023-04-27 16:51:36,959:INFO:Uploading model into container now
2023-04-27 16:51:36,959:INFO:_master_model_container: 16
2023-04-27 16:51:36,959:INFO:_display_container: 3
2023-04-27 16:51:36,960:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=4, max_features='sqrt', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0005,
                       min_samples_leaf=3, min_samples_split=5,
                       min_weight_fraction_leaf=0.0, n_estimators=260,
                       n_jobs=-1, oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2023-04-27 16:51:36,960:INFO:create_model() successfully completed......................................
2023-04-27 16:51:37,025:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:37,025:INFO:choose_better activated
2023-04-27 16:51:37,025:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:37,025:INFO:Initializing create_model()
2023-04-27 16:51:37,025:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:37,025:INFO:Checking exceptions
2023-04-27 16:51:37,026:INFO:Importing libraries
2023-04-27 16:51:37,026:INFO:Copying training dataset
2023-04-27 16:51:37,027:INFO:Defining folds
2023-04-27 16:51:37,027:INFO:Declaring metric variables
2023-04-27 16:51:37,027:INFO:Importing untrained model
2023-04-27 16:51:37,027:INFO:Declaring custom model
2023-04-27 16:51:37,028:INFO:Random Forest Classifier Imported successfully
2023-04-27 16:51:37,028:INFO:Starting cross validation
2023-04-27 16:51:37,028:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:37,204:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,205:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,207:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,207:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,210:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,210:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,211:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,211:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,211:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,216:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,217:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,218:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,223:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,224:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,225:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,233:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,234:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,235:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,235:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,236:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,237:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,285:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,286:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,288:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,290:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,291:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,292:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,310:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,312:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,313:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:37,809:INFO:Calculating mean and std
2023-04-27 16:51:37,809:INFO:Creating metrics dataframe
2023-04-27 16:51:37,810:INFO:Finalizing model
2023-04-27 16:51:37,992:INFO:Uploading results into container
2023-04-27 16:51:37,992:INFO:Uploading model into container now
2023-04-27 16:51:37,993:INFO:_master_model_container: 17
2023-04-27 16:51:37,993:INFO:_display_container: 4
2023-04-27 16:51:37,993:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-27 16:51:37,993:INFO:create_model() successfully completed......................................
2023-04-27 16:51:38,056:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:38,056:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) result for Accuracy is 0.9257
2023-04-27 16:51:38,056:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=4, max_features='sqrt', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0005,
                       min_samples_leaf=3, min_samples_split=5,
                       min_weight_fraction_leaf=0.0, n_estimators=260,
                       n_jobs=-1, oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.919
2023-04-27 16:51:38,056:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) is best model
2023-04-27 16:51:38,057:INFO:choose_better completed
2023-04-27 16:51:38,057:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-04-27 16:51:38,061:INFO:_master_model_container: 17
2023-04-27 16:51:38,061:INFO:_display_container: 3
2023-04-27 16:51:38,061:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-27 16:51:38,061:INFO:tune_model() successfully completed......................................
2023-04-27 16:51:38,183:INFO:Initializing evaluate_model()
2023-04-27 16:51:38,184:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-04-27 16:51:40,449:INFO:Initializing create_model()
2023-04-27 16:51:40,449:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:40,449:INFO:Checking exceptions
2023-04-27 16:51:40,450:INFO:Importing libraries
2023-04-27 16:51:40,450:INFO:Copying training dataset
2023-04-27 16:51:40,452:INFO:Defining folds
2023-04-27 16:51:40,452:INFO:Declaring metric variables
2023-04-27 16:51:40,452:INFO:Importing untrained model
2023-04-27 16:51:40,452:INFO:Random Forest Classifier Imported successfully
2023-04-27 16:51:40,452:INFO:Starting cross validation
2023-04-27 16:51:40,453:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:40,620:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,621:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,622:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,626:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,628:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,629:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,630:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,632:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,633:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,640:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,641:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,641:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,642:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,642:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,642:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,643:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,644:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,644:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,651:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,652:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,653:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,656:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,657:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,657:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,658:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,658:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,659:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,662:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,663:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:40,664:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:41,192:INFO:Calculating mean and std
2023-04-27 16:51:41,193:INFO:Creating metrics dataframe
2023-04-27 16:51:41,194:INFO:Finalizing model
2023-04-27 16:51:41,374:INFO:Uploading results into container
2023-04-27 16:51:41,374:INFO:Uploading model into container now
2023-04-27 16:51:41,379:INFO:_master_model_container: 18
2023-04-27 16:51:41,379:INFO:_display_container: 4
2023-04-27 16:51:41,379:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-27 16:51:41,379:INFO:create_model() successfully completed......................................
2023-04-27 16:51:41,473:INFO:Initializing tune_model()
2023-04-27 16:51:41,473:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>)
2023-04-27 16:51:41,473:INFO:Checking exceptions
2023-04-27 16:51:41,474:INFO:Copying training dataset
2023-04-27 16:51:41,475:INFO:Checking base model
2023-04-27 16:51:41,475:INFO:Base model : Random Forest Classifier
2023-04-27 16:51:41,475:INFO:Declaring metric variables
2023-04-27 16:51:41,476:INFO:Defining Hyperparameters
2023-04-27 16:51:41,565:INFO:Tuning with n_jobs=-1
2023-04-27 16:51:41,565:INFO:Initializing RandomizedSearchCV
2023-04-27 16:51:48,543:INFO:best_params: {'actual_estimator__n_estimators': 260, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 4, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': False}
2023-04-27 16:51:48,544:INFO:Hyperparameter search completed
2023-04-27 16:51:48,544:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:48,544:INFO:Initializing create_model()
2023-04-27 16:51:48,544:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AA9C4F54B0>, model_only=True, return_train_score=False, kwargs={'n_estimators': 260, 'min_samples_split': 5, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.0005, 'max_features': 'sqrt', 'max_depth': 4, 'criterion': 'gini', 'class_weight': 'balanced_subsample', 'bootstrap': False})
2023-04-27 16:51:48,544:INFO:Checking exceptions
2023-04-27 16:51:48,544:INFO:Importing libraries
2023-04-27 16:51:48,544:INFO:Copying training dataset
2023-04-27 16:51:48,546:INFO:Defining folds
2023-04-27 16:51:48,546:INFO:Declaring metric variables
2023-04-27 16:51:48,546:INFO:Importing untrained model
2023-04-27 16:51:48,546:INFO:Declaring custom model
2023-04-27 16:51:48,547:INFO:Random Forest Classifier Imported successfully
2023-04-27 16:51:48,547:INFO:Starting cross validation
2023-04-27 16:51:48,547:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:48,836:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,837:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,837:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,844:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,845:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,845:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,846:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,847:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,848:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,851:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,852:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,853:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,856:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,857:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,858:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,868:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,869:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,869:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,870:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,870:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,871:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,871:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,872:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,873:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,883:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,884:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,884:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,892:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,893:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:48,894:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,435:INFO:Calculating mean and std
2023-04-27 16:51:49,435:INFO:Creating metrics dataframe
2023-04-27 16:51:49,437:INFO:Finalizing model
2023-04-27 16:51:49,566:INFO:Uploading results into container
2023-04-27 16:51:49,566:INFO:Uploading model into container now
2023-04-27 16:51:49,567:INFO:_master_model_container: 19
2023-04-27 16:51:49,567:INFO:_display_container: 5
2023-04-27 16:51:49,567:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=4, max_features='sqrt', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0005,
                       min_samples_leaf=3, min_samples_split=5,
                       min_weight_fraction_leaf=0.0, n_estimators=260,
                       n_jobs=-1, oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2023-04-27 16:51:49,567:INFO:create_model() successfully completed......................................
2023-04-27 16:51:49,661:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:49,661:INFO:choose_better activated
2023-04-27 16:51:49,661:INFO:SubProcess create_model() called ==================================
2023-04-27 16:51:49,662:INFO:Initializing create_model()
2023-04-27 16:51:49,662:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-27 16:51:49,662:INFO:Checking exceptions
2023-04-27 16:51:49,662:INFO:Importing libraries
2023-04-27 16:51:49,662:INFO:Copying training dataset
2023-04-27 16:51:49,664:INFO:Defining folds
2023-04-27 16:51:49,664:INFO:Declaring metric variables
2023-04-27 16:51:49,664:INFO:Importing untrained model
2023-04-27 16:51:49,664:INFO:Declaring custom model
2023-04-27 16:51:49,664:INFO:Random Forest Classifier Imported successfully
2023-04-27 16:51:49,665:INFO:Starting cross validation
2023-04-27 16:51:49,665:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-27 16:51:49,849:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,849:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,850:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,850:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,850:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,851:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,851:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,851:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,851:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,852:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,852:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,854:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,869:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,870:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,870:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,872:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,872:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,873:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,873:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,875:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,885:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,885:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,886:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,886:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,887:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,887:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,896:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,897:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:49,898:WARNING:C:\Users\123456\Documents\GitHub\INSE6220\venv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-27 16:51:50,434:INFO:Calculating mean and std
2023-04-27 16:51:50,434:INFO:Creating metrics dataframe
2023-04-27 16:51:50,435:INFO:Finalizing model
2023-04-27 16:51:50,618:INFO:Uploading results into container
2023-04-27 16:51:50,618:INFO:Uploading model into container now
2023-04-27 16:51:50,618:INFO:_master_model_container: 20
2023-04-27 16:51:50,618:INFO:_display_container: 6
2023-04-27 16:51:50,619:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-27 16:51:50,619:INFO:create_model() successfully completed......................................
2023-04-27 16:51:50,714:INFO:SubProcess create_model() end ==================================
2023-04-27 16:51:50,714:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) result for Accuracy is 0.9257
2023-04-27 16:51:50,715:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=4, max_features='sqrt', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0005,
                       min_samples_leaf=3, min_samples_split=5,
                       min_weight_fraction_leaf=0.0, n_estimators=260,
                       n_jobs=-1, oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.919
2023-04-27 16:51:50,715:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) is best model
2023-04-27 16:51:50,715:INFO:choose_better completed
2023-04-27 16:51:50,715:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-04-27 16:51:50,719:INFO:_master_model_container: 20
2023-04-27 16:51:50,720:INFO:_display_container: 5
2023-04-27 16:51:50,720:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-27 16:51:50,720:INFO:tune_model() successfully completed......................................
2023-04-27 16:51:50,874:INFO:Initializing interpret_model()
2023-04-27 16:51:50,874:INFO:interpret_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>)
2023-04-27 16:51:50,874:INFO:Checking exceptions
2023-04-27 16:51:50,874:INFO:Soft dependency imported: shap: 0.41.0
2023-04-27 16:51:50,887:INFO:plot type: summary
2023-04-27 16:51:50,887:INFO:Creating TreeExplainer
2023-04-27 16:51:50,889:INFO:Compiling shap values
2023-04-27 16:52:00,349:INFO:Visual Rendered Successfully
2023-04-27 16:52:00,349:INFO:interpret_model() successfully completed......................................
2023-04-27 16:52:00,444:INFO:Initializing interpret_model()
2023-04-27 16:52:00,444:INFO:interpret_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=32, plot=reason, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>)
2023-04-27 16:52:00,444:INFO:Checking exceptions
2023-04-27 16:52:00,444:INFO:Soft dependency imported: shap: 0.41.0
2023-04-27 16:52:00,457:INFO:plot type: reason
2023-04-27 16:52:00,457:INFO:model type detected: type 1
2023-04-27 16:52:00,457:INFO:Creating TreeExplainer
2023-04-27 16:52:00,459:INFO:Compiling shap values
2023-04-27 16:52:00,459:INFO:model type detected: Unknown
2023-04-27 16:52:00,464:INFO:Visual Rendered Successfully
2023-04-27 16:52:00,464:INFO:interpret_model() successfully completed......................................
2023-04-27 16:52:00,562:INFO:Initializing interpret_model()
2023-04-27 16:52:00,562:INFO:interpret_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=reason, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AA916F2BF0>)
2023-04-27 16:52:00,562:INFO:Checking exceptions
2023-04-27 16:52:00,562:INFO:Soft dependency imported: shap: 0.41.0
2023-04-27 16:52:00,575:INFO:plot type: reason
2023-04-27 16:52:00,575:INFO:model type detected: type 1
2023-04-27 16:52:00,575:INFO:Creating TreeExplainer
2023-04-27 16:52:00,577:INFO:Compiling shap values
2023-04-27 16:52:00,577:WARNING:Observation set to None. Model agnostic plot will be rendered.
2023-04-27 16:52:00,595:INFO:Visual Rendered Successfully
2023-04-27 16:52:00,595:INFO:interpret_model() successfully completed......................................
